<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OSGeo.MapGuide.Geometry</name>
    </assembly>
    <members>
        <member name="T:OSGeo.MapGuide.MgCoordinateDimension">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateDimension" /> defines a set of integer constants
             which can be OR&apos;d together to specify the dimensionality of
             an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> instance.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateDimension.XY">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Specifies that the coordinate has X and Y ordinates.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateDimension.XYZ">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Specifies that the coordinate has X, Y, and Z ordinates.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateDimension.M">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Specifies that the coordinate has an M ordinate.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometryEntityType">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometryEntityType" /> defines two integer constants which
             signify whether an <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> is a geometry or a
             geometry component.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryEntityType.GeometryComponent">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Specifies that the geometric entity is a geometry component.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryEntityType.Geometry">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Specifies that the geometric entity is a geometry.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometricPathInstructionType">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometricPathInstructionType" /> defines enumerated values used to specify
             the instructions contained in a geometric path. See <see cref="!:OSGeo.MapGuide.MgGeometricPathIterator" />
             for a definition of a geometric path.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometricPathInstructionType.MoveTo">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Defines the beginning coordinate of a new segment in a geometric
             path.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometricPathInstructionType.LineTo">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Defines a straight line from the last coordinate in the geometric
             path to the coordinate included with this instruction.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometricPathInstructionType.QuadTo">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Defines a quadratic curve from the last coordinate in the geometric
             path using the first coordinate of this instruction as the end point
             and the second coordinate as the control point.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometricPathInstructionType.Close">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Defines a line from the current coordinate in the geometric path back
             to the last <see cref="!:OSGeo.MapGuide.MgGeometricPathInstruction" />.MoveTo, which is the beginning
             of the last segment in the path.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometryComponentType">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometryComponentType" /> defines a set of integer constants
             used to signify the type of a geometry component instance.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryComponentType.LinearRing">
            <summary>
             Specifies the geometry component is a <see cref="T:OSGeo.MapGuide.MgLinearRing" />.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryComponentType.ArcSegment">
            <summary>
             Specifies the geometry component is an <see cref="T:OSGeo.MapGuide.MgArcSegment" />.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryComponentType.LinearSegment">
            <summary>
             Specifies the geometry component is an <see cref="T:OSGeo.MapGuide.MgLinearSegment" />.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryComponentType.CurveRing">
            <summary>
             Specifies the geometry component is an <see cref="T:OSGeo.MapGuide.MgCurveRing" />.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometryType">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometryType" /> defines integer constants used to signify the
             derived type of an <see cref="T:OSGeo.MapGuide.MgGeometry" /> instance.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.Point">
            <summary>
             Specifies that the geometry is a Point.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.LineString">
            <summary>
             Specifies that the geometry is a LineString.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.Polygon">
            <summary>
             Specifies that the geometry is a Polygon.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.MultiPoint">
            <summary>
             Specifies that the geometry is a MultiPoint.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.MultiLineString">
            <summary>
             Specifies that the geometry is a MultiLineString.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.MultiPolygon">
            <summary>
             Specifies that the geometry is a MultiPolygon.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.MultiGeometry">
            <summary>
             Specifies that the geometry is a MultiGeometry. In OpenGIS
             this is referred to as a GeometryCollection.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.CurveString">
            <summary>
             Specifies that the geometry is a CurveString.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.CurvePolygon">
            <summary>
             Specifies that the geometry is a CurvePolygon.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.MultiCurveString">
            <summary>
             Specifies that the geometry is a MultiLineString.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometryType.MultiCurvePolygon">
            <summary>
             Specifies the geometry is a MultiPolygon.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometrySimplificationAlgorithmType">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometrySimplificationAlgorithmType" /> defines constants indicating
             the various simplification algorithms available for simplifying
             geometry instances
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometrySimplificationAlgorithmType.DouglasPeucker">
            <summary>
             Specifies that the Douglas-Peucker algorithm be used for simplification.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgGeometrySimplificationAlgorithmType.TopologyPreserving">
            <summary>
             Specifies that the Topology Preserving algorithm be used for simplification
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemCodeFormat">
            <summary>
             Defines constants used to indicate the WKT flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemCodeFormat.Mentor">
            <summary>
             Mentor/CS-Map flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemCodeFormat.Epsg">
            <summary>
             EPSG flavor
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemErrorCode">
            <summary>
             Defines various error codes returned by the Coordinate System API
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.AZM">
            <summary>
             Y axis azimuth specification is invalid.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.AZMTH">
            <summary>
             Great circle azimuth value is invalid.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.LAT">
            <summary>
             Invalid latitude detected in definition.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.LATEQU">
            <summary>
             Latitudes of defining points are equal.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.LNG">
            <summary>
             Invalid longitude detected in definition.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.LNGEQU">
            <summary>
             First defining point may not be on the equator.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.MAPSCL">
            <summary>
             Invalid map scale value detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.MEREQU">
            <summary>
             Standard meridians are the same.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.MRCAT">
            <summary>
             Defining great circle is a parallel, try Mercator.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.MSCOEF">
            <summary>
             Invalid coefficient value specified.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.NOREF">
            <summary>
             System must be referenced to a datum or an ellipsoid.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.NOTNRTH">
            <summary>
             Standard paralells are not ordered correctly.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.NRTHLAT">
            <summary>
             Standard parallells are not ordered correctly.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.NRTHPNT">
            <summary>
             Point defining Y axis direction incorrectly specified.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.ORGLAT">
            <summary>
             Invalid latitude value given for projection origin.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.ORGLNG">
            <summary>
             Invalid longitude value given for projection origin.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.PLL90">
            <summary>
             Standard parallel location exceeds 90 degrees.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.PLLEQU">
            <summary>
             Standard parallel locations are the same.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.PLLLRG">
            <summary>
             Standard parallel locations not inbetween poles.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.PLLREV">
            <summary>
             Order of standard parallels incorrect.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.PLLZERO">
            <summary>
             Standard parallel location is zero.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.POLDD">
            <summary>
             Poles are too far apart.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.POLDUP">
            <summary>
             Poles are not sufficiently separated.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.POLLAT">
            <summary>
             Latitude of pole incorrectly specified.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.POLLNG">
            <summary>
             Longitude of pole incorrectly specified.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.QUAD">
            <summary>
             Invalid quad specification detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.SCLRED">
            <summary>
             Invalid scale reduction value encountered.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.SOTHLAT">
            <summary>
             Standard parallels are not ordered correctly.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.STDLAT">
            <summary>
             Standard parallel is incorrectly specified.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.STDLNG">
            <summary>
             Standard meridian specification is invalid.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.STDPLL">
            <summary>
             Standard parallel specifications are invalid.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.STDSOU">
            <summary>
             Southern parallel is equal to or north of northern.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.STDWEST">
            <summary>
             Standard meridian must be east of the central meridian.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.UNIT">
            <summary>
             Invalid unit specification detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.INVPRJ">
            <summary>
             Invalid projection key name detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.INVDTM">
            <summary>
             Invalid datum name specification detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.INVELP">
            <summary>
             Invalid ellipsoid name specification detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.LLRNG">
            <summary>
             Longitude range is too small.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.RNGORD">
            <summary>
             Longitude range values out of order.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.INVQUAD">
            <summary>
             Invalid quadrant specification given.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.GEOMM">
            <summary>
             Invalid invalid geographic useful range detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.CRTMM">
            <summary>
             Invalid invalid cartesian useful range detected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.PLLED">
            <summary>
             Standard parallels must be equidistant from poles.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.PLRLAT">
            <summary>
             Origin latitude is not polar; use oblique form of projection.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.USEPLR">
            <summary>
             Origin latitude is polar; use polar form of projection.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.UTMZON">
            <summary>
             Invalid value given for UTM zone number.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.HMISPHR">
            <summary>
             Invalid hemisphere specification (+1 = north, -1 = south).
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.USESW">
            <summary>
             Central azimuth is 90, use the Swiss Oblique Mercator.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.MAX15">
            <summary>
             Eastern meridian is more than 15 degrees from the central meridian.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.OBLQPOLE">
            <summary>
             Invalid oblique pole specification.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.AFFZERO">
            <summary>
             Denominator of affine is zero.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.NRDATUM">
            <summary>
             Non-earth system referenced to a datum.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.OSTN97">
            <summary>
             OSTN97.TXT grid shift file could not be located or opened with read access.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.DENRGN">
            <summary>
             Invalid region code specified for Danish System 34/45 (1=J, 2=S, 3=B).
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.ELEVEL">
            <summary>
             Value supplied for elevated ellipsoid is outside acceptable range
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.OSTN02">
            <summary>
             OSTN02.TXT grid shift file could not be located or opened with read access.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.TMKRG0">
            <summary>
             Transverse Mercator Kruger formulation requested with non-zero origin latitude.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.Ok">
            <summary>
             The operation succeeded
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.OutOfMemory">
            <summary>
             The operation ran out of memory
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.InitializationFailed">
            <summary>
             An initialization operation failed
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.ConversionFailed">
            <summary>
             A conversion operation failed
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.NullArgument">
            <summary>
             An argument supplied to an operation was null
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemErrorCode.InvalidArgument">
            <summary>
             An argument supplied to an operation was invalid
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod">
            <summary>
             Defines the type of a geodetic transformation method
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.None">
            <summary>
             None
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.Molodensky">
            <summary>
             Use the Molodensky transformation to convert to WGS84
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.MReg">
            <summary>
             Use the Multiple Regression Transformation formulas.
             If such a definition is not available, default to the
             Bursa/Wolfe Seven Parameter Transformation.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.Bursa">
            <summary>
             Use the Bursa/Wolfe to convert to WGS84, default to
             Molodensky if the necessary parameters are not present.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.NAD27">
            <summary>
             Use the NADCON or Canadian National Transformation
             emulation as appropriate to convert to NAD83, and
             consider the result to be WGS84 coordinates.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.NAD83">
            <summary>
             Consider the coordinates to be WGS84 coordinates already, no shift is to be performed.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.WGS84">
            <summary>
             The coordinates are WGS84 coordinates already, no datum shift is required
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.WGS72">
            <summary>
             Use an internal formula to convert to WGS84
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.HPGN">
            <summary>
             Use the NADCOM algorithm, but use the HPGN data
             files, to shift the coordinates to NAD83, then
             consider the result to be WGS84 coordinates
             without any further datum shift
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.SevenParameter">
            <summary>
             Seven Parameter Transformation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.AGD66">
            <summary>
             AGD66&lt;-&gt;GDA94 via Grid Files
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.ThreeParameter">
            <summary>
             Three Parameter Transformation - Obsolete technique that is kept around for backward compatibility
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.SixParameter">
            <summary>
             Six Parameter Transformation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.FourParameter">
            <summary>
             Four Parameter Transformation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.AGD84">
            <summary>
             AGD84&lt;-&gt;GDA94 via Grid Files
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.NZGD49">
            <summary>
             NZGD49&lt;-&gt;NZGD2K via Grid File
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.ATS77">
            <summary>
             ATS77&lt;-&gt;NAD83 via Grid Files
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.GDA94">
            <summary>
             Is GDA94, no shift required.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.NZGD2K">
            <summary>
             Is NZGD2000, no shift required.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.CSRS">
            <summary>
             NAD83&lt;-&gt;CSRS Via Grid Files.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.TOKYO">
            <summary>
             TOKYO&lt;-&gt;JGD2k via Grid Files
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.RGF93">
            <summary>
             NTF&lt;-&gt;RGF93 via Grid File
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.ED50">
            <summary>
             ED50 &lt;--&gt; ETRF89 via Grid Files
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.DHDN">
            <summary>
             DHDN&lt;-&gt;ETRF89 via Grid Files
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.ETRF89">
            <summary>
             Is ETRF89, no shift required
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.Lclgrf">
            <summary>
             Local Geodetic Reference System
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.Geocentric">
            <summary>
             Geocentric Translation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.CHENYX">
            <summary>
             Swiss Ch1903 to CH1903+
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridOrientation">
            <summary>
             An enumeration of the supported values for the m_Orientation member
             of several objects related to grids and graticules. 
             This value is used to qualify objects which are of the &quot;iso" type.  I.e. a
             grid line is referred to as an isoline as it is the locus of points which
             have a specific value for either the easting or the northing.  It is this
             value which indicates which.  Thus, a grid line which is classified as
             having an &quot;EastWest" orientation will be a isoline which is the locus of
             points which share a common easting value, and the &quot;m_Value" element
             of that object will be an easting value.  Note that in this example,
             the line is typically a vertical line.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridOrientation.None">
            <summary>
             Not specified yet, initialize to this value.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridOrientation.EastWest">
            <summary>
             The object represents a constant easting value.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridOrientation.NorthSouth">
            <summary>
             The object represents a constant northing value.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridOrientation.Unknown">
            <summary>
             Indicates the failure of an algorithm or other problem.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType">
            <summary>
             An enumeration of the various types of specialized grids/graticules
             currently supported.  A specialized grid is one for which specific
             standards exist to which the results of this feature are compliant with.
             A generic grid is a simple non-standardized grid of a coordinate system
             drawn in a viewport based on another coordinate system. 
             The values assigned are intended to support grouping standardized grids
             with similar features and is currently entirely arbitrary.  Using a
             numeric literal instead of thes names of the defined constants is a sure
             way to write code that will get broken in the future.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType.None">
            <summary>
             Not specified yet, initialize to this value.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType.Generic">
            <summary>
             Generic grid of a specified coordinate system; may be
             geographic or projected.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType.MGRS">
            <summary>
             Specialized grid: MGRS (Military Grid Reference System)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType.USNG">
            <summary>
             Specialized grid: USNG (United States National Grid)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType.Unknown">
            <summary>
             Indicates the failure of an algorithm or other problem.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel">
            <summary>
             Defines constants used to indicate the MGRS grid level
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.MgrsNone">
            <summary>
             None
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.MgrsUtm">
            <summary>
             UTM
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.MgrsUps">
            <summary>
             UPS
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.Mgrs100Km">
            <summary>
             100km
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.Mgrs10Km">
            <summary>
             10km
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.Mgrs1Km">
            <summary>
             1km
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.Mgrs100m">
            <summary>
             100m
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.Mgrs10m">
            <summary>
             10m
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.Mgrs1m">
            <summary>
             1m
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.MgrsUnknown">
            <summary>
             Unknown
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme">
            <summary>
             Defines constants used to indicate the MGRS lettering scheme
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme.Normal">
            <summary>
             Normal
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme.Alternative">
            <summary>
             Alternative
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition" /> defines enumerated values used to
             specify the the location desired relative to the subject MGRS grid sqaure
             when evaluating an MGRS string.
             Note that the values used in this enumeration match those used by the
             CS-MAP interface.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.None">
            <summary>
             Specifies the grid square position is not set as yet.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.Center">
            <summary>
             Specifies the center of the grid square; the default previous to this
             revision (Dec 2009).
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.SouthWest">
            <summary>
             Specifies the southwest corner of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.West">
            <summary>
             Specifies the midpoint of the western edge of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.NorthWest">
            <summary>
             Specifies the northwest corner of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.North">
            <summary>
             Specifies the midpoint of the northern edge of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.NorthEast">
            <summary>
             Specifies the southwest corner of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.East">
            <summary>
             Specifies the midpoint of the eastern edge of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.SouthEast">
            <summary>
             Specifies the southeast corner of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.South">
            <summary>
             Specifies the midpoint of the southern edge of the MGRS grid square.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.Unknown">
            <summary>
             Specifies an error return value, end of table, or other abnormal situation.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemProjectionCode">
            <summary>
             Defines coordinate system projection codes
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Alber">
            <summary>
             Albers Equal Area Conic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Azede">
            <summary>
             Azimuthal Equi-Distant; Elevated ellipsoid.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Azmea">
            <summary>
             Lambert Azimuthal Equal Area Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Azmed">
            <summary>
             Lambert Azimuthal Equidistant Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Bipolar">
            <summary>
             Bipolar Oblique Conformal Conic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Bonne">
            <summary>
             Bonne Pseudoconical Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Cassini">
            <summary>
             Cassini Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Eckert4">
            <summary>
             Ekert Pseudocylindrical Projection; Number IV
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Eckert6">
            <summary>
             Ekert Pseudocylindrical Projection; Number VI
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Edcnc">
            <summary>
             Equidistant Conic Projection; aka Simple Conic
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Edcyl">
            <summary>
             Equidistant Cylindrical Projection (Spherical only)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.GaussK">
            <summary>
             Gauss-Kruger: Transverse Mercator without scale reduction parameter.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Gnomonic">
            <summary>
             Gnomonic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Goode">
            <summary>
             Goode Homolosine Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Hom1uv">
            <summary>
             Unrectified Hotine Oblique Mercator Projection; Sngl Point Form
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Hom1xy">
            <summary>
             Rectified Hotine Oblique Mercator Projection; Single Point Form
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Hom2uv">
            <summary>
             Unrectified Hotine Oblique Mercator Projection; Two Point Form
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Hom2xy">
            <summary>
             Rectified Hotine Oblique Mercator Projection; Two Point Form
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Krovak">
            <summary>
             Czech Krovak; original.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Krvk95">
            <summary>
             Czech Krovak; includes 1995 adjustment.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.LL">
            <summary>
             Null Projection; produces/processes Latitude and Longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Lm1sp">
            <summary>
             Single standard parallel variation of the Lambert Conformal Conic.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Lm2sp">
            <summary>
             Double standard parallel variation of the Lambert Conformal Conic.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Lmblg">
            <summary>
             Belgian variation of the Lambert Conformal Conic Projection.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Lmtan">
            <summary>
             Lambert Tangential Conformal Conic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Miller">
            <summary>
             Miller Cylindrical Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Mndotl">
            <summary>
             Minnesota DOT variation of the Lambert Conformal Conic.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Mndott">
            <summary>
             Minnesota DOT variation of the Transverse Mercator projection.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Modpc">
            <summary>
             Lallemand IMW Modified Polyconic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Mollweid">
            <summary>
             Mollweide Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Mrcat">
            <summary>
             Mercator Cylindrical Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.MrcatK">
            <summary>
             Standard Mercator with a scale reduction factor instead of a standard parallel.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Mstero">
            <summary>
             Modified Sterographic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Neacyl">
            <summary>
             Normal Aspect; Equal Area Cylindrical Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Nerth">
            <summary>
             Non-georeferenced coordinate system.  Named Non-Earth by Map Info.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Nzealand">
            <summary>
             New Zealand National Grid
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.OblqM">
            <summary>
             Oblique Mercator (obsolete)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Obqcyl">
            <summary>
             Oblique Cylindrical; a generalized version of the Swiss projection; specifically for Hungary
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Ortho">
            <summary>
             Orthographic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Ostn02">
            <summary>
             The Transverse Mercator with specific parameters; with the OSTN02 grid shift tacked on.  This is a combination of a projection and a datum shift
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Ostn97">
            <summary>
             The Transverse Mercator with specific parameters; with the OSTN97 grid shoft tacked on.  This is a combination of a projection and a datum shift
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Ostro">
            <summary>
             Oblique Sterographic
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Plycn">
            <summary>
             Hassler American Polyconic Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Pstro">
            <summary>
             Polar sterographic
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Pstrosl">
            <summary>
             Polar sterographic with standard latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Rskew">
            <summary>
             cs_PRJCOD_RSKEW
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Rskewc">
            <summary>
             cs_PRJCOD_RSKEWC
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Rskewo">
            <summary>
             cs_PRJCOD_RSKEWO - Rectified Skew Orthomorphic; Skew Azimuth at Rectified Origin
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Robinson">
            <summary>
             Robinson Cylindrical Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Sinus">
            <summary>
             Sinusoidal Projection; Optionally Interrupted
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Sotrm">
            <summary>
             South Oriented variation of the Transverse Mercator Projection.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Sstro">
            <summary>
             Synder&apos;s Oblique Sterographic
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Swiss">
            <summary>
             &quot;Swiss" Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Sys34">
            <summary>
             Combination of Transverse Mercator and a polynomial expansion used in Denmark
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Sys34_99">
            <summary>
             Combination of Transverse Mercator and polynomial expansion used in Denmark.  Polynominals are of the 1999 vintage.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Teacyl">
            <summary>
             Transverse Aspect; Equal Area Cylindrical Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Tm">
            <summary>
             Transverse Mercator or Gauss Kruger Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Trmeraf">
            <summary>
             Transverse Mercator with affiine post-processor.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Trmrkrg">
            <summary>
             Transverse Mercator using Kruger Formulation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Trmrs">
            <summary>
             Transverse Mercator per J. P. Snyder.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Vdgrntn">
            <summary>
             Van Der Grinten Projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Wccsl">
            <summary>
             Wisconsin County Coord System variation; Lambert Conformal Conic
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Wccst">
            <summary>
             Wisconsin County Coord System variation; Transverse Mercator projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Utm">
            <summary>
             The UTM direct variation of the Transverse Mercator projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Winkl">
            <summary>
             Winkel-Tripel; variable standard latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Nrthsrt">
            <summary>
             Nerth with scale and rotation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Lmbrtaf">
            <summary>
             Lambert Conformal Conic with affine post-processor.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Sys34_01">
            <summary>
             Combination of Transverse Mercator and polynomial expansion used in Denmark.  Polynominals are of the 2001 vintage.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.EdcylE">
            <summary>
             Equidistant Cylindrical Projection, Ellipsoidal or Spherical
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.PlateCarree">
            <summary>
             Inplementation of Plate Carree as a variation of the Equidistant Cylindrical
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.PvMercator">
            <summary>
             Popular Visualization Pseudo Mercator (aka Google Earth)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.LmMich">
            <summary>
             Lambert Conformal Conic, Michigan Variation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionCode.Unknown">
            <summary>
             Unknown
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType">
            <summary>
             Defines the type of projection format
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.None">
            <summary>
             none (no formatting)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Lng">
            <summary>
             longitude(cs_FRMT_LNG), azimuth(cs_FRMT_AZM)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Lat">
            <summary>
             latitude (cs_FRMT_LAT)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Angd">
            <summary>
             angular distance (cs_FRMT_ANGD)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Coef">
            <summary>
             coefficient (cs_FRMT_COEF)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Xxx">
            <summary>
             coefficient (cs_FRMT_XXX)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Yyy">
            <summary>
             coefficient (cs_FRMT_YYY)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Scl">
            <summary>
             coefficient (cs_FRMT_SCL)
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.Rot">
            <summary>
             coefficient (cs_FRMT_ROT)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType">
            <summary>
             Defines the logical types of a coordinate system projection
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.None">
            <summary>
             no specification
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.Longitude">
            <summary>
             longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.Latitude">
            <summary>
             latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.Azimuth">
            <summary>
             azimuth
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.AngularDistance">
            <summary>
             angular distance
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.ComplexCoefficient">
            <summary>
             complex coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.UTMZoneNumber">
            <summary>
             UTM zone number
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.HemisphereSelection">
            <summary>
             hemisphere selection: north &gt; 0, south &lt; 0
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.GeoidHeight">
            <summary>
             geoid height in meters
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.Elevation">
            <summary>
             elevation, system units
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.AffineCoefficient">
            <summary>
             affine coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.XYCoordinate">
            <summary>
             X/Y Coordinate
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.Scale">
            <summary>
             Scale value
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType">
            <summary>
             Defines the types of coordinate system projection parameters
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.NotUsed">
            <summary>
             Not used.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Cntmer">
            <summary>
             Central Meridian
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Nstdpll">
            <summary>
             Northern Standard Parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Sstdpll">
            <summary>
             Southern Standard Parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Stdpll">
            <summary>
             Standard Parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Gcp1lng">
            <summary>
             First Great Circle Point Longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Gcp1lat">
            <summary>
             First Great Circle Point Latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Gcp2lng">
            <summary>
             Second Great Circle Point Longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Gcp2lat">
            <summary>
             Second Great Circle Point Latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Gcplng">
            <summary>
             Great Circle Point Longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Gcplat">
            <summary>
             Great Circle Point Latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Gcazm">
            <summary>
             Great Circle Azimuth
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Yaxisaz">
            <summary>
             Y axis azimuth
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Estdmer">
            <summary>
             Eastern Standard Meridian
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Nparall">
            <summary>
             Northern Parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Sparall">
            <summary>
             Southern Parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.P1lng">
            <summary>
             First pole longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.P1lat">
            <summary>
             First pole latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.P2lng">
            <summary>
             Second pole longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.P2lat">
            <summary>
             Second pole latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Adp1p2">
            <summary>
             Distance between the poles.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Adsp1">
            <summary>
             Angular distance to the first standard parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Adsp2">
            <summary>
             Angular distance to the second standard parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Cmplxan">
            <summary>
             Complex Parameter A (n). Label string includes a %s for generation by sprintf.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Cmplxbn">
            <summary>
             Complex Parameter B (n). Label string includes a %s for generation by sprintf.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Westll">
            <summary>
             Western end of Longitude range.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Eastll">
            <summary>
             Eastern end of Longitude range
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Utmzn">
            <summary>
             UTM Zone Number
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Hsns">
            <summary>
             North/South Hemisphere
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Ghgt">
            <summary>
             Average Geoid Height
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Aelev">
            <summary>
             Average Elevation
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Polelng">
            <summary>
             Oblique Pole Longitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Polelat">
            <summary>
             Oblique Pole Latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Ostdpll">
            <summary>
             Oblique Cone Standard Parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Stdcir">
            <summary>
             Standard Circle Latitude
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Afa0">
            <summary>
             Affine A0 Coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Afb0">
            <summary>
             Affine B0 Coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Afa1">
            <summary>
             Affine A1 Coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Afa2">
            <summary>
             Affine A2 Coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Afb1">
            <summary>
             Affine B1 Coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Afb2">
            <summary>
             Affine B2 Coefficient
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Nrmlpll">
            <summary>
             Normal Parallel
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Denrgn">
            <summary>
             Danish System 24 Region
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Skwazm">
            <summary>
             cs_PRMCOD_SKWAZM - Skew Azimuth at Rectified Origin.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Sclrotorgx">
            <summary>
             X Coordinate of Scale/Rotate Origin
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Sclrotorgy">
            <summary>
             Y Coordinate of Scale/Rotate Origin
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Nrthscl">
            <summary>
             Cartesian Scale Factor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.Nrthrot">
            <summary>
             Cartesian Rotation Angle
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.EllipsoidScale">
            <summary>
             Ellipsoid scaling factor
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemType">
            <summary>
             Defines constants used to indicate the type of a coordinate
             system.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemType.Unknown">
            <summary>
             Specifies the coordinate system is not set.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemType.Arbitrary">
            <summary>
             Specifies that the coordinate system is arbitrary. That is,
             it is not spatially bound to the earth, and the initial
             keyword in the WKT definition of the coordinate system is
             LOCAL_CS.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemType.Geographic">
            <summary>
             Specifies that the coordinate system is geographic. That is,
             the initial keyword in the WKT definition of the coordinate
             system is GEOGCS.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemType.Projected">
            <summary>
             Specifies that the coordinate system is projected. In most
             cases, the initial keyword in the WKT definition of the
             coordinate system is PROJCS. In some cases, the initial
             keyword is GEOGCS.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemUnitCode">
            <summary>
             Defines the various coordinate system unit codes
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Meter">
            <summary>
             Meter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Foot">
            <summary>
             Foot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Inch">
            <summary>
             Inch
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IFoot">
            <summary>
             IFoot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.ClarkeFoot">
            <summary>
             ClarkeFoot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IInch">
            <summary>
             IInch
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Centimeter">
            <summary>
             Centimeter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Kilometer">
            <summary>
             Kilometer
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Yard">
            <summary>
             Yard
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.SearsYard">
            <summary>
             SearsYard
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Mile">
            <summary>
             Mile
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IYard">
            <summary>
             IYard
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IMile">
            <summary>
             IMile
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Knot">
            <summary>
             Knot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.NautM">
            <summary>
             NautM
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Lat66">
            <summary>
             Lat66
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Lat83">
            <summary>
             Lat83
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Decimeter">
            <summary>
             Decimeter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Millimeter">
            <summary>
             Millimeter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Dekameter">
            <summary>
             Dekameter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Hectometer">
            <summary>
             Hectometer
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.GermanMeter">
            <summary>
             GermanMeter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.CaGrid">
            <summary>
             CaGrid
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.ClarkeChain">
            <summary>
             ClarkeChain
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.GunterChain">
            <summary>
             GunterChain
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.BenoitChain">
            <summary>
             BenoitChain
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.SearsChain">
            <summary>
             SearsChain
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.ClarkeLink">
            <summary>
             ClarkeLink
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.GunterLink">
            <summary>
             GunterLink
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.BenoitLink">
            <summary>
             BenoitLink
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.SearsLink">
            <summary>
             SearsLink
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Rod">
            <summary>
             Rod
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Perch">
            <summary>
             Perch
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Pole">
            <summary>
             Pole
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Furlong">
            <summary>
             Furlong
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Rood">
            <summary>
             Rood
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.CapeFoot">
            <summary>
             CapeFoot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Brealey">
            <summary>
             Brealey
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.SearsFoot">
            <summary>
             SearsFoot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.GoldCoastFoot">
            <summary>
             GoldCoastFoot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.MicroInch">
            <summary>
             MicroInch
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IndianYard">
            <summary>
             IndianYard
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IndianFoot">
            <summary>
             IndianFoot
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IndianFt37">
            <summary>
             IndianFt37
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IndianFt62">
            <summary>
             IndianFt62
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IndianFt75">
            <summary>
             IndianFt75
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.IndianYd37">
            <summary>
             IndianYd37
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Decameter">
            <summary>
             Decameter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.InternationalChain">
            <summary>
             InternationalChain
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.InternationalLink">
            <summary>
             InternationalLink
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.BrFootTrunc">
            <summary>
             BritishFootTrunc
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.BrChainTrunc">
            <summary>
             BritishChainTrunc
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.BrLinkTrunc">
            <summary>
             BritishLinkTrunc
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Degree">
            <summary>
             Degree
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Grad">
            <summary>
             Grad
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Grade">
            <summary>
             Grade
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.MapInfo">
            <summary>
             MapInfo
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Mil">
            <summary>
             Mil
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Minute">
            <summary>
             Minute
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Radian">
            <summary>
             Radian
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Second">
            <summary>
             Second
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Decisec">
            <summary>
             Decisec
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Centisec">
            <summary>
             Centisec
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Millisec">
            <summary>
             Millisec
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitCode.Unknown">
            <summary>
             Unknown
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemUnitType">
            <summary>
             Defines the types of coordinate system units
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitType.Unknown">
            <summary>
             Unknown unit type. Used mainly for default or error conditions
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitType.Linear">
            <summary>
             Linear unit type
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemUnitType.Angular">
            <summary>
             Angular unit type
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemWktFlavor">
            <summary>
             Defines constants used to indicate the WKT flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemWktFlavor.Unknown">
            <summary>
             Unknown flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemWktFlavor.Ogc">
            <summary>
             OGC flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemWktFlavor.Oracle">
            <summary>
             Oracle flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemWktFlavor.Esri">
            <summary>
             ESRI flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemWktFlavor.Epsg">
            <summary>
             EPSG flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemWktFlavor.Geotiff">
            <summary>
             GeoTIFF flavor
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemWktFlavor.Geotools">
            <summary>
             GeoTools flavor
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType">
            <summary>
             This class contains the constants for all current transformation definition types.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType.None">
            <summary>
             Default 0 constant available for programming convenience only. It does not
             describe a specific geodetic transformation type.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType.Standalone">
            <summary>
             The transformation definition describes a built-in transformation. That is, that
             transformation is well-known and cannot be parameterized because
             the information is available to the transformation engine.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType.Analytical">
            <summary>
             The transformation definition describes an analytical transformation where
             the transformation between the source and the target datum is defined
             through a formular that&apos;s fed with up to 10 parameters.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType.Interpolation">
            <summary>
             The transformation definition describes a transformation that
             uses grid files to calculate the actual datum shift for a given
             coordinate by interpolating between given grid points.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType.MultipleRegression">
            <summary>
             The transformation definition describes a transformation that
             uses a multiple regression calculation to perform the actual datum shift.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection">
            <summary>
             This class contains the constants for all current transformation definition types.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection.GeodeticDirectionNone">
            <summary>
             Direction not been specified.  This appears when the
             direction member has not bee set, or in the case where
             direction is not applicable, such as when the
             is the null transformation.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection.GeodeticDirectionForward">
            <summary>
             Forward direction, the calculation the geodetic
             transformation definitions natural calculation.
             I.e. conversion from the definition&apos;s &quot;source" datum to the
             &quot;target" datum.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection.GeodeticDirectionInverse">
            <summary>
             Inverse direction, i.e. conversion from the definition&apos;s
             &quot;target" datum to the &quot;source" datum.  Often inmplies an
             iterative technique using the forward technique as the
             estimator.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection.GeodeticDirectionError">
            <summary>
             Use this value to indicate an error condition of some sort;
             especially useful when this type is the return value of a
             function.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod">
            <summary>
             This class defines the currently supported transformation methods for
             analytical geodetic transformations as they can be read via the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary" />. That is, the constants
             defined below are only valid for <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> instances
             of type <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType" />.Analytical.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.None">
            <summary>
             None
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.ThreeParameter">
            <summary>
             Three Parameter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.Molodensky">
            <summary>
             Molodensky
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.AbridgedMolodensky">
            <summary>
             Abridged Molodensky
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.Geocentric">
            <summary>
             Geocentric
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.FourParameter">
            <summary>
             Four Parameter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.SixParameter">
            <summary>
             Six Parameter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.Bursa">
            <summary>
             Bursa
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.Frame">
            <summary>
             Frame
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.SevenParameter">
            <summary>
             Seven Parameter
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.MolodenskyBadekas">
            <summary>
             Molodensky Badekas
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod">
            <summary>
             This class defines the currently supported transformation methods for
             multiple regression geodetic transformations as they can be read via the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary" />. That is, the constants
             defined below are only valid for <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> instances
             of type <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType" />.MultipleRegression.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod.None">
            <summary>
              None
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod.MultipleRegression">
            <summary>
              Multiple Regression
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod.GeneralPolynomialEpsg">
            <summary>
              General Polynomial EPSG
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod">
            <summary>
             This class defines all transformation methods that are built into
             the transformation engine. That is, when creating such a geodetic transformation
             the API client cannot specify any parameters because they are well known
             and are available to the engine already.
             The constants defined below are only valid for <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> instances
             of type <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType" />.Standalone.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod.None">
            <summary>
             Default constant available for programming convenience only. No specific
             geodetic transformation can be created from this constant.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod.NullX">
            <summary>
             Describes a geodetic transformation that is actually a NOOP, i.e.
             the 2 datums to be transformed between are considered equal.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod.Wgs72">
            <summary>
             Describes the WGS72 to WGS84 geodetic transformation as published by the DMA (DMA TR 8350.2-B).
             All required parameters are known and built-in.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat">
            <summary>
             This class contains the constants for all currently supported grid file formats.
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.None">
            <summary>
             None
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.NTv1">
            <summary>
             NTv1
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.NTv2">
            <summary>
             NTv2
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.NADCON">
            <summary>
             NADCON
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.RGF">
            <summary>
             RGF
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.PAR">
            <summary>
             PAR
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.ATS77">
            <summary>
             ATS77
            </summary>
        </member>
        <member name="F:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.GEOCON">
            <summary>
             GEOCON
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgAgfReaderWriter">
            <summary>
             The <see cref="T:OSGeo.MapGuide.MgAgfReaderWriter" /> class is used to translate an
             <see cref="T:OSGeo.MapGuide.MgGeometry" /> object into into an <see cref="T:OSGeo.MapGuide.MgByteReader" /> object and to do
             the reverse translation.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgAgfReaderWriter.#ctor">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgAgfReaderWriter" /> object
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgAgfReaderWriter.Read(OSGeo.MapGuide.MgByteReader)">
            <summary>
             Translates an <see cref="T:OSGeo.MapGuide.MgByteReader" /> object into an <see cref="T:OSGeo.MapGuide.MgGeometry" /> object.
             The contents of the <see cref="T:OSGeo.MapGuide.MgByteReader" /> is in Autodesk Geometry
             Format (AGF).
            </summary>
            <param name="agf">
             (<see cref="T:OSGeo.MapGuide.MgByteReader" />) An <see cref="T:OSGeo.MapGuide.MgByteReader" /> that supplies the AGF byte stream.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgGeometry" /> that corresponds to the specified
              AGF.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgAgfReaderWriter.Read(OSGeo.MapGuide.MgByteReader,OSGeo.MapGuide.MgTransform)">
            <summary>
             Reads a geometry object from a stream of bytes in AGF format applying
             the specified transform during the read.
            </summary>
            <param name="agf">
             (<see cref="T:OSGeo.MapGuide.MgByteReader" />) An <see cref="T:OSGeo.MapGuide.MgByteReader" /> that supplies the AGF byte stream.
            </param>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) An <see cref="T:OSGeo.MapGuide.MgTransform" /> that is used to transform each coordinate read from the AGF representation.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgGeometry" /> that corresponds to the specified AGF with
              the specified transform applied.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgAgfReaderWriter.Write(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Translates an <see cref="T:OSGeo.MapGuide.MgGeometry" /> object into a stream of bytes in AGF
             (Autodesk Geometry Format).
            </summary>
            <param name="geometry">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) An <see cref="T:OSGeo.MapGuide.MgGeometry" /> object to write to AGF.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgByteReader" /> which contains the AGF representation of the
              <see cref="T:OSGeo.MapGuide.MgGeometry" /> object.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgAgfReaderWriter.Write(OSGeo.MapGuide.MgGeometry,OSGeo.MapGuide.MgTransform)">
            <summary>
             Writes a geometry object to a stream of bytes in AGF format applying
             the specified transform during the write.
            </summary>
            <param name="geometry">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) An <see cref="T:OSGeo.MapGuide.MgGeometry" /> object to write to AGF.
            </param>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) An <see cref="T:OSGeo.MapGuide.MgTransform" /> that is used to transform each coordinate written to the AGF representation.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgByteReader" /> that contains the transformed AGF representation.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgAggregateGeometry">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgAggregateGeometry" /> is an abstract base class for all of the
             geometry types that are composed of a set of aggregated
             geometry objects.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgAggregateGeometry.GetCount">
            <summary>
             Gets the number of geometries in this aggregate.
            </summary>
            <returns> The number of geometries.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgArcSegment">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgArcSegment" /> is a curve segment defined in terms of a start
             point, end point, and a control point.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.GetComponentType">
            <summary>
             Gets the component type of this arc segment
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.GetControlCoordinate">
            <summary>
             Gets the control coordinate of the arc.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> defining the control coordinate.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.GetStartCoordinate">
            <summary>
             Gets the start coordinate of this arc segment
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.GetEndCoordinate">
            <summary>
             Gets the end coordinate of this arc segment
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.GetDimension">
            <summary>
             Gets the dimension of this arc segment
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.IsEmpty">
            <summary>
             Gets whether this arc segment is empty
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.IsClosed">
            <summary>
             Gets whether this arc segment is closed
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgArcSegment.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgArcSegment" /> that is a copy of this one with each
              coordinate transformed according to the <see cref="T:OSGeo.MapGuide.MgTransform" /> argument.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinate">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinate" /> is an abstract base class used to represent the
             Cartesian coordinates of a geometry.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinate.GetDimension">
            <summary>
             Gets the dimensions supported by this coordinate as a bit
             mask. See <see cref="T:OSGeo.MapGuide.MgCoordinateDimension" /> for a specification of the
             values which can be found in the bit mask.
            </summary>
            <returns> Returns a bit mask of OR&apos;d <see cref="T:OSGeo.MapGuide.MgCoordinateDimension" /> values that
              defines the dimensions supported by this coordinate.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinate.GetX">
            <summary>
             Gets the X value of this coordinate.
            </summary>
            <returns> Returns the X value.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinate.GetY">
            <summary>
             Gets the Y value of this coordinate.
            </summary>
            <returns> Returns the Y value.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinate.GetZ">
            <summary>
             Gets the Z value of this coordinate.
            </summary>
            <returns> Returns the Z value or the value of <see cref="T:OSGeo.MapGuide.MgCoordinate" />::NoZ if not
              set.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinate.GetM">
            <summary>
             Gets the M value of this coordinate.
            </summary>
            <returns> Returns the M value or the value of <see cref="T:OSGeo.MapGuide.MgCoordinate" />::NoM if not
              set.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateCollection" /> provides support for defining an ordered set of
             coordinates.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.GetCount">
            <summary>
             Gets the number of coordinates in the collection.
            </summary>
            <returns> Returns number of coordinates in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.GetItem(System.Int32)">
            <summary>
             Gets the coordinate in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to retrieve.
            </param>
            <returns> Returns the coordinate in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.SetItem(System.Int32,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Sets the coordinate in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) Coordinate to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.Add(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) Coordinate to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.Insert(System.Int32,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Inserts the specified coordinate at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) Coordinate to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.Clear">
            <summary>
             Removes all coordinates from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.Remove(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Removes the specified coordinate from the collection.  Returns false if
             the coordinate could not be removed.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) Coordinate reference to remove.
            </param>
            <returns> Returns true if removal was successful.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the coordinate at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the coordinate to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.Contains(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Returns true if the collection contains the specified coordinate, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) Coordinate reference to check containment of.
            </param>
            <returns> True if the collection contains the specified coordinate, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.IndexOf(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Returns the index of the specified coordinate in the collection or -1
             if the coordinate does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) Coordinate reference to find the index of.
            </param>
            <returns> The index of the specified coordinate in the collection or -1 if the
              coordinate does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgCoordinateCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateIterator">
            <summary>
             The class <see cref="T:OSGeo.MapGuide.MgCoordinateIterator" /> supports iteration over the
             coordinates of a geometry or path instruction.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateIterator.GetCurrent">
            <summary>
             Gets the current coordinate. After an iterator is created or after a
             Reset, MoveNext must be called to advance the iterator to the first
             coordinate before calling GetCurrent; otherwise, the current position
             is undefined and an exception is thrown.
            </summary>
            <returns> The coordinate at the current position.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateIterator.MoveNext">
            <summary>
             Advances the iterator to the next coordinate. After an iterator is
             created or after a call to Reset, an iterator is positioned before the
             first coordinate, and the first call to MoveNext moves the iterator
             over the first coordinate. After the last coordinate is passed,
             subsequent calls to MoveNext return false until Reset is called.
            </summary>
            <returns> True if the iterator was successfully advanced to the next coordinate;
              false if the iterator has passed the last coordinate.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateIterator.Reset">
            <summary>
             Sets the iterator to its initial position prior to the first
             coordinate.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystem">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetType">
            <summary>
             Gets the type of the coordinate system: arbitrary, geographic, or projected.
            </summary>
            <returns> One of the values defined in <see cref="T:OSGeo.MapGuide.MgCoordinateSystemType" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertFromLonLat(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Converts the specified <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in lon/lat units to coordinate system units
            </summary>
            <param name="lonLat">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in lon/lat units
            </param>
            <returns> The converted <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertToLonLat(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Converts the specified <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units to lon/lat units
            </summary>
            <param name="coordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units
            </param>
            <returns> The converted <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in lon/lat units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertCoordinateSystemUnitsToMeters(System.Double)">
            <summary>
             Converts the given value in coordinate system units to meters
            </summary>
            <param name="units">
             (double) The value in coordinate system units
            </param>
            <returns> The converted value in meters
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertMetersToCoordinateSystemUnits(System.Double)">
            <summary>
             Converts the given value in meters to coordinate system units
            </summary>
            <param name="meters">
             (double) The value in meters
            </param>
            <returns> The converted value in coordinate system unit
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.MeasureEuclideanDistance(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Measures the euclidean distance between two coordinates in coordinate system units.
            </summary>
            <param name="coord1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The first coordinate
            </param>
            <param name="coord2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The second coordinate
            </param>
            <returns> The euclidean distance from coord1 to coord2 in coordinate system units.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.MeasureEuclideanDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Measures the euclidean distance between (x1, y1) and (x2, y2) in coordinate system units.
            </summary>
            <param name="x1">
             The first X coordinate
            </param>
            <param name="y1">
             The first Y coordinate
            </param>
            <param name="x2">
             The second X coordinate
            </param>
            <param name="y2">
             The second Y coordinate
            </param>
            <returns> The euclidean distance from (x1, y1) to (x2, y2) in coordinate system units.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.MeasureGreatCircleDistance(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Measures the great circle distance between two coordinates in coordinate system units
            </summary>
            <param name="coord1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The first coordinate
            </param>
            <param name="coord2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The second coordinate
            </param>
            <returns> The great circle distance from coord1 to coord2 in coordinate system units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.MeasureGreatCircleDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Measures the distance between two coordinates (x1, y1) and (x2, y2) in coordinate system units
            </summary>
            <param name="x1">
             The first X coordinate
            </param>
            <param name="y1">
             The first Y coordinate
            </param>
            <param name="x2">
             The second X coordinate
            </param>
            <param name="y2">
             The second Y coordinate
            </param>
            <returns> The great circle distance from (x1, y1) to (x2, y2) in coordinate system units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetAzimuth(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Gets the angle with respect to North of a vector formed by two coordinates
            </summary>
            <param name="coord1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The first coordinate
            </param>
            <param name="coord2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The second coordinate
            </param>
            <returns> The azimuth (Angle with respect to North) of the vector formed by coord1 and coord2
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetAzimuth(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Gets the angle with respect to North of a vector formed by two coordinate
            </summary>
            <param name="x1">
             The first X coordinate
            </param>
            <param name="y1">
             The first Y coordinate
            </param>
            <param name="x2">
             The second X coordinate
            </param>
            <param name="y2">
             The second Y coordinate
            </param>
            <returns> The azimuth (Angle with respect to the North) of the vector formed by (x1, y1) and (x2, y2)
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetCoordinate(OSGeo.MapGuide.MgCoordinate,System.Double,System.Double)">
            <summary>
             Computes a coordinate a given distance along a vector that is defined by a starting coordinate and an azimuth (Angle with respect to North).
            </summary>
            <param name="coord">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object in coordinate system units that represents the start of the vector.
            </param>
            <param name="azimuth">
             (double) An azimuth (Angle with respect to the North) that defines the direction of the vector.
            </param>
            <param name="distance">
             (double) The distance along the vector to the desired coordinate in meters.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that lies the given distance along the vector.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetCoordinate(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Computes a coordinate a given distance along a vector that is defined by a starting (x, y) coordinate and an azimuth (Angle with respect to North).
            </summary>
            <param name="xStart">
             (double) The x value in coordinate system units of the starting coordinate.
            </param>
            <param name="yStart">
             (double) The y value in coordinate system units of the starting coordinate.
            </param>
            <param name="azimuth">
             (double) An azimuth (Angle with respect to the North) that defines the direction of the vector.
            </param>
            <param name="distance">
             (double) The distance along the vector to the desired coordinate in meters.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that lies the given distance along the vector.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ToString">
            <summary>
             Gets the OGC WKT string representation of the coordinate system.
            </summary>
            <returns> The OGC WKT string.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetUnits">
            <summary>
             Gets the coordinate system units
            </summary>
            <returns> The coordinate system units string
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetUnitScale">
            <summary>
             Gets the factor used to convert coordinate system units to meters
            </summary>
            <returns> The factor used to convert coordinate system units to meters
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetMinX">
            <summary>
             Gets the minimum X value.
            </summary>
            <returns> The coordinate system minimum X value
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetMinY">
            <summary>
             Gets the minimum Y value.
            </summary>
            <returns> The coordinate system minimum Y value
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetMaxX">
            <summary>
             Gets the maximum X value
            </summary>
            <returns> The coordinate system maximum X value
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetMaxY">
            <summary>
             Gets the maximum Y value
            </summary>
            <returns> The coordinate system maximum Y value
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetCsCode">
            <summary>
             Returns the CS-Map coordinate system code
            </summary>
            <returns> The CS-Map coordinate system code
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetDescription">
            <summary>
             Returns the description of this coordinate system
            </summary>
            <returns> The description of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetProjection">
            <summary>
             Returns the projection of this coordinate system
            </summary>
            <returns> The projection of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetProjectionDescription">
            <summary>
             Returns the projection description of this coordinate system
            </summary>
            <returns> The projection description of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetDatum">
            <summary>
             Returns the datum of this coordinate system
            </summary>
            <returns> The coordinate system datum string
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetDatumDescription">
            <summary>
             Returns the datum description of this coordinate system
            </summary>
            <returns> The datum description string of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetEllipsoid">
            <summary>
             Returns the ellipsoid of this coordinate system
            </summary>
            <returns> The ellipsoid string of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetEllipsoidDescription">
            <summary>
             Returns the ellipsoid description of this coordinate system
            </summary>
            <returns> The ellipsoid description string of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetMeasure">
            <summary>
             Gets the measure object of this coordinate system
            </summary>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasure" /> object of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetCategories">
            <summary>
             Gets the categories of this coordinate system
            </summary>
            <returns> The <see cref="T:OSGeo.MapGuide.MgStringCollection" /> containing the cateogories for this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetCatalog">
            <summary>
             Gets the associated coordinate system catalog for this coordinate system
            </summary>
            <returns> The associated <see cref="T:OSGeo.MapGuide.MgCoordinateSystemCatalog" /> object
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetCsCode(System.String)">
            <summary>
             Sets the CS-Map coordinate system code for this coordinate system
            </summary>
            <param name="sCode">
             (String/string) The CS-Map coordinate system code
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsLegalCsCode(System.String)">
            <summary>
             Checks whether the given CS-Map coordinate system code is a legal one
            </summary>
            <returns> true if the given code is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsValid">
            <summary>
             Checks whether this coordinate system is a valid one
            </summary>
            <returns> true if this coordinate system is a valid one. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsUsable(OSGeo.MapGuide.MgCoordinateSystemCatalog)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsSameAs(OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetDescription(System.String)">
            <summary>
             Sets the description of this coordinate system
            </summary>
            <param name="sDesc">
             (String/string) The description of this coordinate system
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsLegalDescription(System.String)">
            <summary>
             Checks whether this description is legal for this coordinate system
            </summary>
            <param name="sDesc">
             (String/string) The description to check
            </param>
            <returns> true if the given description is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetGroup">
            <summary>
             Gets the group of this coordinate system
            </summary>
            <returns> The group of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetGroup(System.String)">
            <summary>
             Sets the group of this coordinate system
            </summary>
            <param name="sGroup">
             (String/string) The group
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsLegalGroup(System.String)">
            <summary>
             Checks whether this group is legal for this coordinate system
            </summary>
            <param name="sGroup">
             (String/string) The group to check
            </param>
            <returns> true if the given group is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetSource">
            <summary>
             Gets the source of this coordinate system
            </summary>
            <returns> The source of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetSource(System.String)">
            <summary>
             Sets the source of this coordinate system
            </summary>
            <param name="sSource">
             (String/string) The source
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsLegalSource(System.String)">
            <summary>
             Checks whether this source is legal for this coordinate system
            </summary>
            <param name="sSource">
             (String/string) The source to check
            </param>
            <returns> true if the given source is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsProtected">
            <summary>
             Checks whether this coordinate system is protected
            </summary>
            <returns> true if this coordinate system is protected. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetAge">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetProtectMode(System.Boolean)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsEncrypted">
            <summary>
             Checks whether this coordinate system is encrypted
            </summary>
            <returns> true if this coordinate system is encrypted. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetEncryptMode(System.Boolean)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetErrors">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetLocation">
            <summary>
             Gets the location of this coordinate system
            </summary>
            <returns> The location of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetLocation(System.String)">
            <summary>
             Sets the location of this coordinate system
            </summary>
            <param name="sLoc">
             (String/string) The location
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsLegalLocation(System.String)">
            <summary>
             Checks whether this location is legal for this coordinate system
            </summary>
            <param name="sLoc">
             (String/string) The location to check
            </param>
            <returns> true if the given location is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetCountryOrState">
            <summary>
             Gets the country or state of this coordinate system
            </summary>
            <returns> The country or state of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetCountryOrState(System.String)">
            <summary>
             Sets the country or state of this coordinate system
            </summary>
            <param name="sCountryOrState">
             (String/string) The country or state
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsLegalCountryOrState(System.String)">
            <summary>
             Checks whether this country or state is legal for this coordinate system
            </summary>
            <param name="sCountryOrState">
             (String/string) The country or state to check
            </param>
            <returns> true if the given country or state is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsGeodetic">
            <summary>
             Gets whether this coordinate system is geodetic
            </summary>
            <returns> true if this coordinate system is geodetic. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetProjectionCode">
            <summary>
             Gets the projection code of this coordinate system (see <see cref="T:OSGeo.MapGuide.MgCoordinateSystemProjectionCode" />)
            </summary>
            <returns> The projection code of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetProjectionCode(System.Int32)">
            <summary>
             Sets the projection code for this coordinate system
            </summary>
            <param name="prjType">
             (int) The projection code (see <see cref="T:OSGeo.MapGuide.MgCoordinateSystemProjectionCode" />)
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetUnitCode">
            <summary>
             Gets the unit code of this coordinate system
            </summary>
            <returns> The unit code of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetUnitCode(System.Int32)">
            <summary>
             Sets the unit code for this coordinate system
            </summary>
            <param name="unit">
             (int) The unit code
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetProjectionParameterCount">
            <summary>
             Gets the projection parameter count of this coordinate system
            </summary>
            <returns> The projection parameter count of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetProjectionParameter(System.Int32)">
            <summary>
             Gets the projection parameter count of this coordinate system at the specified index
            </summary>
            <param name="nIndex">
             (int) The index at which to retrieve the projection parameter. NOTE: The index is 1-based, not 0-based (ie. The first index will start at 1, not 0)
            </param>
            <returns> The projection parameter at the given index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetProjectionParameter(System.Int32,System.Double)">
            <summary>
             Sets the projection parameter of this coordinate system at the specified index
            </summary>
            <param name="nIndex">
             (int) The index at which to set the projection parameter. NOTE: The index is 1-based, not 0-based (ie. The first index will start at 1, not 0)
            </param>
            <param name="dValue">
             (double) The projection parameter value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetOriginLongitude">
            <summary>
             Gets the origin longitude of this coordinate system
            </summary>
            <returns> The origin longitude of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetOriginLongitude(System.Double)">
            <summary>
             Sets the origin longitude for this coordinate system
            </summary>
            <param name="dOrgLng">
             (double) The origin longitude
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetOriginLatitude">
            <summary>
             Gets the origin latitude of this coordinate system
            </summary>
            <returns> The origin latitude of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetOriginLatitude(System.Double)">
            <summary>
             Sets the origin latitude for this coordinate system
            </summary>
            <param name="dOrgLat">
             (double) The origin latitude
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetOffsetX">
            <summary>
             Gets the X offset of this coordinate system
            </summary>
            <returns> The X offset of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetOffsetY">
            <summary>
             Gets the Y offset of this coordinate system
            </summary>
            <returns> The Y offset of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetOffsets(System.Double,System.Double)">
            <summary>
             Sets the X and Y offsets for this coordinate system
            </summary>
            <param name="dXOffset">
             (double) The X offset
            </param>
            <param name="dYOffset">
             (double) The Y offset
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetScaleReduction">
            <summary>
             Gets the scale reduction of this coordinate system
            </summary>
            <returns> The scale reduction of this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetScaleReduction(System.Double)">
            <summary>
             Sets the scale reduction for this coordinate system
            </summary>
            <param name="dSclRed">
             (double) The scale reduction
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetMapScale">
            <summary>
             Gets the map scale for this coordinate system
            </summary>
            <returns> The map scale for this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetMapScale(System.Double)">
            <summary>
             Sets the map scale for this coordinate system
            </summary>
            <param name="dMapScale">
             (double) The map scale
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetZeroX">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetZeroY">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetZeroes(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetLonMin">
            <summary>
             Returns this system&apos;s minimum longitude value in degrees. If not set in the dictionary,
             the value returned here has been calculated by the underlying coordinate system
             transformation engine.
            </summary>
            <returns> Returns this system&apos;s minimum longitude value in degrees. Only returns 0 (if it&apos;s not the
              actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetLonMax">
            <summary>
             Returns this system&apos;s maximum longitude value in degrees. If not set in the dictionary,
             the value returned here has been calculated by the underlying coordinate system
             transformation engine.
            </summary>
            <returns> Returns this system&apos;s minimum longitude value in degrees. Only returns 0 (if it&apos;s not the
              actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetLatMin">
            <summary>
             Returns this system&apos;s minimum latitude value in degrees. If not set in the dictionary,
             the value returned here has been calculated by the underlying coordinate system
             transformation engine.
            </summary>
            <returns> Returns this system&apos;s minimum longitude value in degrees. Only returns 0 (if it&apos;s not the
              actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetLatMax">
            <summary>
             Returns this system&apos;s maximum latitude value in degrees. If not set in the dictionary,
             the value returned here has been calculated by the underlying coordinate system
             transformation engine.
            </summary>
            <returns> Returns this system&apos;s minimum longitude value in degrees. Only returns 0 (if it&apos;s not the
              actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetLonLatBounds(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Allows to set the min/max longitude and latitude values in degrees this coordinate system is valid in.
             This method must only be called on systems that are not protected.
             When setting these values, the coordinate system API will perform the following actions:
             &lt;ol&gt;
             &lt;li&gt;(Re-)enable valid range checking: When converting coordinates, the values are checked to fall
                 in the valid range as specified here&lt;/li&gt;
             &lt;li&gt;Save the values for later storage: When eventually writing this coordinate system to the
                 dictionary, the values will be written, too.&lt;/li&gt;
             &lt;/ol&gt;
            </summary>
            <param name="dLonMin">
             The minimum longitude value
            </param>
            <param name="dLatMin">
             The minimum latitude value
            </param>
            <param name="dLonMax">
             The maximum longitude value
            </param>
            <param name="dLatMax">
             The maximum latitude value
            </param>
            <returns> Nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.CancelLonLatBounds">
            <summary>
             Cancels only the range checking for coordinate transformations, if it has been enabled
             via SetLonLatBounds before. Specifically, calling this method does not reset the
             min/max values on the coordinate system definition itself. That is, when eventually writing
             this object to the dictionary, the min/max values will be written, too.
            </summary>
            <returns> Nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetXYBounds(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Allows to set the min/max X and Y values in the coordinate system&apos;s units that this coordinate system is valid in.
             This method must only be called on systems that are not protected.
             When setting these values, the coordinate system API will perform the following actions:
             &lt;ol&gt;
             &lt;li&gt;(Re-)enable valid range checking: When converting coordinates, the values are checked to fall
                 in the valid range as specified here&lt;/li&gt;
             &lt;li&gt;Save the values for later storage: When eventually writing this coordinate system to the
                 dictionary, the values will be written, too.&lt;/li&gt;
             &lt;/ol&gt;
            </summary>
            <param name="dXMin">
             The minimum X value
            </param>
            <param name="dYMin">
             The minimum Y value
            </param>
            <param name="dXMax">
             The maximum X value
            </param>
            <param name="dYMax">
             The maximum Y value
            </param>
            <returns> Nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.CancelXYBounds">
            <summary>
             Cancels only the range checking for coordinate transformations, if it has been enabled via
             SetXYBounds
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetQuadrant">
            <summary>
             Gets the quadrant for this coordinate system
            </summary>
            <returns> The quadrant for this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetQuadrant(System.Int16)">
            <summary>
             Sets the quadrant for this coordinate system
            </summary>
            <param name="sQuad">
             (short/int) The quadrant
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetDatumDefinition">
            <summary>
             Gets the datum definition for this coordinate system
            </summary>
            <returns> The datum definition for this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetDatumDefinition(OSGeo.MapGuide.MgCoordinateSystemDatum)">
            <summary>
             Sets the datum for this coordinate system
            </summary>
            <param name="pDatum">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" />) The datum definition
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetEllipsoidDefinition">
            <summary>
             Gets the ellipsoid for this coordinate system
            </summary>
            <returns> The ellipsoid for this coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.SetEllipsoidDefinition(OSGeo.MapGuide.MgCoordinateSystemEllipsoid)">
            <summary>
             Sets the ellipsoid definition for this coordinate system
            </summary>
            <param name="pEllipsoid">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid" />) The ellipsoid definition
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsValidXY(System.Double,System.Double)">
            <summary>
             Gets the given X and Y coordinates are valid within this coordinate system
            </summary>
            <param name="dX">
             (double) The X coordinate
            </param>
            <param name="dY">
             (double) The Y coordinate
            </param>
            <returns> true if the coordinates are valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.IsValidLonLat(System.Double,System.Double)">
            <summary>
             Gets the given longitude and latitude coordinates are valid within this coordinate system
            </summary>
            <param name="dLongitude">
             (double) The longitude coordinate
            </param>
            <param name="dLatitude">
             (double) The latitude coordinate
            </param>
            <returns> true if the coordinates are valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertCoordinateFromLonLat(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Converts the specified <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in lon/lat units to coordinate system units
            </summary>
            <param name="lonLatToCoordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in lon/lat units that will be converted
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertCoordinateToLonLat(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Converts the specified <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units to lon/lat units
            </summary>
            <param name="coordinateToLonLat">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units that will be converted
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertToLonLat(System.Double,System.Double)">
            <summary>
             Converts the specified coordinates in coordinate system units to lon/lat units
            </summary>
            <param name="dX">
             (double) The X coordinate
            </param>
            <param name="dY">
             (double) The Y coordinate
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in lon/lat units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertToLonLat(System.Double,System.Double,System.Double)">
            <summary>
             Converts the specified coordinates in coordinate system units to lon/lat units
            </summary>
            <param name="dX">
             (double) The X coordinate
            </param>
            <param name="dY">
             (double) The Y coordinate
            </param>
            <param name="dZ">
             (double) The Z coordinate
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in lon/lat units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertFromLonLat(System.Double,System.Double)">
            <summary>
             Converts the specified coordinates in lon/lat units to coordinate system units
            </summary>
            <param name="dLongitude">
             (double) The longitude coordinate
            </param>
            <param name="dLatitude">
             (double) The latitude coordinate
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.ConvertFromLonLat(System.Double,System.Double,System.Double)">
            <summary>
             Converts the specified coordinates in lon/lat units to coordinate system units
            </summary>
            <param name="dLongitude">
             (double) The longitude coordinate
            </param>
            <param name="dLatitude">
             (double) The latitude coordinate
            </param>
            <param name="dZ">
             (double) The Z coordinate
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetConvergence(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetScale(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetScaleH(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.GetScaleK(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystem.CreateClone">
            <summary>
             Gets a cloned copy of this coordinate system
            </summary>
            <returns> The cloned copy of this coordinate system
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemCatalog">
            <summary>
             Defines and manages the physical location of coordinate system data files
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.SetDefaultDictionaryDirAndFileNames">
            <summary>
             Sets the default dictionary path and file names
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetDefaultDictionaryDir">
            <summary>
             Gets the default dictionary path
            </summary>
            <returns> The default dictionary path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.SetDictionaryDir(System.String)">
            <summary>
             Sets the path where the dictionary files are located
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetDictionaryDir">
            <summary>
             Gets the current dictionary path
            </summary>
            <returns> The current dictionary path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetDefaultUserDictionaryDir">
            <summary>
             Returns the default directory path where user defined coordinate system
             definitions can be found or can be written into, respectively.
             If set, this method returns the value of the MENTOR_USER_DICTIONARY_PATH
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.SetUserDictionaryDir(System.String)">
            <summary>
             Sets the actual directory where user defined coordinate system
             definitions can be found or can be written into. The directory set through this method must exist
             and writeable. If set to an empty string, the catalog&apos;s &apos;user defined coordinate system&apos; directory
             will be unset and any updates will again happen only inside the directory
             as returned by GetDictionaryDir().
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetUserDictionaryDir">
            <summary>
             Returns the current directory where user defined coordinate system
             definitions is obtained from or is written into. Returns an empty string
             if no such directory is currently configured for this catalog.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.SetProtectionMode(System.Int16)">
            <summary>
             Sets the protection mode
            </summary>
            <param name="nMode">
             (short/int) The protection mode
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetProtectionMode">
            <summary>
             Gets the protection mode of this catalog
            </summary>
            <returns> The protection mode of this catalog
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetCategoryDictionary">
            <summary>
             Gets the coordinate system category dictionary
            </summary>
            <returns> The coordinate system category dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetCoordinateSystemDictionary">
            <summary>
             Gets the coordinate system dictionary
            </summary>
            <returns> The coordinate system dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetDatumDictionary">
            <summary>
             Gets the coordinate system datum dictionary
            </summary>
            <returns> The coordinate system datum dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetEllipsoidDictionary">
            <summary>
             Gets the coordinate system ellipsoid dictionary
            </summary>
            <returns> The coordinate system ellipsoid dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetGeodeticPathDictionary">
            <summary>
             Gets the coordinate system geodetic path dictionary
            </summary>
            <returns> The coordinate system geodetic path dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetGeodeticTransformDefDictionary">
            <summary>
             Gets the coordinate system geodetic transform definition dictionary
            </summary>
            <returns> The coordinate system geodetic transform definition dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetGeodeticTransformations(OSGeo.MapGuide.MgCoordinateSystemDatum,OSGeo.MapGuide.MgCoordinateSystemDatum)">
            <summary>
             Gets the geodetic transformations for the source and target coordinate system datums
            </summary>
            <param name="pSource">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" />) The source coordinate system datum
            </param>
            <param name="pTarget">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" />) The target coordinate system datum
            </param>
            <returns> The collection of <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation" /> objects
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetMathComparator">
            <summary>
             Gets the coordinate system math comparator
            </summary>
            <returns> The coordinate system math comparator
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetFormatConverter">
            <summary>
             Gets the coordinate system format converter
            </summary>
            <returns> The coordinate system format converter
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetProjectionInformation">
            <summary>
             Gets the coordinate system projection information
            </summary>
            <returns> The coordinate system projection information
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetUnitInformation">
            <summary>
             Gets the coordinate system unit information
            </summary>
            <returns> The coordinate system unit information
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.GetDictionaryUtility">
            <summary>
             Gets the coordinate system dictionary utility
            </summary>
            <returns> The coordinate system dictionary utility
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCatalog.AreDictionaryFilesWritable">
            <summary>
             Checks whether any kind of definition supported by this catalog can be updated in the dictionary files currently in use.
             Depending on whether this catalog uses a specific directory to store user-provided definitions in, this method
             will perform the following checks:
            </summary>
            <returns> Otherwise false.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemCategory">
            <summary>
             Defines a category of coordinate systems
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.GetName">
            <summary>
             Gets the name of this coordinate system category
            </summary>
            <returns> The name of this coordinate system category
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.SetName(System.String)">
            <summary>
             Sets the name of this coordinate system category
            </summary>
            <param name="sName">
             (String/string) The name of this coordinate system category
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.IsLegalName(System.String)">
            <summary>
             Checks whether the given name is legal for this category
            </summary>
            <returns> true if the given name is legal. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.IsValid">
            <summary>
             Gets whether this category is valid
            </summary>
            <returns> true if this category is valid
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.IsUsable(OSGeo.MapGuide.MgCoordinateSystemCatalog)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.IsSameAs(OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.CreateClone">
            <summary>
             Returns a cloned copy of this category
            </summary>
            <returns> A cloned copy of this category
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.GetSize">
            <summary>
             Gets the size of this category
            </summary>
            <returns> The size of this category
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.GetEnum">
            <summary>
             Gets the coordinate system enumerator for this category
            </summary>
            <returns> The coordinate system enumerator
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.AddCoordinateSystem(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.RemoveCoordinateSystem(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.HasCoordinateSystem(System.String)">
            <summary>
             Checks whether this category has the specified coordinate system name
            </summary>
            <param name="sName">
             (String/string) The coordinate system name
            </param>
            <returns> true if the specified name exists. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.Clear">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.GetCoordinateSystems">
            <summary>
             Gets the coordinate system in this category
            </summary>
            <returns> A <see cref="T:OSGeo.MapGuide.MgStringCollection" /> containing the names of all coordinate systems in this category
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategory.GetCatalog">
            <summary>
             Gets the associated coordinate system catalog
            </summary>
            <returns> The associated coordinate system catalog
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemCategoryDictionary">
            <summary>
             Basic functionality for the coordinate system category dictionary
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategoryDictionary.NewCategory">
            <summary>
             Creates a new category
            </summary>
            <returns> The coordinate system category
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategoryDictionary.Rename(System.String,System.String)">
            <summary>
             Renames the given category name to new specified category name
            </summary>
            <param name="sOldName">
             (String/string) The old category
            </param>
            <param name="sNewName">
             (String/string) The new category
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemCategoryDictionary.GetCategory(System.String)">
            <summary>
             Gets the category of the specified name
            </summary>
            <param name="sName">
             (String/string) The category
            </param>
            <returns> The coordinate system category or NULL if not found
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemComputationFailedException">
            <summary>
             Thrown when a coordinate system computation fails.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemComputationFailedException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemComputationFailedException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemConversionFailedException">
            <summary>
             Thrown when a coordinate system conversion fails.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemConversionFailedException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemConversionFailedException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemDatum">
            <summary>
             TODO: This class has no class documentation (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetDtCode">
            <summary>
             Returns the CS-Map coordinate system datum code
            </summary>
            <returns> The CS-Map coordinate system datum code
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetDtCode(System.String)">
            <summary>
             Sets the CS-Map coordinate system datum code for this datum
            </summary>
            <param name="sCode">
             (String/string) The CS-Map coordinate system datum code
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsLegalDtCode(System.String)">
            <summary>
             Checks whether the specified CS-Map coordinate system datum code is a legal one
            </summary>
            <returns> true if the given code is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsValid">
            <summary>
             Gets whether this coordinate system datum is valid
            </summary>
            <returns> true if this datum is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsUsable(OSGeo.MapGuide.MgCoordinateSystemCatalog)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsSameAs(OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetDescription">
            <summary>
             Gets the description of this datum
            </summary>
            <returns> The description of this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetDescription(System.String)">
            <summary>
             Sets the description of this datum
            </summary>
            <param name="sDesc">
             (String/string) The description of this datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsLegalDescription(System.String)">
            <summary>
             Checks whether the given description is legal for this datum
            </summary>
            <returns> true if the given description is legal. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetGroup">
            <summary>
             Gets the group for this datum
            </summary>
            <returns> The group for this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetGroup(System.String)">
            <summary>
             Sets the group for this datum
            </summary>
            <param name="sGroup">
             (String/string) The group for this datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsLegalGroup(System.String)">
            <summary>
             Gets whether the specified group is legal for this datum
            </summary>
            <returns> true if the specified group is legal. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetSource">
            <summary>
             Gets the source of this datum
            </summary>
            <returns> The source of this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetSource(System.String)">
            <summary>
             Sets the source of this datum
            </summary>
            <param name="sSource">
             (String/string) The source of this datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetEpsgCode">
            <summary>
             Gets the EPSG code for this datum
            </summary>
            <returns> The EPSG code for this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetEpsgCode(System.Int16)">
            <summary>
             Sets the EPSG code for this datum
            </summary>
            <param name="epsgCode">
             (short/int) The EPSG code for this datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsLegalSource(System.String)">
            <summary>
             Gets whether the given source is legal for this datum
            </summary>
            <returns> true if the given source is legal. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsProtected">
            <summary>
             Gets whether this datum is protected
            </summary>
            <returns> true if this datum is protected. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetAge">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetProtectMode(System.Boolean)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsEncrypted">
            <summary>
             Gets whether this datum is encrypted
            </summary>
            <returns> true if this datum is encrypted. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetEncryptMode(System.Boolean)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetLocation">
            <summary>
             Gets the location of this datum
            </summary>
            <returns> The location of this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetLocation(System.String)">
            <summary>
             Sets the location of this datum
            </summary>
            <param name="sLoc">
             (String/string) The location of this datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsLegalLocation(System.String)">
            <summary>
             Gets whether the given location is valid for this datum
            </summary>
            <returns> true if the given location is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetCountryOrState">
            <summary>
             Gets the country or state for this datum
            </summary>
            <returns> The country or state for this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetCountryOrState(System.String)">
            <summary>
             Sets the country or state for this datum
            </summary>
            <param name="sCountryOrState">
             (String/string) The country or state for this datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.IsLegalCountryOrState(System.String)">
            <summary>
             Gets whether the given country or state is legal for this datum
            </summary>
            <returns> true if the given country or state is legal. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetEllipsoid">
            <summary>
             Gets the ellipsoid for this datum
            </summary>
            <returns> The ellipsoid for this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetEllipsoid(System.String)">
            <summary>
             Sets the ellipsoid for this datum
            </summary>
            <param name="sEllipsoid">
             (String/string) The ellipsoid
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetEllipsoidDefinition">
            <summary>
             Gets the ellipsoid definition for this datum
            </summary>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid" /> object
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.SetEllipsoidDefinition(OSGeo.MapGuide.MgCoordinateSystemEllipsoid)">
            <summary>
             Sets the ellipsoid definition for this datum
            </summary>
            <param name="pDef">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid" />) The coordinate system ellipsoid
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.CreateClone">
            <summary>
             Returns a cloned copy of this datum
            </summary>
            <returns> A cloned copy of this datum
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetGeodeticTransformations(OSGeo.MapGuide.MgCoordinateSystemDatum)">
            <summary>
             Gets a collection of geodetic transformation between this datum and the specified target datum
            </summary>
            <returns> A collection of <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation" /> objects
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatum.GetCatalog">
            <summary>
             Gets the associated coordinate system catalog
            </summary>
            <returns> The associated coordinate system catalog
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemDatumDictionary">
            <summary>
             Basic functionality for the datum dictionary
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatumDictionary.NewDatum">
            <summary>
             Creates a new coordinate system datum
            </summary>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" /> object
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDatumDictionary.GetDatum(System.String)">
            <summary>
             Gets the coordinate system datum matching the specified name
            </summary>
            <returns> The matching <see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" /> object. NULL if not found
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemDictionary">
            <summary>
             Basic functionality for the coordinate system dictionary
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionary.NewCoordinateSystem">
            <summary>
             Creates a new coordinate system
            </summary>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinateSystem" /> object
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionary.GetCoordinateSystem(System.String)">
            <summary>
             Gets the coordinate system that matches the specified name
            </summary>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinateSystem" /> object. NULL if not found
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase">
            <summary>
             Basic functionality for all kinds of dictionaries
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.GetCatalog">
            <summary>
             Gets the associated coordinate system catalog
            </summary>
            <returns> The associated coordinate system catalog
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.GetDefaultFileName">
            <summary>
             Gets the default file name
            </summary>
            <returns> The default file name
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.GetFileName">
            <summary>
             Gets the file name of this dictionary
            </summary>
            <returns> The file name of this dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.SetFileName(System.String)">
            <summary>
             Sets the file name of this dictionary
            </summary>
            <param name="sFileName">
             (String/string) The file name
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.GetPath">
            <summary>
             Gets the path of this dictionary
            </summary>
            <returns> The path of this dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.GetSize">
            <summary>
             Gets the size of this dictionary
            </summary>
            <returns> The size of this dictionary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.Add(OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
             Adds the specified definition
            </summary>
            <param name="pDefinition">
             (<see cref="T:OSGeo.MapGuide.MgGuardDisposable" />) The definition to add.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.Remove(System.String)">
            <summary>
             Removes a definition by its specified name
            </summary>
            <param name="sName">
             (String/string) The name of the definition to remove
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.Modify(OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
             Modifies the specified definition
            </summary>
            <param name="pDefinition">
             (<see cref="T:OSGeo.MapGuide.MgGuardDisposable" />) The definition to modify.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.Get(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.Has(System.String)">
            <summary>
             Checks whether the definition of the specified name exists in this dictionary
            </summary>
            <returns> true if the definition exists. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.GetEnum">
            <summary>
             Gets the dictionary enumerator
            </summary>
            <returns> The dictionary enumerator
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility">
            <summary>
             Basic functionality for all kinds of dictionaries
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility.GetCatalog">
            <summary>
             Gets the associated coordinate system catalog
            </summary>
            <returns> The associated coordinate system catalog
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility.CreateEllipsoidDictionary(System.String)">
            <summary>
             Creates the ellipsoid dictionary in the specified path
            </summary>
            <param name="sDictPathName">
             (String/string) The path to create the dictionary in
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility.CreateDatumDictionary(System.String)">
            <summary>
             Creates the datum dictionary in the specified path
            </summary>
            <param name="sDictPathName">
             (String/string) The path to create the dictionary in
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility.CreateCoordsysDictionary(System.String)">
            <summary>
             Creates the coordinate system dictionary in the specified path
            </summary>
            <param name="sDictPathName">
             (String/string) The path to create the dictionary in
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility.CreateCategoryDictionary(System.String)">
            <summary>
             Creates the category dictionary in the specified path
            </summary>
            <param name="sDictPathName">
             (String/string) The path to create the dictionary in
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid">
            <summary>
             Defines a coordinate system ellipsoid
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetElCode">
            <summary>
             Returns the CS-Map coordinate system ellipsoid code
            </summary>
            <returns> The CS-Map coordinate system ellipsoid code
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetElCode(System.String)">
            <summary>
             Sets the CS-Map coordinate system ellipsoid code for this ellipsoid
            </summary>
            <param name="sCode">
             (String/string) The CS-Map coordinate system ellipsoid code
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsLegalElCode(System.String)">
            <summary>
             Checks whether the specified CS-Map coordinate system ellipsoid code is a legal one
            </summary>
            <returns> true if the given code is a legal one, false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsValid">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsUsable">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsSameAs(OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.CreateClone">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetDescription">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetDescription(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsLegalDescription(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetGroup">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetGroup(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsLegalGroup(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetSource">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetSource(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetEpsgCode">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetEpsgCode(System.Int16)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsLegalSource(System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsProtected">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetAge">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetProtectMode(System.Boolean)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsEncrypted">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetEncryptMode(System.Boolean)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetEquatorialRadius">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetPolarRadius">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetFlatteningRatio">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetEccentricity">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.SetRadii(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.FlatteningRatioToEccentricity(System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.EccentricityToFlatteningRatio(System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.EquatorialRadiusFromPolarRadiusFlatteningRatio(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.PolarRadiusFromEquatorialRadiusFlatteningRatio(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetGreatCircleDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetGreatCircleAzimuth(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetRadiusMin">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetRadiusMax">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsLegalRadius(System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetFlatteningRatioMin">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetFlatteningRatioMax">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.IsLegalFlatteningRatio(System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.FlatteningRatioFromRadii(System.Double,System.Double)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoid.GetCatalog">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoidDictionary">
            <summary>
             Basic functionality for the ellipsoid dictionary
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoidDictionary.NewEllipsoid">
            <summary>
             Creates a new coordinate system ellipsoid
            </summary>
            <returns> A <see cref="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid" /> object
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEllipsoidDictionary.GetEllipsoid(System.String)">
            <summary>
             Gets the coordinate system ellipsoid matching the specified name
            </summary>
            <returns> A <see cref="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid" /> object. NULL if not found.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemEnum">
            <summary>
             TODO: This class has no class documentation (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnum.Next(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnum.Skip(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnum.Reset">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnum.CreateClone">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnum.AddFilter(OSGeo.MapGuide.MgCoordinateSystemFilter)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnum.NextName(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnum.NextDescription(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemEnumInteger32">
            <summary>
             TODO: This class has no class documentation (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnumInteger32.Next(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnumInteger32.Skip(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnumInteger32.Reset">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnumInteger32.CreateClone">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemEnumInteger32.AddFilter(OSGeo.MapGuide.MgCoordinateSystemFilterInteger32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemFactory">
            <summary>
             Supports the creation of <see cref="T:OSGeo.MapGuide.MgCoordinateSystem" /> objects based on
             a OpenGIS Well-Known Text (WKT) definition of the coordinate
             system. This class is the main entry point for accessing assorted classes
             and functionalities of the Coordinate System API
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.#ctor">
            <summary>
             Constructs an <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.Create(System.String)">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgCoordinateSystem" /> instance given a definition of
             the coordinate system in OpenGIS Well-Known Text (WKT)
            </summary>
            <param name="wkt">
             (String/string) A string defining the coordinate system in OpenGIS WKT format.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinateSystem" /> instance that corresponds to
              the specified WKT definition.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GetCatalog">
            <summary>
             Gets the coordinate system catalog
            </summary>
            <returns> Returns the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemCatalog" />
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GetTransform(OSGeo.MapGuide.MgCoordinateSystem,OSGeo.MapGuide.MgCoordinateSystem)">
            <summary>
             Constructs a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemTransform" /> that can be used to transform
             coordinates from the source coordinate system to the target coordinate
             system.
            </summary>
            <param name="pSource">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />) The source coordinate system
            </param>
            <param name="pTarget">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />) The target coordinate system
            </param>
            <returns> The coordinate system transform that can be used to transform coordinates
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.CreateFromCode(System.String)">
            <summary>
             Creates a <see cref="T:OSGeo.MapGuide.MgCoordinateSystem" /> object from the specified CS-Map coordinate
             system code
            </summary>
            <param name="code">
             (String/string) The CS-Map coordinate system code
            </param>
            <returns> The coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.ConvertWktToCoordinateSystemCode(System.String)">
            <summary>
             Gets the matching CS-Map coordinate system code based on the specified
            </summary>
            <param name="wkt">
             (String/string) The coordinate system WKT string
            </param>
            <returns> The CS-Map coordinate system code that corresponds to the specified WKT
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.ConvertCoordinateSystemCodeToWkt(System.String)">
            <summary>
             Gets the matching coordinate system WKT based on the specified CS-Map
             coordinate system code
            </summary>
            <param name="code">
             (String/string) The CS-Map coordinate system code
            </param>
            <returns> The coordinate system WKT string that corresponds to the specified CS-Map
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.EnumerateCategories">
            <summary>
             Returns a list of the available coordinate system categories
            </summary>
            <returns> A <see cref="T:OSGeo.MapGuide.MgStringCollection" /> containing the names of the available coordinate
              system categories
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.EnumerateCoordinateSystems(System.String)">
            <summary>
             Returns a <see cref="T:OSGeo.MapGuide.MgBatchPropertyCollection" /> containing the properties of each
             coordinate system under the specified category
            </summary>
            <param name="category">
             (String/string) The coordinate system category to enumerate
            </param>
            <returns> A <see cref="T:OSGeo.MapGuide.MgBatchPropertyCollection" /> containing the properties of each coordinate system
              under the specified category
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.ConvertEpsgCodeToWkt(System.Int32)">
            <summary>
             Gets the matching coordinate system WKT based on the specified EPSG code
            </summary>
            <param name="code">
             The EPSG code
            </param>
            <returns> The coordinate system WKT string that corresponds to the specified EPSG code
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.ConvertWktToEpsgCode(System.String)">
            <summary>
             Gets the matching EPSG code based on the specified coordinate system WKT
            </summary>
            <param name="wkt">
             (String/string)
            </param>
            <returns> The EPSG code that corresponds to the specified coordinate system WKT string
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GetBaseLibrary">
            <summary>
             Gets name of the underlying coordinate system library
            </summary>
            <returns> Returns the name of the underlying coordinate system library
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.IsValid(System.String)">
            <summary>
             Gets whether the specified coordinate system WKT string is a valid one
            </summary>
            <param name="wkt">
             (String/string)
            </param>
            <returns> Returns true if the specified WKT is valid. Returns false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GridBoundary(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Constructs a grid boundary object.
            </summary>
            <param name="southwest">
             The coordinates of the the southwest corner of a rectangular region which represents the grid region. This point MUST indeed be southwest of the coordinate provided by the northeast parameter.
            </param>
            <param name="northeast">
             The coordinates of the the northeast corner of a rectangular region which represents the grid region. This point MUST indeed be northeast of the coordinate provided by the southwest parameter.
            </param>
            <returns> Returns the grid boundary in the form used by the grid/graticule
              sub-system.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GridBoundary(OSGeo.MapGuide.MgPolygon)">
            <summary>
             Constructs a grid boundary object.  Externally, grid objects are in
             viewport coordinates and define the extents of the region within
             which a grid is to be drawn.  Such objects are often simple
             rectangles, but his is not a requirement.
            </summary>
            <param name="boundary">
             The grid boundary in the form of a <see cref="T:OSGeo.MapGuide.MgPolygon" /> with no interior rings.
            </param>
            <returns> Returns the boundary in the form used by the grid/graticule sub-system.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GridSpecification(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
             Constructs a grid specification object with all specifications set to
             the values indicated by the supplied parameters.
            </summary>
            <param name="increment">
             The distance between grid lines of a grid or graticule. This value is used for both the easting and northing grid lines; and the value must be in the units specified by the unitCode parameter.
            </param>
            <param name="tickIncrement">
             The distance between tick marks of a grid or graticule. This value is used for both the easting and northing tick marks; and the value must be in the units specified by the unitCode parameter.
            </param>
            <param name="unitCode">
             One of the values defined by the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemUnitCode" /> object which indicates the units in which the increment, &amp;lt;c&gt;tickIncrement, and curvePrecision parameters are specified.
            </param>
            <param name="curvePrecision">
             In the units indicated by the unitCode parameter, the desired maximum distance between the true complex curve and the multi-segment approximation of the complex curve of any grid or graticule line generated using this specification.
            </param>
            <returns> A fully initialized grid specification object.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GridSpecification(System.Int32,System.Int32)">
            <summary>
             Constructs a grid specification object with all specifications set to
             the values indicated by the supplied parameters.
            </summary>
            <param name="gridType">
             A value defined by the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType" /> object which indicates the Type of specialized grid desired.
            </param>
            <param name="gridLevel">
             A value which indicates the density of the grid desired. The exact value of this parameter is dependent upon the value of the gridType argument. See Remarks below.
            </param>
            <returns> Returns a fully initialized grid specification structure.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GenericGrid(System.String,System.String,System.Boolean)">
            <summary>
             Manufactures generic grid object.  A generic grid is one which simply
             draws isolines of one coordinate system (the Grid coordinate system)
             into the drawing space of another (the frame system).
            </summary>
            <param name="sGridCs">
             The coordinate system code name of the grid coordinate system.
            </param>
            <param name="sFrameCs">
             The coordinate system code name of the frame coordinate system.
            </param>
            <param name="bSetExceptionsOn">
             true indicates that exceptions are to be thrown on all exceptional conditions.
            </param>
            <returns> Returns a disposable pointer to the abstract interface class from which the
              generic grid object (and all other grid objects) derive.
              object derive.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GenericGrid(OSGeo.MapGuide.MgCoordinateSystem,OSGeo.MapGuide.MgCoordinateSystem,System.Boolean)">
            <summary>
             Manufactures generic grid object.  A generic grid is one which simply
             draws isolines of one coordinate system (the Grid coordinate system)
             into the drawing space of another (the frame system).
            </summary>
            <param name="pGridCs">
             The grid coordinate system.
            </param>
            <param name="pFrameCs">
             The frame coordinate system.
            </param>
            <param name="bSetExceptionsOn">
             true indicates that exceptions are to be thrown on all exceptional conditions.
            </param>
            <returns> Returns a disposable pointer to the abstract interface class from which the
              generic grid object (and all other grid objects) derive.
              object derive.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GetMgrs(System.Double,System.Double,System.Int16,System.Boolean)">
            <summary>
             Manufactures an MGRS grid object.  The returned object is suitable only
             for use in simple coordinate &lt;-&gt; MGRS string calculations.
            </summary>
            <param name="dEquatorialRadius">
             Equatorial radius of the ellipsod upon which conversions to and from MGRS strings are to be based.
            </param>
            <param name="dEccentricity">
             Eccentricity of the ellipsod upon which conversions to and from MGRS strings are to be based.
            </param>
            <param name="nLetteringScheme">
             A value as defined in the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" /> object which specifies the lettering scheme to be used on MGRS string conversions.
            </param>
            <param name="bSetExceptionsOn">
             true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason.
            </param>
            <returns> Returns a disposable pointer to an <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrs" />
              object which is suitable only for MGRS string conversions.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GetMgrsEllipsoid(System.String,System.Int16,System.Boolean)">
            <summary>
             Manufactures an MGRS grid object.  The returned object is suitable only
             for use in simple coordinate &lt;-&gt; MGRS string calculations.
            </summary>
            <param name="sEllipsoidCode">
             Dictionary code name of the ellipsoid upon which conversions to and from MGRS strings are to be based.
            </param>
            <param name="nLetteringScheme">
             A value as defined in the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" /> object which specifies the lettering scheme to be used on MGRS string conversions.
            </param>
            <param name="bSetExceptionsOn">
             true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason.
            </param>
            <returns> Returns a disposable pointer to an <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrs" />
              object which is suitable only for MGRS string conversions.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.GetMgrsDatum(System.String,System.Int16,System.Boolean)">
            <summary>
             Manufactures an MGRS grid object.  The returned object is suitable only
             for use in simple coordinate &lt;-&gt; MGRS string calculations.
            </summary>
            <param name="sDatumCode">
             Dictionary code name of the datum whose referenced ellipsoid is to be used for all conversions to and from MGRS strings.
            </param>
            <param name="nLetteringScheme">
             A value as defined in the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" /> object which specifies the lettering scheme to be used on MGRS string conversions.
            </param>
            <param name="bSetExceptionsOn">
             true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason.
            </param>
            <returns> Returns a disposable pointer to an <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrs" />
              object which is suitable only for MGRS string conversions.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.MgrsGrid(OSGeo.MapGuide.MgCoordinateSystem,System.Boolean,System.Int16,System.Boolean)">
            <summary>
             Manufactures an MGRS grid object which is suitable for generating an
             actual MGRS grid.
            </summary>
            <param name="pFrameCs">
             The frame coordinate system.
            </param>
            <param name="bUseFrameDatum">
             true causes the frame datum to be used for all geodetic calculations neccessary to generate the grid; otherwise WGS84 is assumed.
            </param>
            <param name="nLetteringScheme">
             A value as defined in the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" /> object which specifies the lettering scheme to be used on MGRS string conversions.
            </param>
            <param name="bSetExceptionsOn">
             true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason. This applies only to MGRS string conversions.
            </param>
            <returns> Returns a disposable pointer to the abstract interface class from which the
              MGRS grid object (and all other grid objects) derive.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFactory.MgrsGrid(System.String,System.Boolean,System.Int16,System.Boolean)">
            <summary>
             Manufactures an MGRS grid object which is suitable for generating an
             actual MGRS grid.
            </summary>
            <param name="sFrameCs">
             The dictionary code name of the frame coordinate system.
            </param>
            <param name="bUseFrameDatum">
             true causes the frame datum to be used for all geodetic calculations neccessary to generate the grid; otherwise WGS84 is assumed.
            </param>
            <param name="nLetteringScheme">
             A value as defined in the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" /> object which specifies the lettering scheme to be used on MGRS string conversions.
            </param>
            <param name="bSetExceptionsOn">
             true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason. This applies only to MGRS string conversions.
            </param>
            <returns> Returns a disposable pointer to the abstract interface class from which the
              MGRS grid object (and all other grid objects) derive.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgOutOfMemoryException"></exception>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemFilter">
            <summary>
             TODO: This class has no class documentation (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFilter.IsFilteredOut(OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemFilterInteger32">
            <summary>
             TODO: This class has no class documentation (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFilterInteger32.IsFilteredOut(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemFormatConverter">
            <summary>
             TODO: This class has no class documentation (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.DefinitionToWkt(OSGeo.MapGuide.MgCoordinateSystem,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.WktToDefinition(System.Int32,System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.CodeToWkt(System.Int32,System.String,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.WktToCode(System.Int32,System.String,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.DefinitionToCode(OSGeo.MapGuide.MgCoordinateSystem,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.CodeToDefinition(System.Int32,System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.CodeToCode(System.Int32,System.String,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemFormatConverter.IsCodeInDictionary(System.Int32,System.String)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams">
            <summary>
             This class holds all parameters that are specific to analytical geodetic transformation methods, e.g.
             geocentric transformation, molodensky etc.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetDeltaX">
            <summary>
             Gets the X delta of this instance
            </summary>
            <returns> The X delta of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetDeltaX(System.Double)">
            <summary>
             Sets the X delta of this instance
            </summary>
            <param name="deltaX">
             (double) The X delta
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetDeltaY">
            <summary>
             Gets the Y delta of this instance
            </summary>
            <returns> The Y delta of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetDeltaY(System.Double)">
            <summary>
             Sets the Y delta of this instance
            </summary>
            <param name="deltaY">
             (double) The Y delta
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetDeltaZ">
            <summary>
             Gets the Z delta of this instance
            </summary>
            <returns> The Z delta of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetDeltaZ(System.Double)">
            <summary>
             Sets the Z delta of this instance
            </summary>
            <param name="deltaZ">
             (double) The Z delta
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetRotateX">
            <summary>
             Gets the X rotation of this instance
            </summary>
            <returns> The X rotation of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetRotateX(System.Double)">
            <summary>
             Sets the X rotation of this instance
            </summary>
            <param name="rotateX">
             (double) The X rotation
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetRotateY">
            <summary>
             Gets the Y rotation of this instance
            </summary>
            <returns> The Y rotation of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetRotateY(System.Double)">
            <summary>
             Sets the Y rotation of this instance
            </summary>
            <param name="rotateY">
             (double) The Y rotation
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetRotateZ">
            <summary>
             Gets the Z rotation of this instance
            </summary>
            <returns> The Z rotation of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetRotateZ(System.Double)">
            <summary>
             Sets the Z rotation of this instance
            </summary>
            <param name="rotateZ">
             (double) The Z rotation
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetScale">
            <summary>
             Gets the scale of this instance
            </summary>
            <returns> The scale of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetScale(System.Double)">
            <summary>
             Sets the scale of this instance
            </summary>
            <param name="scale">
             (double) The scale
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetTranslateX">
            <summary>
             Gets the X translation of this instance
            </summary>
            <returns> The X translation of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetTranslateX(System.Double)">
            <summary>
             Sets the X translation of this instance
            </summary>
            <param name="translateX">
             (double) The X translation
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetTranslateY">
            <summary>
             Gets the Y translation of this instance
            </summary>
            <returns> The Y translation of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetTranslateY(System.Double)">
            <summary>
             Sets the Y translation of this instance
            </summary>
            <param name="translateY">
             (double) The Y translation
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetTranslateZ">
            <summary>
             Gets the Z translation of this instance
            </summary>
            <returns> The Z translation of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetTranslateZ(System.Double)">
            <summary>
             Sets the Z translation of this instance
            </summary>
            <param name="translateZ">
             (double) The Z translation
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.GetTransformationMethod">
            <summary>
             Gets the transformation method of this instance
            </summary>
            <returns> The transformation method of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.SetTransformationMethod(System.Int32)">
            <summary>
             Sets the transformation method of this instance
            </summary>
            <param name="analyticalMethodCode">
             (int) The transformation method
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams">
            <summary>
             This class holds all parameters that are specific to grid-file based transformation. That is,
             where the actual datum shift value for a coordinate is determined by interpolating between grid point values
             as defined in the respective grid file(s).
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams.SetGridFiles(OSGeo.MapGuide.MgDisposableCollection)">
            <summary>
             Sets the grid files to be used by this transformation. See the description for
             gridFiles parameter.
            </summary>
            <param name="gridFiles">
             A (possibly empty) ordered(!) collection of <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile" /> objects. The order of the elements contained in the collection is important, because this instructs the underlying API in which order to use the grid files, e.g. in case of an overlap.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams.GetGridFiles">
            <summary>
             Returns an ordered, non-live collection <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile" /> elements
             currently used by this parameter object. Changing the collection does NOT
             have an affect on this parent parameter instance. Instead, any API client
             has to modify the collection and then set it back via SetGridFiles.
             The list returned can be an empty but will never be NULL.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams.GetFallback">
            <summary>
             Returns the name of the transformation to fallback to in case the transformation using the
             defined grid files doesn&apos;t succeed.
            </summary>
            <returns> Returns the name of the fallback transformation. Can be empty if no such fallback transformation
              is defined.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams.SetFallback(System.String)">
            <summary>
             Sets the name of the transformation to fallback to, if the transformation could not
             be performed using the grid files defined.
            </summary>
            <param name="fallbackTransformation">
             Name of the transformation to fallback to.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams.NewGridFile">
            <summary>
             Creates a new, empty <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile" /> object
             that can be added to the collection set via SetGridFiles.
            </summary>
            <returns> Returns a new, unitialized <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile" /> instance
              The caller is resonsible for disposing the object if no longer needed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams">
            <summary>
             This class holds all parameters that are specific to the multiple regression transformation method.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetValidation">
            <summary>
             Gets the validation value of this instance
            </summary>
            <returns> The validation value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetValidation(System.Double)">
            <summary>
             Sets the validation value of this instance
            </summary>
            <param name="validation">
             (double) The validation value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetTestPhi">
            <summary>
             Gets the test phi value of this instance
            </summary>
            <returns> The test phi value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetTestPhi(System.Double)">
            <summary>
             Sets the test phi value of this instance
            </summary>
            <param name="testPhi">
             (double) The test phi value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetTestLambda">
            <summary>
             Gets the test lambda value of this instance
            </summary>
            <returns> The test lambda value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetTestLambda(System.Double)">
            <summary>
             Sets the test lambda value of this instance
            </summary>
            <param name="testLambda">
             (double) The test lambda value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetDeltaPhi">
            <summary>
             Gets the delta phi value of this instance
            </summary>
            <returns> The delta phi value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetDeltaPhi(System.Double)">
            <summary>
             Sets the delta phi value of this instance
            </summary>
            <param name="deltaPhi">
             (double) The delta phi value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetDeltaLambda">
            <summary>
             Gets the delta lambda value of this instance
            </summary>
            <returns> The delta lambda value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetDeltaLambda(System.Double)">
            <summary>
             Sets the delta lambda value of this instance
            </summary>
            <param name="deltaLambda">
             (double) The delta lambda value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetDeltaHeight">
            <summary>
             Gets the delta height value of this instance
            </summary>
            <returns> The delta height value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetDeltaHeight(System.Double)">
            <summary>
             Sets the delta height value of this instance
            </summary>
            <param name="deltaHeight">
             (double) The delta height value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetPhiOffset">
            <summary>
             Gets the phi offset value of this instance
            </summary>
            <returns> The phi offset value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetPhiOffset(System.Double)">
            <summary>
             Sets the phi offset value of this instance
            </summary>
            <param name="phiOffset">
             (double) The phi offset value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetLambdaOffset">
            <summary>
             Gets the lambda offet value of this instance
            </summary>
            <returns> The lambda offet value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetLambdaOffset(System.Double)">
            <summary>
             Sets the lambda offet value of this instance
            </summary>
            <param name="lambdaOffset">
             (double) The lambda offet value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetNormalizationScale">
            <summary>
             Gets the normalization scale of this instance
            </summary>
            <returns> The normalization scale of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetNormalizationScale(System.Double)">
            <summary>
             Sets the normalization scale of this instance
            </summary>
            <param name="NormalizationScale">
             (double) The normalization scale
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetCoefficientPhi(System.Int32)">
            <summary>
             Gets the coefficent phi value of this instance at the specified index
            </summary>
            <param name="index">
             (int) The index which to retrieve the coefficient phi value
            </param>
            <returns> The coefficent phi value of this instance at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetCoefficientPhi(System.Int32,System.Double)">
            <summary>
             Sets the coefficent phi value of this instance at the specified index
            </summary>
            <param name="index">
             (int) The index which to set the coefficient phi value
            </param>
            <param name="value">
             (double) The coefficient phi value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetCoefficientLambda(System.Int32)">
            <summary>
             Gets the coefficent lambda value of this instance at the specified index
            </summary>
            <param name="index">
             (int) The index which to retrieve the coefficient lambda value
            </param>
            <returns> The coefficent lambda value of this instance at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetCoefficientLambda(System.Int32,System.Double)">
            <summary>
             Sets the coefficent lambda value of this instance at the specified index
            </summary>
            <param name="index">
             (int) The index which to set the coefficient lambda value
            </param>
            <param name="value">
             (double) The coefficient lambda value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetCoefficientHeight(System.Int32)">
            <summary>
             Gets the coefficent height value of this instance at the specified index
            </summary>
            <param name="index">
             (int) The index which to retrieve the coefficient height value
            </param>
            <returns> The coefficent height value of this instance at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetCoefficientHeight(System.Int32,System.Double)">
            <summary>
             Sets the coefficent height value of this instance at the specified index
            </summary>
            <param name="index">
             (int) The index which to set the coefficient height value
            </param>
            <param name="value">
             (double) The coefficient height value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.GetTransformationMethod">
            <summary>
             Gets the transformation method of this instance
            </summary>
            <returns> The transformation method of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.SetTransformationMethod(System.Int32)">
            <summary>
             Sets the transformation method of this instance
            </summary>
            <param name="mulRegTransformationMethod">
             (int) The transformation method
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath">
            <summary>
             A geodetic (transformation) path allows to concatenate multiple
             geodetic transformations. For example, converting between 2 datums
             cannot be achieved by doing 1 datum shift only but requires to
             do 1 or more datums shifts in between.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetPathName">
            <summary>
             Gets the path name of this geodetic path
            </summary>
            <returns> The path name of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetPathName(System.String)">
            <summary>
             Sets the path name of this geodetic path
            </summary>
            <param name="sName">
             (String/string) The path name
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetDescription">
            <summary>
             Gets the description of this geodetic path
            </summary>
            <returns> The description of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetDescription(System.String)">
            <summary>
             Sets the description of this geodetic path
            </summary>
            <param name="sDescription">
             (String/string) The description
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetGroup">
            <summary>
             Gets the group of this geodetic path
            </summary>
            <returns> The group of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetGroup(System.String)">
            <summary>
             Sets the group of this geodetic path
            </summary>
            <param name="sGroup">
             (String/string) The group
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetSource">
            <summary>
             Gets the source of this geodetic path
            </summary>
            <returns> The source of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetSource(System.String)">
            <summary>
             Sets the source of this geodetic path
            </summary>
            <param name="sSource">
             (String/string) The source
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetTargetDatum">
            <summary>
             Gets the target datum of this geodetic path
            </summary>
            <returns> The target datum of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetTargetDatum(System.String)">
            <summary>
             Sets the target datum of this geodetic path
            </summary>
            <param name="sTargetDatum">
             (String/string) The target datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetSourceDatum">
            <summary>
             Gets the source datum of this geodetic path
            </summary>
            <returns> The source datum of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetSourceDatum(System.String)">
            <summary>
             Sets the source datum of this geodetic path
            </summary>
            <param name="sSourceDatum">
             (String/string) The source datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetAccuracy">
            <summary>
             Gets the accuracy of this geodetic path
            </summary>
            <returns> The accuracy of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetAccuracy(System.Double)">
            <summary>
             Sets the accuracy of this geodetic path
            </summary>
            <param name="accuracy">
             (String/string) The accuracy
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetIsReversible">
            <summary>
             Gets whether this geodetic path is reversible
            </summary>
            <returns> true if this geodetic path is reversible
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetIsReversible(System.Boolean)">
            <summary>
             Sets whether this geodetic path is reversible
            </summary>
            <param name="isReversible">
             (boolean/bool) true if reversible. false otherwise
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetEpsgCode">
            <summary>
             Gets the EPSG code of of this geodetic path
            </summary>
            <returns> The EPSG code of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetEpsgCode(System.Int32)">
            <summary>
             Sets the EPSG code of of this geodetic path
            </summary>
            <param name="epsgCode">
             (int) the EPSG code
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetEpsgVariant">
            <summary>
             Gets the EPSG variant of this geodetic path
            </summary>
            <returns> The EPSG variant of this geodetic path
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetEpsgVariant(System.Int32)">
            <summary>
             Sets the EPSG variant of of this geodetic path
            </summary>
            <param name="epsgVariant">
             (int) the EPSG variant
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.GetPathElements">
            <summary>
             Returns an ordered collection of <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement" /> objects
             that form this geodetic transformation path. See remarks.
            </summary>
            <returns> Returns a (possibly empty) collection of <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement" /> instances.
              The caller is responsible for disposing the collection being returned.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.SetPathElements(OSGeo.MapGuide.MgDisposableCollection)">
            <summary>
             Sets the individual transformation steps that form this geodetic transformation
             path.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.IsProtected">
            <summary>
             Gets whether this geodetic path is protected
            </summary>
            <returns> true if this geodetic path is protected. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.IsValid">
            <summary>
             Gets whether this geodetic path is valid
            </summary>
            <returns> true if this geodetic path is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.NewPathElement">
            <summary>
             Creates a new, unitialized <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement" /> instance.
             Calling this method does not affect the underlying dictionary file.
             Typically, an API client will retrieve new objects through this method
             so they can be added to the collection of path elements that can be set
             via SetPathElements.
            </summary>
            <returns> Returns a new <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement" /> instance. The caller is responsible
              for disposing the object being returned.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.CreateClone">
            <summary>
             Creates a deep clone of this geodetic path. That is, the cloned object
             will also have its geodetic path element information cloned.
            </summary>
            <returns> Returns a new <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath" /> object that is an exact clone
              of this <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPath" /> instance. The caller is responsible for
              disposing the object being returned.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathDictionary">
            <summary>
             The <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathDictionary" /> provides access to all geodetic transformation path
             definitions as defined in the dictionary file this instance reads from / writes to.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathDictionary.NewGeodeticPath">
            <summary>
             Creates a new, empty geodetic path object that has to be filled by an API client. This
             method does not create a new entry in the dictionary. The caller is responsible
             for disposing the object being returned.
            </summary>
            <returns> Return a new, in-memory geodetic path object. No content is written to disk
              when this method executes.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathDictionary.GetGeodeticPath(System.String)">
            <summary>
             Returns the geodetic path object where the name is equal to the parameter
             pathName. The caller is responsible for disposing the object.
            </summary>
            <param name="pathName">
             The name of the geodetic path to look up in the dictionary. Must not be an empty string.
            </param>
            <returns> Return the geodetic path if found. Otherwise NULL.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement">
            <summary>
             A geodetic transformation path element describes a single transformation step within a series
             of concatenated steps that eventually form a geodetic (transformation) path.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.GetTransformName">
            <summary>
             Gets the name of the transform in this element
            </summary>
            <returns> The name of the transform in this element
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.SetTransformName(System.String)">
            <summary>
             Sets the name of the transform in this element
            </summary>
            <param name="name">
             (String/string) The name of the transform
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.GetIsInversed">
            <summary>
             Checks whether this path element is inversed
            </summary>
            <returns> true if this element is inversed. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.SetIsInversed(System.Boolean)">
            <summary>
             Sets whether this path element is inversed
            </summary>
            <param name="bInversed">
             (boolean/bool) true if inversed, false if not inversed
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.IsValid">
            <summary>
             Checks whether this path element is valid
            </summary>
            <returns> true if this element is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.IsProtected">
            <summary>
             Checks whether this path element is protected
            </summary>
            <returns> true if this element is protected. false otherwise
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformDefParams">
            <summary>
             This class (indirectly) describes the parameters of a geodetic transformation method that&apos;s built into the
             transformation engine. Hence, it does not allow for setting any parameters. Only the well known code
             can be set/get via (Set/Get)TransformationMethod.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformDefParams.GetTransformationMethod">
            <summary>
             Returns the code of the well known geodetic transformation method. Can only
             be one of the constants defined in <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod" /> (except for None).
            </summary>
            <returns> Returns the code of the well known geodetic transformation method.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformDefParams.SetTransformationMethod(System.Int32)">
            <summary>
             Sets the code of the well-known geodetic transformation method. Can only
             be one of the constants defined in <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod" /> (except for None).
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation">
            <summary>
             An instance of this class allow a caller do perform a geodetic transformation (datum shift).
             That is, this class does not operate on coordinate system level, but rather on
             datum level.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.SetSourceAndTarget(OSGeo.MapGuide.MgCoordinateSystemDatum,OSGeo.MapGuide.MgCoordinateSystemDatum)">
            <summary>
             Sets the source and target datums of this geodetic transformation
            </summary>
            <param name="pSource">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" />) The source datum
            </param>
            <param name="pTarget">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" />) The target datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetSource">
            <summary>
             Gets the source datum of this geodetic transformation
            </summary>
            <returns> The source datum of this geodetic transformation
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetTarget">
            <summary>
             Gets the target datum of this geodetic transformation
            </summary>
            <returns> The target datum of this geodetic transformation
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.Shift(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Shift this datum to the specified coordinate
            </summary>
            <param name="pLonLat">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The coordinate to shift to
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.Shift(System.Double,System.Double)">
            <summary>
             Shift this datum to the specified longitude/latitude coordinate
            </summary>
            <param name="dLongitude">
             (double) The longitude coordinate to shift to
            </param>
            <param name="dLatitude">
             (double) The longitude coordinate to shift to
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.Shift(System.Double,System.Double,System.Double)">
            <summary>
             Shift this datum to the specified longitude/latitude/z coordinate
            </summary>
            <param name="dLongitude">
             (double) The longitude coordinate to shift to
            </param>
            <param name="dLatitude">
             (double) The longitude coordinate to shift to
            </param>
            <param name="dZ">
             (double) The Z coordinate to shift to
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetOffsetX">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetOffsetY">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetOffsetZ">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.SetOffset(System.Double,System.Double,System.Double)">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetBursaWolfeTransformRotationX">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetBursaWolfeTransformRotationY">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetBursaWolfeTransformRotationZ">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetBursaWolfeTransformBwScale">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.SetBursaWolfeTransform(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetGeodeticTransformationMethod">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.SetGeodeticTransformationMethod(System.Int32)">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetMaxOffset">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.IsLegalOffset(System.Double)">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetMaxRotation">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.IsLegalRotation(System.Double)">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetBwScaleMin">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.GetBwScaleMax">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.IsLegalBwScale(System.Double)">
            <summary>
             Obsolete. Use <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> and
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams" /> (plus derived classes) instead.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef">
            <summary>
             An instance of this class describes a geodetic transformation with all its parameters
             as it is defined in the dictionary file. The actual transformation operation
             is performed by the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation" /> objects
             that&apos;s being returned by the CreateTransformation method.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetTransformName">
            <summary>
             Gets the transform name of this instance
            </summary>
            <returns> The transform name of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetTransformName(System.String)">
            <summary>
             Sets the transform name of this instance
            </summary>
            <param name="name">
             (String/string) The transform name
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetSourceDatum">
            <summary>
             Gets the source datum of this instance
            </summary>
            <returns> The source datum of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetSourceDatum(System.String)">
            <summary>
             Sets the source datum of this instance
            </summary>
            <param name="datumKey">
             (String/string) The source datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetTargetDatum">
            <summary>
             Gets the target datum of this instance
            </summary>
            <returns> The target datum of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetTargetDatum(System.String)">
            <summary>
             Sets the target datum of this instance
            </summary>
            <param name="datumKey">
             (String/string) The target datum
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetGroup">
            <summary>
             Gets the group of this instance
            </summary>
            <returns> The group of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetGroup(System.String)">
            <summary>
             Sets the group of this instance
            </summary>
            <param name="group">
             (String/string) The group
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetDescription">
            <summary>
             Gets the description of this instance
            </summary>
            <returns> The description of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetDescription(System.String)">
            <summary>
             Sets the description of this instance
            </summary>
            <param name="description">
             (String/string) The description
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetSource">
            <summary>
             Gets the source of this instance
            </summary>
            <returns> The source of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetSource(System.String)">
            <summary>
             Sets the source of this instance
            </summary>
            <param name="source">
             (String/string) The source
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetEpsgCode">
            <summary>
             Gets the EPSG code of this instance
            </summary>
            <returns> The EPSG code of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetEpsgCode(System.Int32)">
            <summary>
             Sets the EPSG code of this instance
            </summary>
            <param name="epsgCode">
             (int) The EPSG code
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetEpsgVariation">
            <summary>
             Gets the EPSG variation of this instance
            </summary>
            <returns> The EPSG variation of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetEpsgVariation(System.Int32)">
            <summary>
             Sets the EPSG variation of this instance
            </summary>
            <param name="epsgVariation">
             (int) The EPSG variation
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetInverseSupported">
            <summary>
             Gets whether the inverse is supported
            </summary>
            <returns> true if this inverse is supported. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetInverseSupported(System.Boolean)">
            <summary>
             Sets whether the inverse is supported
            </summary>
            <param name="inverseSupported">
             (boolean/bool) true if the inverse is supported. false otherwise
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetMaxIterations">
            <summary>
             Gets the maximum iterations of this instance
            </summary>
            <returns> The maximum iterations of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetMaxIterations(System.Int32)">
            <summary>
             Sets the maximum iterations of this instance
            </summary>
            <param name="maxIterations">
             (int) The maximum iterations
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetConvergenceValue">
            <summary>
             Gets the convergence value of this instance
            </summary>
            <returns> The convergence value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetConvergenceValue(System.Double)">
            <summary>
             Sets the convergence value of this instance
            </summary>
            <param name="convergenceValue">
             (double) The convergence value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetErrorValue">
            <summary>
             Gets the error value of this instance
            </summary>
            <returns> The error value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetErrorValue(System.Double)">
            <summary>
             Sets the error value of this instance
            </summary>
            <param name="errorValue">
             (double) The error value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetAccuracy">
            <summary>
             Gets the accuracy value of this instance
            </summary>
            <returns> The accuracy value of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetAccuracy(System.Double)">
            <summary>
             Sets the accuracy value of this instance
            </summary>
            <param name="accuracy">
             (double) The accuracy value
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetRangeMinLongitude">
            <summary>
             Gets the minimum range longitude of this instance
            </summary>
            <returns> The minimum range longitude of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetRangeMinLongitude(System.Double)">
            <summary>
             Sets the minimum range longitude of this instance
            </summary>
            <param name="minLong">
             (double) The minimum range longitude
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetRangeMaxLongitude">
            <summary>
             Gets the maximum range longitude of this instance
            </summary>
            <returns> The maximum range longitude of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetRangeMaxLongitude(System.Double)">
            <summary>
             Sets the maximum range longitude of this instance
            </summary>
            <param name="maxLong">
             (double) The maximum range longitude
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetRangeMinLatitude">
            <summary>
             Gets the minimum range latitude of this instance
            </summary>
            <returns> The minimum range latitude of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetRangeMinLatitude(System.Double)">
            <summary>
             Sets the minimum range latitude of this instance
            </summary>
            <param name="minLat">
             (double) The minimum range latitude
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetRangeMaxLatitude">
            <summary>
             Gets the maximum range latitude of this instance
            </summary>
            <returns> The maximum range latitude of this instance
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetRangeMaxLatitude(System.Double)">
            <summary>
             Sets the maximum range latitude of this instance
            </summary>
            <param name="maxLat">
             (double) The maximum range latitude
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.IsProtected">
            <summary>
             Gets whether this instance is protected
            </summary>
            <returns> true if this instance is protected. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.IsValid">
            <summary>
             Gets whether this instance is valid
            </summary>
            <returns> true if this instance is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetTransformDefType">
            <summary>
             Returns the type of this geodetic transformation (as defined by <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType" />).
             The type defines the parameters that are being returned by the GetParameters method.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.GetParameters">
            <summary>
             Returns the extended parameters object valid for this transformation definition. See remarks.
             Depending on the type returned by GetTransformDefType(), this method returns one of the following:
            </summary>
            <returns> Returns the extended parameters (or NULL) object for this transformation object. The
              caller is responsible for disposing the object being returned. See remarks.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.SetParameters(OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams)">
            <summary>
             Sets the extended parameters for this transformation.
            </summary>
            <param name="parameters">
             The parameters to set for this transformation. The object passed in, has to be of the same type as it has been returned by GetParameters. Otherwise, an exception will be thrown. This parameter must not be NULL. Creating a transformation that is supposed to do nothing except for allowing to switch from one datum to another (that is considered to be equal), requires to create standalone transformation of type NullX.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.CreateClone">
            <summary>
             Creates a deep clone of this geodetic transformation. That is, the cloned object
             will also have its extended parameters cloned.
            </summary>
            <returns> Returns a new <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> object that is an exact clone
              of this <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" /> instance. The caller is responsible for
              disposing the object being returned.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.CreateTransformation(System.Boolean)">
            <summary>
             Creates a new <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation" /> object that
             can be used to perform the actual transformation this transformation
             definition describes. This method will fail with an exception,
             if this is the NONE transformation.
            </summary>
            <param name="createInverse">
             If true, the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation" /> being returned will perform the inverse of the transformation as defined in the dictionary file. That is, it will convert from the actual target datum to the source datum. Note, that not all transformations are invertible. This method will fail with an exception then. If false, this method will return a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation" /> instance that performs the default forward datum transformation.
            </param>
            <returns> Returns the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation" /> that performs the actual
              datum transformation as described by this definition instance. The caller
              is reponsible for disposing the object being returned.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary">
            <summary>
             The <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary" /> provides access to all geodetic transformation
             definitions as defined in the dictionary file this instance reads from / writes to.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary.NewGeodeticTransformationDef(System.Int32)">
            <summary>
             Creates a new, empty geodetic transformation definition object that has to be filled by an API client. This
             method does not create a new entry in the dictionary. The caller is responsible
             for disposing the object being returned.
            </summary>
            <param name="transformationDefType">
             The type of the geodetic transformation to create. This must be a constant value as defined in <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType" /> (except for None)
            </param>
            <returns> Return a new, in-memory geodetic transformation definition object. No content is written to disk
              when this method executes.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary.GetGeodeticTransformationDef(System.String)">
            <summary>
             Returns the geodetic transformation definition object where the name is equal to the parameter
             pathName. The caller is responsible for disposing the object.
            </summary>
            <param name="transformationName">
             The name of the geodetic transformation to look up in the dictionary. Must not be an empty string.
            </param>
            <returns> Return the geodetic transformation if found. Otherwise NULL.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams">
            <summary>
             Common base class for all geodetic transformation parameters.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams.IsValid">
            <summary>
             Checks, whether this transformation parameter object&apos;s content is considered (technically) valid.
             That is, even if this method returns true, the transformation might still fail due to
             other reasons, e.g. a grid file does not exist.
            </summary>
            <returns> Returns true, if this parameter object is considered valid. Otherwise false.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams.IsProtected">
            <summary>
             Checks, whether this transformation object is protected, i.e. any attempts to change its
             content will fail. All definitions contained in the dictionaries at compile time
             are protected by default.
            </summary>
            <returns> Returns true, if this parameter object is read-only. Otherwise false.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile">
            <summary>
             The <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams" /> parameter class requires
             instances of <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile" /> to be set via its
             SetGridFiles method. An <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile" /> object simply describes
             the grid file rather than containing the (grid file) information itself.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.GetFileFormat">
            <summary>
             Returns the format of the grid file as a constant value as defined in
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat" />.
            </summary>
            <returns> Returns the file format as an INT32 value.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.SetFileFormat(System.Int32)">
            <summary>
             Sets this file&apos;s format. Has to be constant
             as defined by <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.GetIsInverseDirection">
            <summary>
             When used within a geodetic transformation that defines a source and a target
             datum, this flag instructs the API whether to consider the grid file&apos;s content
             to be the inverse of the actual conversion direction.
            </summary>
            <returns> Returns true, if the grid file provides information to transform between
              2 datums in the inversed direction to what&apos;s actually specified in
              the parent transformation definition.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.SetIsInverseDirection(System.Boolean)">
            <summary>
             Sets the flag, whether this grid file carries the information
             to perform a datum transformation in the inversed direction
             to what&apos;s specified in the parent transformation definition.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.GetFileName">
            <summary>
             Gets the physical file name
            </summary>
            <returns> The physical file name
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.SetFileName(System.String)">
            <summary>
             Sets the physical file name
            </summary>
            <param name="fileName">
             (String/string) The physical file name
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.IsProtected">
            <summary>
             Gets whether this file is protected
            </summary>
            <returns> true if this file is protected. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.IsValid">
            <summary>
             Gets whether this file is valid
            </summary>
            <returns> true if this file is valid. false otherwise
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridBase">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.GetSpecializationType">
            <summary>
             Gets the specialized type of this grid instance. Value can be any value from <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType" />
            </summary>
            <returns> The specialized type of this grid instance (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType" />)
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.SetBoundary(OSGeo.MapGuide.MgCoordinateSystemGridBoundary)">
            <summary>
             Sets the boundary of this grid instance
            </summary>
            <param name="pGridBoundary">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridBoundary" />) The boundary
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.GetGridLines(OSGeo.MapGuide.MgCoordinateSystemGridSpecification)">
            <summary>
             Gets the grid lines for this grid instance for the given grid specification
            </summary>
            <param name="specification">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" />) The grid specification
            </param>
            <returns> The collection of grid lines
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.GetGridRegions(OSGeo.MapGuide.MgCoordinateSystemGridSpecification)">
            <summary>
             Gets the grid regions for this grid instance for the given grid specification
            </summary>
            <param name="specification">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" />) The grid specification
            </param>
            <returns> The collection of grid regions
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.GetGridTicks(OSGeo.MapGuide.MgCoordinateSystemGridSpecification)">
            <summary>
             Generates grid ticks for the grid boundary.
            </summary>
            <param name="specification">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" />) The grid specification
            </param>
            <returns> The collection of grid ticks for the grid boundary
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.GetConvergenceAngle(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Gets the convergence angle for the given location
            </summary>
            <param name="location">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The location
            </param>
            <returns> The convergence angle for the given location
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.GetProjectiveGridScale(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Gets the projective grid scale for the given location
            </summary>
            <param name="location">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The location
            </param>
            <returns> The projective grid scale for the given location
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.ApproxGridLineMemoryUsage(OSGeo.MapGuide.MgCoordinateSystemGridSpecification)">
            <summary>
             Calculates the approximate amount of memory required to generated grid lines for this instance
            </summary>
            <param name="specification">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" />) The grid specification
            </param>
            <returns> The approximate memory usage in bytes
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.ApproxGridRegionMemoryUsage(OSGeo.MapGuide.MgCoordinateSystemGridSpecification)">
            <summary>
             Calculates the approximate amount of memory required to generated grid regions for this instance
            </summary>
            <param name="specification">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" />) The grid specification
            </param>
            <returns> The approximate memory usage in bytes
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.ApproxGridTickMemoryUsage(OSGeo.MapGuide.MgCoordinateSystemGridSpecification)">
            <summary>
             Calculates the approximate amount of memory required to generated grid ticks for this instance
            </summary>
            <param name="specification">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" />) The grid specification
            </param>
            <returns> The approximate memory usage in bytes
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.SetGridLineExceptionLevel(System.Int32)">
            <summary>
             Sets the amount of memory at which an exception will be thrown if generating a grid line
             collection that would exceed the specified value in memory usage
            </summary>
            <param name="memoryUseMax">
             (int) The memory limit in bytes
            </param>
            <returns> The new memory limit
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.SetGridRegionExceptionLevel(System.Int32)">
            <summary>
             Sets the amount of memory at which an exception will be thrown if generating a grid region
             collection that would exceed the specified value in memory usage
            </summary>
            <param name="memoryUseMax">
             (int) The memory limit in bytes
            </param>
            <returns> The new memory limit
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.SetGridTickExceptionLevel(System.Int32)">
            <summary>
             Sets the amount of memory at which an exception will be thrown if generating a grid tick
             collection that would exceed the specified value in memory usage
            </summary>
            <param name="memoryUseMax">
             (int) The memory limit in bytes
            </param>
            <returns> The new memory limit
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.GetLastError">
            <summary>
             Returns the last error code
            </summary>
            <returns> The last error code
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.ResetLastError">
            <summary>
             Resets the last error code
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.AreExceptionsOn">
            <summary>
             Gets whether exceptions are enabled for this instance
            </summary>
            <returns> true if exceptions are enabled. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBase.SetExceptionsOn(System.Boolean)">
            <summary>
             Enables or disables exceptions for this instance
            </summary>
            <param name="bOn">
             (boolean/bool) true to enable exceptions. false to disable exceptions
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridBoundary">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBoundary.SetBoundaryExtents(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Sets the extents of this grid boundary
            </summary>
            <param name="southwest">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The southwest coordinate of the extents
            </param>
            <param name="northeast">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The northeast coordinate of the extents
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridBoundary.SetBoundaryExtents(OSGeo.MapGuide.MgPolygon)">
            <summary>
             Sets the extents of this grid boundary
            </summary>
            <param name="boundary">
             (<see cref="T:OSGeo.MapGuide.MgPolygon" />) The extents of this grid boundary
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridLine">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridLine.GetSegment(System.Int32)">
            <summary>
             Gets the line segment at the specified index
            </summary>
            <param name="index">
             (int) The index at which to retrieve the line segment
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgLineString" /> at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridLine.SetSegmentCollection(OSGeo.MapGuide.MgLineStringCollection)">
            <summary>
             Sets the entire line segment collection
            </summary>
            <param name="segmentCollection">
             (<see cref="T:OSGeo.MapGuide.MgLineStringCollection" />) The line segment collection
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridLineCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridLineCollection.GetCount">
            <summary>
             Gets the number of grid lines in this collection
            </summary>
            <returns> The number of grid lines in this collection
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridLineCollection.GetItem(System.Int32)">
            <summary>
             Gets the grid line at the specified index
            </summary>
            <param name="index">
             (int) The index
            </param>
            <returns> The grid line (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridLine" />) at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridLineCollection.IndexOf(System.Int32,System.Double)">
            <summary>
             Gets the index of the given grid orientation and value
            </summary>
            <param name="gridOrientation">
             (int) The grid orientation
            </param>
            <param name="gridValue">
             (double) The grid value
            </param>
            <returns> The index of the given grid orientation and value
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridLineCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the grid line at the specified index
            </summary>
            <param name="index">
             (int) The index to remove
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridLineCollection.Clear">
            <summary>
             Removes all grid lines from this collection
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridRegion">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridRegion.GetLabel">
            <summary>
             Gets the label for this region
            </summary>
            <returns> The label for this region
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridRegionCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridRegionCollection.GetCount">
            <summary>
             Gets the number of grid regions in this collection
            </summary>
            <returns> The number of grid regions in this collection
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridRegionCollection.GetItem(System.Int32)">
            <summary>
             Gets the grid region at the specified index
            </summary>
            <param name="index">
             (int) The index
            </param>
            <returns> The grid region (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridRegion" />) at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridRegionCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the grid region at the specified index
            </summary>
            <param name="index">
             (int) The index to remove
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridRegionCollection.Clear">
            <summary>
             Removes all grid regions from this collection
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridSpecification.IsSameAs(OSGeo.MapGuide.MgCoordinateSystemGridSpecification)">
            <summary>
             Determines if two <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> objects are the
             same.
            </summary>
            <param name="specification">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" />) The second object to which the host object is to be compared to.
            </param>
            <returns> Returns true if the objects are identical.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridSpecification.SetGridBase(System.Double,System.Double)">
            <summary>
             Sets the easting and northing base values.
            </summary>
            <param name="eastingBase">
             (double) The base value to be used in calculating the easting grid and tick values.
            </param>
            <param name="northingBase">
             (double) The base value to be used in calculating the northing grid and tick values.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridSpecification.SetGridIncrement(System.Double,System.Double)">
            <summary>
             Sets the easting and northing grid line increment values.
            </summary>
            <param name="eastingIncrement">
             (double) The distance between easting grid lines.
            </param>
            <param name="northingIncrement">
             (double) The distance between northing grid lines.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridSpecification.SetTickIncrements(System.Double,System.Double)">
            <summary>
             Sets the easting and northing tick increment values.
            </summary>
            <param name="eastingIncrement">
             (double) The distance between easting tick marks.
            </param>
            <param name="northingIncrement">
             (double) The distance between northing tick marks.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridSpecification.SetUnits(System.Int32,System.Int32)">
            <summary>
             Sets the units used to define the desired grid.
            </summary>
            <param name="unitCode">
             (int) One of the integer values defined in the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemUnitCode" /> object which indicates the units used to define the grid parameters.
            </param>
            <param name="unitType">
             (int) One of the integer values defined in the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemUnitType" /> object which indicates the type of units (linear vs angular) used to define the grid parameters.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridSpecification.SetCurvePrecision(System.Double)">
            <summary>
             Sets the desired precision of complex curve approximations.
            </summary>
            <param name="curvePrecision">
             (double) The desired maximum distance between an approximation of a complex curve and the true curve.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridSpecification.SetMaxCurvePoints(System.Int32)">
            <summary>
             Sets the maximum number of points to generate for a complex curve
             approximation.
            </summary>
            <param name="maxCurvePoints">
             (INT32) The desired maximum number of points to be generated for a complex curve approximation. Default is 511.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridTick">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTick.GetIsOnGridLine">
            <summary>
             Gets whether this grid tick is on a grid line
            </summary>
            <returns> true if this grid tick is on a grid line. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTick.GetTickOrientation">
            <summary>
             Gets the tick orientation (see <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridOrientation" /> for valid values)
            </summary>
            <returns> The tick orientation
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTick.GetValue">
            <summary>
             Gets the tick value
            </summary>
            <returns> The tick value
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTick.GetPosition">
            <summary>
             Gets the tick position
            </summary>
            <returns> The tick position
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTick.GetDirectionVector">
            <summary>
             Gets the tick&apos;s direction vector
            </summary>
            <returns> The tick&apos;s direction vector
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemGridTickCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> is an object that is used to
             convey all the parameters necessary for the generation of a grid/graticule
             lumped into a single object for convenience.  Thus, adding a parameter
             determined to be necessary at a later time does not alter a lot of calling
             sequences.
             Note that this interface is an abstract interface.  There is code
             associated with the implementation of this interface which is used to
             handle the conversion of parameters between the various unit systems.
             Thus, one obtains a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridSpecification" /> from the
             <see cref="T:OSGeo.MapGuide.MgCoordinateSystemFactory" /> object.
             Note that all values are provided in the units specified within the object.
             The units used in this object do not need to be the same as any
             coordinate system involved in the generation of a grid, although the
             type of unit must be consistent with the type of grid being drawn.
             That is, specifying a Angular unit type when drawing a UTM grid will cause
             an exception at the time the request for (say) grid lines is issued.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTickCollection.GetCount">
            <summary>
             Gets the number of grid ticks in this collection
            </summary>
            <returns> The number of grid ticks in this collection
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTickCollection.GetItem(System.Int32)">
            <summary>
             Gets the grid tick at the specified index
            </summary>
            <param name="index">
             (int) The index
            </param>
            <returns> The grid tick (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridTick" />) at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTickCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the grid tick at the specified index
            </summary>
            <param name="index">
             (int) The index to remove
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemGridTickCollection.Clear">
            <summary>
             Removes all grid ticks from this collection
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemInitializationFailedException">
            <summary>
             The exception is thrown when the coordinate system initialization fails.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemInitializationFailedException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemInitializationFailedException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemLoadFailedException">
            <summary>
             The exception is thrown when the coordinate system load fails.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemLoadFailedException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemLoadFailedException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemMathComparator">
            <summary>
             A mathematical comparator used to detemerine equality between
             two different coordinate systems, datums or ellipsoids
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMathComparator.Same(OSGeo.MapGuide.MgGuardDisposable,OSGeo.MapGuide.MgGuardDisposable)">
            <summary>
             Determines if the two given definitions are the same
            </summary>
            <param name="pDefinition1">
             (<see cref="T:OSGeo.MapGuide.MgGuardDisposable" />) The first definition to compare
            </param>
            <param name="pDefinition2">
             (<see cref="T:OSGeo.MapGuide.MgGuardDisposable" />) The second definiton to compare
            </param>
            <returns> true if both definitions are the same. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMathComparator.SameEllipsoid(OSGeo.MapGuide.MgCoordinateSystemEllipsoid,OSGeo.MapGuide.MgCoordinateSystemEllipsoid)">
            <summary>
             Determines if the two given ellipsoids are the same
            </summary>
            <param name="pDefinition1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid" />) The first definition to compare
            </param>
            <param name="pDefinition2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemEllipsoid" />) The second definiton to compare
            </param>
            <returns> true if both definitions are the same. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMathComparator.SameDatum(OSGeo.MapGuide.MgCoordinateSystemDatum,OSGeo.MapGuide.MgCoordinateSystemDatum)">
            <summary>
             Determines if the two given datums are the same
            </summary>
            <param name="pDefinition1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" />) The first definition to compare
            </param>
            <param name="pDefinition2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystemDatum" />) The second definiton to compare
            </param>
            <returns> true if both definitions are the same. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMathComparator.SameCoordinateSystem(OSGeo.MapGuide.MgCoordinateSystem,OSGeo.MapGuide.MgCoordinateSystem)">
            <summary>
             Determines if the two given coordinate system are the same
            </summary>
            <param name="pDefinition1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />) The first definition to compare
            </param>
            <param name="pDefinition2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />) The second definiton to compare
            </param>
            <returns> true if both definitions are the same. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMathComparator.SetCompareInternalDatumOldParameters(System.Boolean)">
            <summary>
             Disables or enables the comparison of any integral geodetic transformation information
             when comparing datums. By default, this class compares any geodetic transformation
             information it finds. If set to false, the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMathComparator" />::SameDatum method
             only compares ellipsoid information and any other, non-transformation related, properties.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMathComparator.GetCompareInternalDatumOldParameters">
            <summary>
             Returns the current comparison behavior for datums of this <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMathComparator" />
             object. If true (default), this comparator compares geodetic transformation information
             it might find for a datum object. If false, this comparison step is skipped.
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemMeasure">
            <summary>
             Provides operations for measuring the distance between 2
             coordinates and the azimuth of 2 coordinates as well as
             calculating a coordinate position given an initial
             coordinate, an azimuth, and a distance.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasure.GetDistance(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Computes the distance between two coordinates.
            </summary>
            <param name="coord1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object that specifies the first coordinate.
            </param>
            <param name="coord2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object that specifies the second coordinate.
            </param>
            <returns> Returns the distance between coord1 and coord2 as a double
              in meters.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasure.GetDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Computes the distance between two coordinates.
            </summary>
            <param name="x1">
             (double) The x value in coordinate system units of the first coordinate.
            </param>
            <param name="y1">
             (double) The y value in coordinate system units of the first coordinate.
            </param>
            <param name="x2">
             (double) The x value in coordinate system units of the second coordinate.
            </param>
            <param name="y2">
             (double) The y value in coordinate system units of the second coordinate.
            </param>
            <returns> Returns the distance between (x1, y1) and (x2, y2) as a
              double in meters.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasure.GetAzimuth(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Computes the angle with respect to north of a vector formed
             by two coordinates.
            </summary>
            <param name="coord1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units that specifies the first coordinate.
            </param>
            <param name="coord2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> in coordinate system units that specifies the second coordinate.
            </param>
            <returns> Returns the azimuth (Angle with respect to
              North) of the vector formed by coord1 and coord2.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasure.GetAzimuth(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Computes the angle with respect to the north of a vector
             formed by two coordinates.
            </summary>
            <param name="x1">
             (double) The x value in coordinate system units of the first coordinate.
            </param>
            <param name="y1">
             (double) The y value in coordinate system units of the first coordinate.
            </param>
            <param name="x2">
             (double) The x value in coordinate system units of the second coordinate.
            </param>
            <param name="y2">
             (double) The y value in coordinate system units of the second coordinate.
            </param>
            <returns> Returns the azimuth (Angle with respect to the
              North) of the vector formed by (lon1, lat1) and (lon2, lat2).
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasure.GetCoordinate(OSGeo.MapGuide.MgCoordinate,System.Double,System.Double)">
            <summary>
             Computes a coordinate given a distance along a vector that is
             defined by a starting coordinate and an azimuth
             (Angle with respect to the North).
            </summary>
            <param name="coord">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object in coordinate system units that represents the start of the vector.
            </param>
            <param name="azimuth">
             (double) An azimuth (Angle with respect to the North) that defines the direction of the vector.
            </param>
            <param name="distance">
             (double) The distance along the vector to the desired coordinate in meters.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object containing the x and y values
              in coordinate system units of a coordinate that lies the
              given distance along the vector.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasure.GetCoordinate(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Computes a coordinate a given distance along a vector that is
             defined by a starting coordinate and an azimuth
             (Angle with respect to the North).
            </summary>
            <param name="xStart">
             (double) The x value in coordinate system units of the starting coordinate.
            </param>
            <param name="yStart">
             (double) The y value in coordinate system units of the starting coordinate.
            </param>
            <param name="azimuth">
             (double) An azimuth (Angle with respect to the North) that defines the direction of the vector.
            </param>
            <param name="distance">
             (double) The distance along the vector to the desired coordinate in meters.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object containing the x and y value
              in ecoordinate system units of a coordinate that lies the
              given distance along the vector.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasure.GetEnvelope">
            <summary>
             Computes the envelope of the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasure" />
             object.
            </summary>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException"></exception>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException">
            <summary>
             Thrown when a coordinate system measurement fails.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasureFailedException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemMgrs">
            <summary>
             This object carries most, if not all, intelligence specific to the MGRS
             (Military Grid Reference System) grid standard.  It can be used at two
             distinct levels, depending upon how it is manufactured.
             When manufactured with an ellipsoid/datum specification, this object is
             suitable only for conversion of geographic coordinates to MGRS strings and
             vice-versa.
             WHen manufactured with a frame coordinate system with a grid boundary
             subsequently supplied, the resulting object is capable of NGRS string
             conversions AND the generation of MGRS grids.
             When manufactured using a frame coordinate system and subsequent
             provision of a frame boundary (see base class <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridBase" />)
             the members derived from the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGridBase" /> base class
             can be used for MGRS grid drawing purposes.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMgrs.ConvertFromLonLat(System.Double,System.Double,System.Int32)">
            <summary>
             Converts a geographic coordinate to MGRS string form.
            </summary>
            <param name="dLongitude">
             (double) Longitude of the geographic position to be converted, in degrees relative to Greenwich. Use negative value for west longitude.
            </param>
            <param name="dLatitude">
             (double) Latitude of the geographic position to be converted, in degrees. Use negative value for south latitude.
            </param>
            <param name="nPrecision">
             (int) A value between zero and five, indicates the precision of the numeric portion of the returned MGRS designation.
            </param>
            <returns> The MGRs representation for the given point.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMgrs.ConvertFromLonLat(OSGeo.MapGuide.MgCoordinate,System.Int32)">
            <summary>
             Converts a geographic coordinate to MGRS string form.
            </summary>
            <param name="pLonLat">
             (String/string) The geographic position to be converted. X coordinate is the longitude in degrees relative to Greenwich, negative indicating west longitude. Y coordinate is latitude in degrees, negative indicating south latitude.
            </param>
            <param name="nPrecision">
             (int) A value between zero and five, indicates the precision of the numeric portion of the returned MGRS designation.
            </param>
            <returns> The MGRs representation for the given point.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OSGeo.MapGuide.MgCoordinateSystemMgrs.ConvertToLonLat(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OSGeo.MapGuide.MgCoordinateSystemMgrs.ConvertToLonLat(System.String,System.Int32)" -->
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemMgrs.GetLetteringScheme">
            <summary>
             Returns a value as defined by the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" />
             object indicating which lettering scheme is currently active.
            </summary>
            <returns> Either <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" />::Normal or
              <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme" />::Alternative
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation">
            <summary>
             Represents information about a coordinate system projection
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetEnumProjections">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetParameterCount(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.IsUsingParameter(System.Int32,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.IsUsingOriginLongitude(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.IsUsingOriginLatitude(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.IsUsingScaleReduction(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.IsUsingQuadrant(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.IsUsingOffset(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetParameterMin(System.Int32,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetParameterMax(System.Int32,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetParameterDefault(System.Int32,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetParameterLogicalType(System.Int32,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetParameterFormatType(System.Int32,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetParameterType(System.Int32,System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetUnitType(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.GetTagString(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemTransform">
            <summary>
             Provides operations for transforming coordinates from one
             coordinate system to another.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.Transform(System.Double,System.Double)">
            <summary>
             Transforms the given X and Y values whose frame of reference
             is the source coordinate system into an XY coordinate whose
             frame of reference is the target coordinate system.
            </summary>
            <param name="x">
             (double) The X ordinate to transform.
            </param>
            <param name="y">
             (double) The Y ordinate to transform.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object which is the equivalent in
              the target coordinate system of the given X and Y ordinates.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.TransformM(System.Double,System.Double,System.Double)">
            <summary>
             Transforms the given X, Y, and M values whose frame of
             reference is the source coordinate system into a coordinate
             whose frame of reference is the target coordinate system.
            </summary>
            <param name="x">
             (double) The X ordinate to transform.
            </param>
            <param name="y">
             (double) The Y ordinate to transform.
            </param>
            <param name="m">
             (double) The measure to transform.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object which is the equivalent in
              the target coordinate system of the given X, Y, and M values.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.Transform(System.Double,System.Double,System.Double)">
            <summary>
             Transforms the given X, Y and Z values whose frame of
             reference is the source coordinate system into a coordinate
             whose frame of reference is the target coordinate system.
            </summary>
            <param name="x">
             (double) The X ordinate to transform.
            </param>
            <param name="y">
             (double) The Y ordinate to transform.
            </param>
            <param name="z">
             (double) The Z ordinate to transform.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object which is the equivalent in
              the target coordinate system of the given X, Y, and Z
              ordinates.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.TransformM(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Transforms the given X, Y, Z, and M values whose frame of
             reference is the source coordinate system into a coordinate
             whose frame of reference is the target coordinate system.
            </summary>
            <param name="x">
             (double) The X ordinate to transform.
            </param>
            <param name="y">
             (double) The Y ordinate to transform.
            </param>
            <param name="z">
             (double) The Z ordinate to transform.
            </param>
            <param name="m">
             (double) The measure to transform.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object which is the equivalent in
              the target coordinate system of the given X, Y, Z, and M
              values.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.Transform(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Transforms the given coordinate whose frame of reference is
             the source coordinate system into a coordinate whose frame of
             reference is the target coordinate system.
            </summary>
            <param name="coordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object defined in terms of the source coordinate system.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object which is the equivalent in
              the target coordinate system of the given coordinate.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.Transform(OSGeo.MapGuide.MgEnvelope)">
            <summary>
             Transforms an <see cref="T:OSGeo.MapGuide.MgEnvelope" /> instance for the source coordinate
             system into an <see cref="T:OSGeo.MapGuide.MgEnvelope" /> instance for target coordinate
             system.
            </summary>
            <param name="envelope">
             (<see cref="T:OSGeo.MapGuide.MgEnvelope" />) An <see cref="T:OSGeo.MapGuide.MgEnvelope" /> object obtained from the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemMeasure" /> for the source coordinate system.
            </param>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgEnvelope" /> object for the target coordinate
              system..
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.TransformCoordinate(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Transforms the specified coordinate in-place.
            </summary>
            <param name="coordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The coordinate that will be transformed in-place
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GridLine(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate,System.Double,System.Int32)">
            <summary>
             Generates a <see cref="T:OSGeo.MapGuide.MgLineString" /> which represents, in the target coordinate
             system, the linear line segment provided in the source coordinate
             system.
            </summary>
            <param name="fromPnt">
             The starting point of the linear segment in source system coordinates.
            </param>
            <param name="toPnt">
             The end point of the linear segment in source system coordinates.
            </param>
            <param name="curvePrecision">
             The returned line string is segmented to the degree necessary such that the distance between the LineString approximation of the true curve and the true curve istself is never more than this value. Units must be the same as the target coordinate system.
            </param>
            <param name="maxPoints">
             The generation algorithm will always quit after generating this number of points in result. A typical value is 500. DO NOIT rely on the algorithm stopping at exactly this value. The typical value of 500 can and will produce a LineString with as many of 750 points before terminating.
            </param>
            <returns> The result of the transformation is returned in the form of a
              disposable LineString object.  While the result can be as simple as
              a single straight line segment, more often it will be a multi-segment
              approximation of a complex curve.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IsValidSourcePoint(System.Double,System.Double)">
            <summary>
             Gets whether the given source point is valid
            </summary>
            <param name="x">
             (double) The X coordinate of the source point
            </param>
            <param name="y">
             (double) The Y coordinate of the source point
            </param>
            <returns> true if this given source point is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IsValidSourcePoint(System.Double,System.Double,System.Double)">
            <summary>
             Gets whether the given source point is valid
            </summary>
            <param name="x">
             (double) The X coordinate of the source point
            </param>
            <param name="y">
             (double) The Y coordinate of the source point
            </param>
            <param name="z">
             (double) The Z coordinate of the source point
            </param>
            <returns> true if this given source point is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IsValidTargetPoint(System.Double,System.Double)">
            <summary>
             Gets whether the given target point is valid
            </summary>
            <param name="x">
             (double) The X coordinate of the target point
            </param>
            <param name="y">
             (double) The Y coordinate of the target point
            </param>
            <returns> true if this given target point is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IsValidTargetPoint(System.Double,System.Double,System.Double)">
            <summary>
             Gets whether the given target point is valid
            </summary>
            <param name="x">
             (double) The X coordinate of the target point
            </param>
            <param name="y">
             (double) The Y coordinate of the target point
            </param>
            <param name="z">
             (double) The Z coordinate of the target point
            </param>
            <returns> true if this given target point is valid. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GetSource">
            <summary>
             Gets the source coordinate system (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />)
            </summary>
            <returns> The source coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GetTarget">
            <summary>
             Gets the target coordinate system (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />)
            </summary>
            <returns> The target coordinate system
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.SetSourceAndTarget(OSGeo.MapGuide.MgCoordinateSystem,OSGeo.MapGuide.MgCoordinateSystem)">
            <summary>
             Sets the source and target coordinate systems
            </summary>
            <param name="pSource">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />) The source coordinate system
            </param>
            <param name="pTarget">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateSystem" />) The target coordinate system
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GetGeodeticTransformationCount">
            <summary>
             Returns the number of geodetic transformations used in the implicit or
             explicit path used to convert the source to the target coordinate system.
             For a geodetic transformation to take place, both the source and the target
             coordinate systems have to be referenced to a datum.
            </summary>
            <returns> Returns the number of geodetic transformations in the path as described above.
              Returns 0, if no geodetic transformation will have to be done when converting from
              the source coordinate system to the target coordinate system. In
              particular, this method returns 0 in the following cases:
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GetGeodeticTransformation(System.Int32)">
            <summary>
             Returns a pointer to the catalog-resident(!) geodetic transformation definition indicated
             by the index parameter.
            </summary>
            <param name="index">
             A zero based index indicating the specific transformation definition which is to be returned.
            </param>
            <returns> Returns a disposable pointer to the geodetic transformation definition
              indicated by the index parameter. The <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef" />
              instance is guaranteed to exist in the geodetic transformation definition
              dictionary.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"> if index is out of range. See MgCoordinateSystemTransform::GetGeodeticTransformationCount.</exception>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemLoadFailedException"> if the geodetic transformation</exception>
            <exception cref="T:OSGeo.MapGuide.MgCoordinateSystemInitializationFailedException"> if the</exception>
            <exception cref="T:OSGeo.MapGuide.MgException"> if the dictionaries could not be accessed or</exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GetGeodeticTransformationDirection(System.Int32)">
            <summary>
             Returns the direction of the transformation definition indicated by
             the index parameter.
            </summary>
            <param name="index">
             A zero based index indicating the specific transformation definition for which the direction is to be returned.
            </param>
            <returns> Returns a memebr of the <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection" /> class:
              * <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection" />::GeodeticDirectionForward for the forward direction,
              * <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection" />::GeodeticDirectionInverse or the inverse direction,
              * <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection" />::GeodeticDirectionNone if there is no specification (e.g. a null transformation), and
              * <see cref="T:OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection" />::GeodeticDirectionError if the index parameter is invalid.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GetExplicitGeodeticPath">
            <summary>
             Returns the definition of the geodetic path used to build the
             transformation, but only if the path was explicitly obtained from the
             Geodetic Path dictionary.
            </summary>
            <returns> Returns a disposable pointer to the Geodetic Path definition which
              was used to build the conversion from the source to target datums.
              Returns null is the path from source to taregt datums was implicitly
              generated by CS-MAP.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IgnoreDatumShiftWarning(System.Boolean)">
            <summary>
             Sets whether datum shift warnings will be ignored
            </summary>
            <param name="bIgnoreDatumShiftWarning">
             (boolean/bool) true if datum shift warnings will be ignored. false otherwise
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IsIgnoreDatumShiftWarning">
            <summary>
             Gets whether datum shift warnings will be ignored
            </summary>
            <returns> true if this datum shift warnings will be ignored. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IgnoreOutsideDomainWarning(System.Boolean)">
            <summary>
             Sets whether outside domain warnings will be ignored
            </summary>
            <param name="bIgnoreOutsideDomainWarning">
             (boolean/bool) true if outside domain warnings will be ignored. false otherwise
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.IsIgnoreOutsideDomainWarning">
            <summary>
             Gets whether outside domain warnings will be ignored
            </summary>
            <returns> true if this outside domain warnings will be ignored. false otherwise
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.GetLastTransformStatus">
            <summary>
             Gets the last transformation status
            </summary>
            <returns> The last transformation status
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransform.ResetLastTransformStatus">
            <summary>
             Resets the last transformation status
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException">
            <summary>
             Thrown when a coordinate system transform fails.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgCoordinateSystemTransformFailedException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateSystemUnitInformation">
            <summary>
             Represents information about a coordinate system unit
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemUnitInformation.GetEnumLinearUnits">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemUnitInformation.GetEnumAngularUnits">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemUnitInformation.GetLinearUnitScale(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemUnitInformation.GetAngularUnitScale(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemUnitInformation.GetUnitType(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemUnitInformation.GetTagString(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateSystemUnitInformation.GetAbbreviation(System.Int32)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateXY">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateXY" /> is a concrete class derived from the abstract
             class <see cref="T:OSGeo.MapGuide.MgCoordinate" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXY.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXY.GetX">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXY.GetY">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXY.GetZ">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXY.GetM">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateXYM">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateXYM" /> is a concrete class derived from the abstract
             class <see cref="T:OSGeo.MapGuide.MgCoordinate" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYM.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYM.GetX">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYM.GetY">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYM.GetZ">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYM.GetM">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateXYZ">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateXYZ" /> is a concrete class derived from the abstract
             class <see cref="T:OSGeo.MapGuide.MgCoordinate" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZ.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZ.GetX">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZ.GetY">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZ.GetZ">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZ.GetM">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCoordinateXYZM">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCoordinateXYZM" /> is a concrete class derived from the
             abstract class <see cref="T:OSGeo.MapGuide.MgCoordinate" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZM.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZM.GetX">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZM.GetY">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZM.GetZ">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCoordinateXYZM.GetM">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurve">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCurve" /> is an abstract base class. <see cref="T:OSGeo.MapGuide.MgCurveString" /> and
             <see cref="T:OSGeo.MapGuide.MgLineString" /> are concrete classes derived from <see cref="T:OSGeo.MapGuide.MgCurve" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurve.GetStartCoordinate">
            <summary>
             Gets the starting coordinate of the curve.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that defines the starting coordinate.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurve.GetEndCoordinate">
            <summary>
             Gets the ending coordinate of the curve.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that defines the ending coordinate.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurvePolygon">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgCurvePolygon" /> is a region, defined by 1 exterior boundary
             and 0 or more interior boundaries.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.GetExteriorRing">
            <summary>
             Gets the exterior ring of the polygon.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCurveRing" /> that defines the exterior ring of the polygon.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.GetInteriorRingCount">
            <summary>
             Gets the number of interior rings in this polygon.
            </summary>
            <returns> The number of interior rings.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.GetInteriorRing(System.Int32)">
            <summary>
             Gets the interior ring at the specified index. The indexing
             starts at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the interior ring in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCurveRing" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygon.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurvePolygonCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCurvePolygonCollection" /> provides support for defining an ordered set of
             curve polygons.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.GetCount">
            <summary>
             Gets the number of curve polygons in the collection.
            </summary>
            <returns> Returns number of curve polygons in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.GetItem(System.Int32)">
            <summary>
             Gets the curve polygon in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the curve polygon to retrieve.
            </param>
            <returns> Returns the curve polygon in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.SetItem(System.Int32,OSGeo.MapGuide.MgCurvePolygon)">
            <summary>
             Sets the curve polygon in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurvePolygon" />) curve polygon to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.Add(OSGeo.MapGuide.MgCurvePolygon)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurvePolygon" />) curve polygon to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.Insert(System.Int32,OSGeo.MapGuide.MgCurvePolygon)">
            <summary>
             Inserts the specified curve polygon at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurvePolygon" />) curve polygon to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.Clear">
            <summary>
             Removes all curve polygons from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.Remove(OSGeo.MapGuide.MgCurvePolygon)">
            <summary>
             Removes the specified curve polygon from the collection.  Returns false if
             the curve polygon could not be removed.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurvePolygon" />) curve polygon reference to remove.
            </param>
            <returns> Returns true if the curve polygon was removed
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the curve polygon at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the curve polygon to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.Contains(OSGeo.MapGuide.MgCurvePolygon)">
            <summary>
             Returns true if the collection contains the specified curve polygon, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurvePolygon" />) curve polygon reference to check containment of.
            </param>
            <returns> True if the collection contains the specified curve polygon, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.IndexOf(OSGeo.MapGuide.MgCurvePolygon)">
            <summary>
             Returns the index of the specified curve polygon in the collection or -1
             if the curve polygon does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurvePolygon" />) curve polygon reference to find the index of.
            </param>
            <returns> The index of the specified curve polygon in the collection or -1 if the
              curve polygon does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurvePolygonCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgCurvePolygonCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurveRing">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCurveRing" /> is a geometry component used in the construction
             of <see cref="T:OSGeo.MapGuide.MgCurvePolygon" /> objects.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.GetComponentType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.GetCount">
            <summary>
             Gets the number of curve segments that define the ring.
            </summary>
            <returns> The number of curve segments.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.GetSegment(System.Int32)">
            <summary>
             Gets the curve segment at the specified index. The indexing
             starts at zero.
            </summary>
            <param name="index">
             (int) Identifies the <see cref="T:OSGeo.MapGuide.MgCurveSegment" /> to return.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCurveSegment" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRing.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurveRingCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCurveRingCollection" /> provides support for defining an ordered set of
             curve rings.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.GetCount">
            <summary>
             Gets the number of curve rings in the collection.
            </summary>
            <returns> Returns number of curve rings in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.GetItem(System.Int32)">
            <summary>
             Gets the curve ring in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the curve ring to retrieve.
            </param>
            <returns> Returns the curve ring in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.SetItem(System.Int32,OSGeo.MapGuide.MgCurveRing)">
            <summary>
             Sets the curve ring in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveRing" />) curve ring to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.Add(OSGeo.MapGuide.MgCurveRing)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveRing" />) curve ring to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.Insert(System.Int32,OSGeo.MapGuide.MgCurveRing)">
            <summary>
             Inserts the specified curve ring at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveRing" />) curve ring to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.Clear">
            <summary>
             Removes all curve rings from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.Remove(OSGeo.MapGuide.MgCurveRing)">
            <summary>
             Removes the specified curve ring from the collection.  Returns true if
             the curve ring was successfully removed.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveRing" />) curve ring reference to remove.
            </param>
            <returns> Returns true if curve ring was removed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the curve ring at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the curve ring to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.Contains(OSGeo.MapGuide.MgCurveRing)">
            <summary>
             Returns true if the collection contains the specified curve ring, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveRing" />) curve ring reference to check containment of.
            </param>
            <returns> True if the collection contains the specified curve ring, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.IndexOf(OSGeo.MapGuide.MgCurveRing)">
            <summary>
             Returns the index of the specified curve ring in the collection or -1
             if the curve ring does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveRing" />) curve ring reference to find the index of.
            </param>
            <returns> The index of the specified curve ring in the collection or -1 if the
              curve ring does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveRingCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgCurveRingCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurveSegment">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCurveSegment" /> is an abstract base class.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegment.GetStartCoordinate">
            <summary>
             Gets the starting coordinate of the curve segment.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that defines the starting coordinate.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegment.GetEndCoordinate">
            <summary>
             Gets the ending coordinate of the curve segment.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that defines the ending coordinate.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurveSegmentCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCurveSegmentCollection" /> provides support for defining an ordered set of
             curve segments.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.GetCount">
            <summary>
             Gets the number of curve segments in the collection.
            </summary>
            <returns> Returns number of curve segments in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.GetItem(System.Int32)">
            <summary>
             Gets the curve segment in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the curve segment to retrieve.
            </param>
            <returns> Returns the curve segment in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.SetItem(System.Int32,OSGeo.MapGuide.MgCurveSegment)">
            <summary>
             Sets the curve segment in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegment" />) Curve segment to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.Add(OSGeo.MapGuide.MgCurveSegment)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegment" />) Curve segment to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.Insert(System.Int32,OSGeo.MapGuide.MgCurveSegment)">
            <summary>
             Inserts the specified curve segment at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegment" />) Curve segment to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.Clear">
            <summary>
             Removes all curve segments from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.Remove(OSGeo.MapGuide.MgCurveSegment)">
            <summary>
             Removes the specified curve segment from the collection. Returns true
             if the curve segment was successfully removed.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegment" />) Curve segment reference to remove.
            </param>
            <returns> Returns true if curve segment was successfully removed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the curve segment at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the curve segment to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.Contains(OSGeo.MapGuide.MgCurveSegment)">
            <summary>
             Returns true if the collection contains the specified curve segment, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegment" />) Curve segment reference to check containment of.
            </param>
            <returns> True if the collection contains the specified curve segment, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.IndexOf(OSGeo.MapGuide.MgCurveSegment)">
            <summary>
             Returns the index of the specified curve segment in the collection or -1
             if the curve segment does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegment" />) Curve segment reference to find the index of.
            </param>
            <returns> The index of the specified curve segment in the collection or -1 if the
              curve segment does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveSegmentCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgCurveSegmentCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurveString">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgCurveString" /> is composed of one or more curve segments.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.GetCount">
            <summary>
             Gets the number of segments in this curve string.
            </summary>
            <returns> The number of curve segments.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.GetSegment(System.Int32)">
            <summary>
             Gets the curve segment at the specified index. The indexing
             starts at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the curve segment in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCurveSegment" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.GetStartCoordinate">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.GetEndCoordinate">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveString.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgCurveStringCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgCurveStringCollection" /> provides support for defining an ordered set of
             curve strings.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.GetCount">
            <summary>
             Gets the number of curve strings in the collection.
            </summary>
            <returns> Returns number of curve strings in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.GetItem(System.Int32)">
            <summary>
             Gets the curve string in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the curve string to retrieve.
            </param>
            <returns> Returns the curve string in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.SetItem(System.Int32,OSGeo.MapGuide.MgCurveString)">
            <summary>
             Sets the curve string in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveString" />) curve string to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.Add(OSGeo.MapGuide.MgCurveString)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveString" />) curve string to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.Insert(System.Int32,OSGeo.MapGuide.MgCurveString)">
            <summary>
             Inserts the specified curve string at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveString" />) curve string to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.Clear">
            <summary>
             Removes all curve strings from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.Remove(OSGeo.MapGuide.MgCurveString)">
            <summary>
             Removes the specified curve string from the collection. Return true if
             the curve string was removed.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveString" />) curve string reference to remove.
            </param>
            <returns> Returns true if curve string was removed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the curve string at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the curve string to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.Contains(OSGeo.MapGuide.MgCurveString)">
            <summary>
             Returns true if the collection contains the specified curve string, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveString" />) curve string reference to check containment of.
            </param>
            <returns> True if the collection contains the specified curve string, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.IndexOf(OSGeo.MapGuide.MgCurveString)">
            <summary>
             Returns the index of the specified curve string in the collection or -1
             if the curve string does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgCurveString" />) curve string reference to find the index of.
            </param>
            <returns> The index of the specified curve string in the collection or -1 if the
              curve string does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgCurveStringCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgCurveStringCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgEnvelope">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgEnvelope" /> represents a bounding box defined in terms of a
             lower left coordinate and an upper right coordinate.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.#ctor">
            <summary>
             Constructs and initializes  an &quot;null" envelope.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.#ctor(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Constructs and initializes  an envelope for a region defined by one
             coordinate.
            </summary>
            <param name="coord">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> to use in defining the region.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.#ctor(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Constructs and initializes  an envelope for a region defined by two
             coordinates.
            </summary>
            <param name="coord1">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The first <see cref="T:OSGeo.MapGuide.MgCoordinate" /> to use in defining the region.
            </param>
            <param name="coord2">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The second <see cref="T:OSGeo.MapGuide.MgCoordinate" /> to use in defining the region.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Constructs and initializes  an envelope for a region defined by two
             coordinates , given as four doubles
            </summary>
            <param name="xMin">
             (double) Left coordinate
            </param>
            <param name="yMin">
             (double) Bottom coordinate
            </param>
            <param name="xMax">
             (double) Right coordinate
            </param>
            <param name="yMax">
             (double) Top coordinate
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.#ctor(OSGeo.MapGuide.MgEnvelope)">
            <summary>
             Constructs and initializes  an envelope that is a copy of another.
            </summary>
            <param name="envelope">
             (<see cref="T:OSGeo.MapGuide.MgEnvelope" />) The <see cref="T:OSGeo.MapGuide.MgEnvelope" /> to copy.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.GetLowerLeftCoordinate">
            <summary>
             Returns the lower left coordinate of the envelope.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that defines the lower left corner of the envelope.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.GetUpperRightCoordinate">
            <summary>
             Returns the upper right coordinate of the envelope.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that defines the upper right corner of the envelope.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.GetWidth">
            <summary>
             Returns the difference between the maximum and minimum X values.
            </summary>
            <returns> A double representing the width of the envelope.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.GetHeight">
            <summary>
             Returns the difference between the maximum and minimum Y values.
            </summary>
            <returns> A double representing the height of the envelope.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.GetDepth">
            <summary>
             Returns the difference between the maximum and minimum Z values.
            </summary>
            <returns> A double representing the depth of the envelope.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.IsNull">
            <summary>
             Tests whether this Envelope is &quot;null" or not.
            </summary>
            <returns> True if this envelope is &quot;null", false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.MakeNull">
            <summary>
             Makes this envelope a &quot;null" envelope.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.ExpandToInclude(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Enlarges the boundary of the envelope so that it contains the given
             coordinate.
            </summary>
            <param name="coordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> to expand this envelope to include.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.ExpandToInclude(OSGeo.MapGuide.MgEnvelope)">
            <summary>
             Enlarges the boundary of the envelope so that it contains the given
             envelope.
            </summary>
            <param name="envelope">
             (<see cref="T:OSGeo.MapGuide.MgEnvelope" />) The <see cref="T:OSGeo.MapGuide.MgEnvelope" /> to expand this envelope to include.
            </param>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.Contains(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Tests whether the given coordinate lies in or on this envelope.
            </summary>
            <param name="coordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> to test containment of.
            </param>
            <returns> True if the coordinate is contained in this envelope, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.Contains(OSGeo.MapGuide.MgEnvelope)">
            <summary>
             Tests whether the given envelope lies completely inside this
             Envelope (inclusive of the boundary).
            </summary>
            <param name="envelope">
             (<see cref="T:OSGeo.MapGuide.MgEnvelope" />) The <see cref="T:OSGeo.MapGuide.MgEnvelope" /> to test containment of.
            </param>
            <returns> True if the envelope argument is contained in this envelope,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.Intersects(OSGeo.MapGuide.MgEnvelope)">
            <summary>
             Tests if the region defined by another envelope overlaps (intersects)
             the region of this envelope.
            </summary>
            <param name="envelope">
             (<see cref="T:OSGeo.MapGuide.MgEnvelope" />) The <see cref="T:OSGeo.MapGuide.MgEnvelope" /> to test for intersection.
            </param>
            <returns> True if the envelopes intersect, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgEnvelope.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this envelope.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this envelope.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgEnvelope" /> that is a copy of this one but whose region is
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometricEntity">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> is an abstract base class that is the root
             of all geometry and geometry component classes.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.GetDimension">
            <summary>
             Gets the geometric dimension of this entity, indicating
             whether the entity is defined by points, curves, or regions,
             that is, is zero, one, or two dimensional.
            </summary>
            <returns> Returns one of the values defined in <see cref="!:OSGeo.MapGuide.MgGeometricDimension" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.IsEmpty">
            <summary>
             Tests whether this entity is empty or not.
            </summary>
            <returns> True if the geometry is empty, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.IsSimple">
            <summary>
             Tests whether this entity is simple or not. Simple entities
             do not contain any points of self-tangency or self
             intersection.
            </summary>
            <returns> True if the geometry is simple, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.IsClosed">
            <summary>
             Tests whether the entity&apos;s boundary encloses an area.
            </summary>
            <returns> True if the geometry is closed, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.IsValid">
            <summary>
             Tests whether the coordinates given to construct the entity represent
             a valid Geometry or GeometryComponent.
             Note: Optional for MapGuide.
            </summary>
            <returns> True if the geometry is valid, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.Envelope">
            <summary>
             Gets this geometric entity&apos;s bounding box.
            </summary>
            <returns> Returns an <see cref="T:OSGeo.MapGuide.MgEnvelope" /> object representing the bounding box.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.Copy">
            <summary>
             Returns a copy of this geometric entity.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each
              coordinate transformed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.GetArea">
            <summary>
             Returns the area for this geometric entity or zero for
             <see cref="T:OSGeo.MapGuide.MgLineString" /> and <see cref="T:OSGeo.MapGuide.MgPoint" /> objects. Calculates the area for
             each <see cref="T:OSGeo.MapGuide.MgPolygon" /> in an <see cref="T:OSGeo.MapGuide.MgMultiPolygon" /> or for each
             <see cref="T:OSGeo.MapGuide.MgCurvePolygon" /> in an <see cref="T:OSGeo.MapGuide.MgMultiCurvePolygon" /> and returns the sum
             of areas.
            </summary>
            <returns> The area of this geometric entity.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.GetLength">
            <summary>
             Calculates and returns the length for this geometric entity.
             Defaults to zero for <see cref="T:OSGeo.MapGuide.MgPoint" /> objects.
            </summary>
            <returns> Length of this geometric entity
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometricEntity.GetCentroid">
            <summary>
             Calculates and returns the centroid of this geometric entity.
            </summary>
            <returns> A centroid point
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometry">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometry" /> is an abstract base class for all of the geometry
             types.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.GetGeometryType">
            <summary>
             Gets the type of this geometry.
            </summary>
            <returns> Returns the value defined in <see cref="T:OSGeo.MapGuide.MgGeometryType" /> corresponding to
              this geometry.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Contains(OSGeo.MapGuide.MgGeometry)">
            <summary>
             This is a convenience method. Given 2 geometries a and b,
             a.Contains(b) is true if and only if b.<see cref="T:OSGeo.MapGuide.MgGeometry" />::Within(a)
             is true.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if the other geometry is within this geometry, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Crosses(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Crosses(b) is true if and only
             if the dimension of the intersection of the interior of a and
             the interior of b is less than the greater of the dimension
             of the interior of a and the dimension of the interior of b
             and the intersection of a and b is neither a nor b.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry spatially crosses the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Disjoint(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Disjoint(b)is true if and only
             if the intersection of a and b is empty.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry is spatially disjoint from the other
              geometry, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Equals(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Equals(b) is true if the 2
             geometries are spatially equal
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry is spatially equal to the other
              geometry, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Intersects(OSGeo.MapGuide.MgGeometry)">
            <summary>
             This is a convenience method. Given 2 geometries a and b,
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry is not disjoint with respect to the
              other geometry, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Overlaps(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Overlaps(b) is true if and only
             if the dimension of the interior of a equals the dimension of
             the interior of b equals the dimension of the intersection of
             the interior of a and the interior of b and the intersection
             of a and b is neither a nor b.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry spatially overlaps the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Touches(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Touches(b) is true if and only
             if the intersection of the interior of a and the interior of
             b is empty and the intersection of a and b is not empty.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry spatially touches the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Within(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Within(b) is true if and only
             if the intersection of a and b is a and the intersection of
             the interior of a and the interior of b is not empty.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry is spatially within the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Boundary">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometry" /> that represents this geometric entity&apos;s
              boundary.
              &lt;h2&gt;&apos;Mod 2&apos; Union Rule&lt;/h2&gt;
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Buffer(System.Double,OSGeo.MapGuide.MgMeasure)">
            <summary>
             Returns a geometry that represents all points whose distance
             from this geometric entity is less than or equal to a given
             distance. By default, the distance computation is done using
             a linear algorithm unless a custom measure is supplied.
            </summary>
            <param name="distance">
             (double) The distance from the geometry in units. This value cannot be zero.
            </param>
            <param name="measure">
             (<see cref="T:OSGeo.MapGuide.MgMeasure" />) The <see cref="T:OSGeo.MapGuide.MgMeasure" /> instance to use when computing the buffer. If null, a linear distance algorithm is used.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometry" /> that represents the geometric entity&apos;s buffer, or
              NULL if the geometry cannot be buffered.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.ConvexHull">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometry" /> that represents the convex hull of the
              geometric entity.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OSGeo.MapGuide.MgGeometry.Difference(OSGeo.MapGuide.MgGeometry)" -->
        <member name="M:OSGeo.MapGuide.MgGeometry.Distance(OSGeo.MapGuide.MgGeometry,OSGeo.MapGuide.MgMeasure)">
            <summary>
             Returns the shortest distance between this geometry and
             another. By default distance computation is done using a
             linear algorithm unless a custom measure is supplied.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to determine the distance to.
            </param>
            <param name="measure">
             (<see cref="T:OSGeo.MapGuide.MgMeasure" />) The <see cref="T:OSGeo.MapGuide.MgMeasure" /> instance to use when computing the distance. If null, a linear distance algorithm is used.
            </param>
            <returns> A double value representing the shortest distance between two
              geometries.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Intersection(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Returns a geometry that represents the point set
             intersection of this geometry and another.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to compute the intersection with this one.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometry" /> that represents the intersection.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OSGeo.MapGuide.MgGeometry.SymetricDifference(OSGeo.MapGuide.MgGeometry)" -->
        <member name="M:OSGeo.MapGuide.MgGeometry.Union(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Returns a geometry that represents the point set union of
             this geometry with another.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to union with this one.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometry" /> representing the union of the two geometries.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Prepare">
            <summary>
             Returns a prepared version of this geometry that is optimized for
             repeated evaluation of spatial predicate operations
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgPreparedGeometry" /> representing the prepared version of this geometry
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometry.Tessellate">
            <summary>
             Returns a tessellated version of this geometry. A tessellated version of this
             geometry will have all arc/curve geometry components approximated with line
             strings. Thus, this method is only applicable for curve geometries and has
             no effect on non-curve geometries.
            </summary>
            <returns> A tesellated version of this geometry. If this geometry is not curve-based, the operation does nothing and this method returns itself.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometryCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> provides support for defining an ordered set of
             geometry objects.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.GetCount">
            <summary>
             Gets the number of objects in the collection.
            </summary>
            <returns> Returns number of objects in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.GetItem(System.Int32)">
            <summary>
             Gets the object in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the object to retrieve.
            </param>
            <returns> Returns the object in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.SetItem(System.Int32,OSGeo.MapGuide.MgGeometry)">
            <summary>
             Sets the object in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the object to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) Object to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.Add(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Adds the specified object to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) Object to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.Insert(System.Int32,OSGeo.MapGuide.MgGeometry)">
            <summary>
             Inserts the specified object at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the object.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) Object to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.Clear">
            <summary>
             Removes all objects from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.Remove(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Removes the specified object from the collection. Returns true if removal
             was successful.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) Object reference to remove.
            </param>
            <returns> Returns true if object was removed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the object at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the object to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.Contains(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Returns true if the collection contains the specified object, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) Object reference to check containment of.
            </param>
            <returns> True if the collection contains the specified object, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.IndexOf(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Returns the index of the specified object in the collection or -1
             if the object does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) Object reference to find the index of.
            </param>
            <returns> The index of the specified object in the collection or -1 if the
              coordinate does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometryComponent">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgGeometryComponent" /> is the base class for all of the geometry
             component types, namely, <see cref="T:OSGeo.MapGuide.MgArcSegment" />, <see cref="T:OSGeo.MapGuide.MgCurveRing" />,
             <see cref="T:OSGeo.MapGuide.MgLinearRing" />, and <see cref="T:OSGeo.MapGuide.MgLinearSegment" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryComponent.GetComponentType">
            <summary>
             Gets the type of this geometry component.
            </summary>
            <returns> Returns one of the values defined in
              <see cref="T:OSGeo.MapGuide.MgGeometryComponentType" />.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometryException">
            <summary>
             Thrown when an error occurs calculating geometry.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgGeometryException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometryFactory">
            <summary>
             The <see cref="T:OSGeo.MapGuide.MgGeometryFactory" /> class is used to construct objects
             whose classes are derived from <see cref="T:OSGeo.MapGuide.MgGeometry" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.#ctor">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgGeometryFactory" /> object
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateCoordinateXY(System.Double,System.Double)">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object with Dimension = XY, X = x, Y
             = y.
            </summary>
            <param name="x">
             (double) X value for the coordinate.
            </param>
            <param name="y">
             (double) Y value for the coordinate.
            </param>
            <returns> An initialized <see cref="T:OSGeo.MapGuide.MgCoordinate" /> instance.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateCoordinateXYM(System.Double,System.Double,System.Double)">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object with Dimension = XYM, X = x, Y
             = y, M = m.
            </summary>
            <param name="x">
             (double) X value for the coordinate.
            </param>
            <param name="y">
             (double) Y value for the coordinate.
            </param>
            <param name="m">
             (double) M value for the coordinate.
            </param>
            <returns> An initialized <see cref="T:OSGeo.MapGuide.MgCoordinate" /> instance.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateCoordinateXYZ(System.Double,System.Double,System.Double)">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object with Dimension = XYZ, X = x, Y
             = y, Z = z.
            </summary>
            <param name="x">
             (double) X value for the coordinate.
            </param>
            <param name="y">
             (double) Y value for the coordinate.
            </param>
            <param name="z">
             (double) Z value for the coordinate.
            </param>
            <returns> An initialized <see cref="T:OSGeo.MapGuide.MgCoordinate" /> instance.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateCoordinateXYZM(System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgCoordinate" /> object with Dimension = XYZM, X = x,
             Y = y, Z = z, M = m.
            </summary>
            <param name="x">
             (double) X value for the coordinate.
            </param>
            <param name="y">
             (double) Y value for the coordinate.
            </param>
            <param name="z">
             (double) Z value for the coordinate.
            </param>
            <param name="m">
             (double) M value for the coordinate.
            </param>
            <returns> An initialized <see cref="T:OSGeo.MapGuide.MgCoordinate" /> instance.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateArcSegment(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Creates an arc segment from start, end, and control
             coordinates.
            </summary>
            <param name="start">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the start point of the arc.
            </param>
            <param name="end">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the end point of the arc.
            </param>
            <param name="control">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the control point of the arc.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgArcSegment" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateLinearSegment(OSGeo.MapGuide.MgCoordinateCollection)">
            <summary>
             Creates a linear segment from a collection of coordinates.
            </summary>
            <param name="coordinates">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateCollection" />) An <see cref="T:OSGeo.MapGuide.MgCoordinateCollection" /> that specifies the coordinates of the linear segment. The collection must contain at least two coordinates.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgLinearSegment" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateLinearRing(OSGeo.MapGuide.MgCoordinateCollection)">
            <summary>
             Creates a linear ring from a collection of coordinates.
            </summary>
            <param name="coordinates">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateCollection" />) An <see cref="T:OSGeo.MapGuide.MgCoordinateCollection" /> that specifies the coordinates of the linear ring. The collection must contain at least three coordinates.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgLinearRing" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateCurveRing(OSGeo.MapGuide.MgCurveSegmentCollection)">
            <summary>
             Creates a curve ring from a collection of curve segments.
            </summary>
            <param name="curveSegments">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegmentCollection" />) An <see cref="T:OSGeo.MapGuide.MgCurveSegmentCollection" /> that specifies the segments of the curve ring. The segments in the collection must form a closed shape. See the example php code for details about the construction of the segments so that the resulting shape is closed.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgCurveRing" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreatePoint(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Creates a point from a coordinate.
            </summary>
            <param name="coordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the location of this point.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgPoint" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateLineString(OSGeo.MapGuide.MgCoordinateCollection)">
            <summary>
             Creates a line string from a collection of coordinates.
            </summary>
            <param name="coordinates">
             (<see cref="T:OSGeo.MapGuide.MgCoordinateCollection" />) An <see cref="T:OSGeo.MapGuide.MgCoordinateCollection" /> that specifies the coordinates of the line string. The collection must contain at least two coordinates.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgLineString" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateCurveString(OSGeo.MapGuide.MgCurveSegmentCollection)">
            <summary>
             Creates a curve string from a collection of curve segments.
            </summary>
            <param name="curveSegments">
             (<see cref="T:OSGeo.MapGuide.MgCurveSegmentCollection" />) An <see cref="T:OSGeo.MapGuide.MgCurveSegmentCollection" /> that specifies the segments of the curve string. The collection must contain at least one segment.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgCurveString" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreatePolygon(OSGeo.MapGuide.MgLinearRing,OSGeo.MapGuide.MgLinearRingCollection)">
            <summary>
             Creates a polygon from an outer ring and a collection of inner rings.
            </summary>
            <param name="outerRing">
             (<see cref="T:OSGeo.MapGuide.MgLinearRing" />) An <see cref="T:OSGeo.MapGuide.MgLinearRing" /> that specifies the polygons outer boundary.
            </param>
            <param name="innerRings">
             (<see cref="T:OSGeo.MapGuide.MgLinearRingCollection" />) An <see cref="T:OSGeo.MapGuide.MgLinearRingCollection" /> that specifies the polygons holes. This parameter may be null.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgPolygon" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateCurvePolygon(OSGeo.MapGuide.MgCurveRing,OSGeo.MapGuide.MgCurveRingCollection)">
            <summary>
             Creates a curve polygon from an outer ring and a collection of inner
             rings.
            </summary>
            <param name="outerRing">
             (<see cref="T:OSGeo.MapGuide.MgCurveRing" />) An <see cref="T:OSGeo.MapGuide.MgCurveRing" /> that specifies the polygons outer boundary.
            </param>
            <param name="innerRings">
             (<see cref="T:OSGeo.MapGuide.MgCurveRingCollection" />) An <see cref="T:OSGeo.MapGuide.MgCurveRingCollection" /> that specifies the polygons holes. This parameter may be null.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgCurvePolygon" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateMultiPoint(OSGeo.MapGuide.MgPointCollection)">
            <summary>
             Creates a multi point aggregate geometry from a collection of points.
            </summary>
            <param name="points">
             (<see cref="T:OSGeo.MapGuide.MgPointCollection" />) An <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> that specifies the points. All geometry objects in this collection must be of type <see cref="T:OSGeo.MapGuide.MgPoint" />.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgMultiPoint" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateMultiLineString(OSGeo.MapGuide.MgLineStringCollection)">
            <summary>
             Creates a multi line string aggregate geometry from a collection of
             line strings.
            </summary>
            <param name="lineStrings">
             (<see cref="T:OSGeo.MapGuide.MgLineStringCollection" />) An <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> that specifies the line strings. All geometry objects in this collection must be of type <see cref="T:OSGeo.MapGuide.MgLineString" />.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgMultiLineString" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateMultiCurveString(OSGeo.MapGuide.MgCurveStringCollection)">
            <summary>
             Creates a multi curve string aggregate geometry from a collection of
             curve strings.
            </summary>
            <param name="curveStrings">
             (<see cref="T:OSGeo.MapGuide.MgCurveStringCollection" />) An <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> that specifies the curve strings. All geometry objects in this collection must be of type <see cref="T:OSGeo.MapGuide.MgCurveString" />.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgMultiCurveString" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateMultiPolygon(OSGeo.MapGuide.MgPolygonCollection)">
            <summary>
             Creates a multi polygon aggregate geometry from a collection of
             polygons.
            </summary>
            <param name="polygons">
             (<see cref="T:OSGeo.MapGuide.MgPolygonCollection" />) An <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> that specifies the polygons. All geometry objects in this collection must be of type <see cref="T:OSGeo.MapGuide.MgPolygon" />.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgMultiPolygon" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateMultiCurvePolygon(OSGeo.MapGuide.MgCurvePolygonCollection)">
            <summary>
             Creates a multi curve polygon aggregate geometry from a collection of
             curve polygons.
            </summary>
            <param name="polygons">
             (<see cref="T:OSGeo.MapGuide.MgCurvePolygonCollection" />) An <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> that specifies the curve polygons. All geometry objects in this collection must be of type <see cref="T:OSGeo.MapGuide.MgCurvePolygon" />.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgMultiCurvePolygon" />.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometryFactory.CreateMultiGeometry(OSGeo.MapGuide.MgGeometryCollection)">
            <summary>
             Creates an aggregate geometry from a collection of geometry objects.
            </summary>
            <param name="geometries">
             (<see cref="T:OSGeo.MapGuide.MgGeometryCollection" />) An <see cref="T:OSGeo.MapGuide.MgGeometryCollection" /> that specifies the geometries.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgMultiGeometry" />.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgGeometrySimplifier">
            <summary>
             The <see cref="T:OSGeo.MapGuide.MgGeometrySimplifier" /> class provides the ability to simplify <see cref="T:OSGeo.MapGuide.MgGeometry" /> instances.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometrySimplifier.#ctor">
            <summary>
             Creates an <see cref="T:OSGeo.MapGuide.MgGeometrySimplifier" /> object
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgGeometrySimplifier.Simplify(OSGeo.MapGuide.MgGeometry,System.Double,System.Int32)">
            <summary>
             Simplifies the given geometry using the specified algorithm and tolerance
            </summary>
            <param name="geom">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The geometry instance to be simplified
            </param>
            <param name="tolerance">
             (double) The tolerance factor to simplify by
            </param>
            <param name="algorithm">
             (int) The simplification algorithm to use. Use any value from <see cref="T:OSGeo.MapGuide.MgGeometrySimplificationAlgorithmType" />
            </param>
            <returns> A simplified <see cref="T:OSGeo.MapGuide.MgGeometry" /> instance or null if simpification results in an empty geometry
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgInvalidCoordinateSystemException">
            <summary>
             Thrown when the Coordinate System API encounters a problem.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgInvalidCoordinateSystemException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgInvalidCoordinateSystemException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgInvalidCoordinateSystemTypeException">
            <summary>
             Thrown when the coordinate system type is invalid.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgInvalidCoordinateSystemTypeException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgInvalidCoordinateSystemTypeException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgInvalidCoordinateSystemUnitsException">
            <summary>
             Thrown when the coordinate system units are invalid.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgInvalidCoordinateSystemUnitsException.#ctor(System.String,System.Int32,System.String,OSGeo.MapGuide.MgStringCollection,System.String,OSGeo.MapGuide.MgStringCollection)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Construct a <see cref="T:OSGeo.MapGuide.MgInvalidCoordinateSystemUnitsException" /> object.
            </summary>
            <param name="methodName">
             Name of the method where the exception occurred.
            </param>
            <param name="lineNumber">
             Line number where the exception occurred.
            </param>
            <param name="fileName">
             File name where the exception occurred.
            </param>
            <param name="whatArguments">
             Collection of arguments used to format the message that describes what the exception is.
            </param>
            <param name="whyMessageId">
             ID of the message that describes why the exception occurs.
            </param>
            <param name="whyArguments">
             Collection of arguments used to format the message that describes why the exception occurs.
            </param>
        </member>
        <member name="T:OSGeo.MapGuide.MgLinearRing">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgLinearRing" /> is a geometry component.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRing.GetComponentType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRing.GetCoordinates">
            <summary>
             Returns an iterator that can be used to enumerate each of
             the linear rings coordinates.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinateIterator" /> over the rings coordinates.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRing.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRing.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRing.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRing.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRing.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgLinearRingCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgLinearRingCollection" /> provides support for defining an ordered set of
             linear rings.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.GetCount">
            <summary>
             Gets the number of linear rings in the collection.
            </summary>
            <returns> Returns number of linear rings in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.GetItem(System.Int32)">
            <summary>
             Gets the linear ring in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the linear ring to retrieve.
            </param>
            <returns> Returns the linear ring in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.SetItem(System.Int32,OSGeo.MapGuide.MgLinearRing)">
            <summary>
             Sets the linear ring in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLinearRing" />) linear ring to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.Add(OSGeo.MapGuide.MgLinearRing)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLinearRing" />) linear ring to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.Insert(System.Int32,OSGeo.MapGuide.MgLinearRing)">
            <summary>
             Inserts the specified linear ring at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLinearRing" />) linear ring to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.Clear">
            <summary>
             Removes all linear rings from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.Remove(OSGeo.MapGuide.MgLinearRing)">
            <summary>
             Removes the specified linear ring from the collection. Returns true
             if removal was successful.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLinearRing" />) linear ring reference to remove.
            </param>
            <returns> Returns true if successful.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the linear ring at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the linear ring to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.Contains(OSGeo.MapGuide.MgLinearRing)">
            <summary>
             Returns true if the collection contains the specified linear ring, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLinearRing" />) linear ring reference to check containment of.
            </param>
            <returns> True if the collection contains the specified linear ring, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.IndexOf(OSGeo.MapGuide.MgLinearRing)">
            <summary>
             Returns the index of the specified linear ring in the collection or -1
             if the linear ring does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLinearRing" />) linear ring reference to find the index of.
            </param>
            <returns> The index of the specified linear ring in the collection or -1 if the
              linear ring does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearRingCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgLinearRingCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgLinearSegment">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgLinearSegment" /> is a geometry component used in the
             construction of <see cref="T:OSGeo.MapGuide.MgCurveString" /> geometries and <see cref="T:OSGeo.MapGuide.MgCurveRing" />
             geometry components.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.GetComponentType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.GetCoordinates">
            <summary>
             Returns an iterator that can be used to enumerate each of the linear
             segments coordinates.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinateIterator" /> over the segments coordinates.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.GetStartCoordinate">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.GetEndCoordinate">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLinearSegment.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgLineString">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgLineString" /> is a curve with linear interpolation between
             points.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.GetCoordinates">
            <summary>
             Returns an iterator that can be used to enumerate each of the line
             strings coordinates.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinateIterator" /> over the coordinates.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.GetStartCoordinate">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.GetEndCoordinate">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineString.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgLineStringCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgLineStringCollection" /> provides support for defining an ordered set of
             line strings.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.GetCount">
            <summary>
             Gets the number of line strings in the collection.
            </summary>
            <returns> Returns number of line strings in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.GetItem(System.Int32)">
            <summary>
             Gets the line string in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the line string to retrieve.
            </param>
            <returns> Returns the line string in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.SetItem(System.Int32,OSGeo.MapGuide.MgLineString)">
            <summary>
             Sets the line string in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLineString" />) line string to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.Add(OSGeo.MapGuide.MgLineString)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLineString" />) line string to add to the collection.
            </param>
            <returns> Returns nothing.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.Insert(System.Int32,OSGeo.MapGuide.MgLineString)">
            <summary>
             Inserts the specified line string at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLineString" />) line string to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.Clear">
            <summary>
             Removes all line strings from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.Remove(OSGeo.MapGuide.MgLineString)">
            <summary>
             Removes the specified line string from the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLineString" />) line string reference to remove.
            </param>
            <returns> Returns true if removal was successful.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the line string at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the line string to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.Contains(OSGeo.MapGuide.MgLineString)">
            <summary>
             Returns true if the collection contains the specified line string, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLineString" />) line string reference to check containment of.
            </param>
            <returns> True if the collection contains the specified line string, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.IndexOf(OSGeo.MapGuide.MgLineString)">
            <summary>
             Returns the index of the specified line string in the collection or -1
             if the line string does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgLineString" />) line string reference to find the index of.
            </param>
            <returns> The index of the specified line string in the collection or -1 if the
              line string does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgLineStringCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgLineStringCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgMeasure">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgMeasure" /> is an abstract class that can be implemented to
             provide non-linear measurement for geometry operations.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMeasure.GetDistance(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Gets the distance between two coordinates.
            </summary>
            <param name="coord1">
             An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the first coordinate.
            </param>
            <param name="coord2">
             An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the second coordinate.
            </param>
            <returns> The distance between coord1 and coord2 as a double in Meters.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMeasure.GetAzimuth(OSGeo.MapGuide.MgCoordinate,OSGeo.MapGuide.MgCoordinate)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Gets the angle with respect to the north of a vector formed by two
             coordinates.
            </summary>
            <param name="coord1">
             An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the first coordinate.
            </param>
            <param name="coord2">
             An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that specifies the second coordinate.
            </param>
            <returns> The azimuth (Angle with respect to the North) of the vector formed by
              coord1 and coord2.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMeasure.GetCoordinate(OSGeo.MapGuide.MgCoordinate,System.Double,System.Double)">
            <summary>
             (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.)
             Computes a coordinate a given distance along a vector that is defined
             by a starting coordinate and an azimuth (Angle with respect to the
             North).
            </summary>
            <param name="coord">
             An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that represents the start of the vector.
            </param>
            <param name="azimuth">
             An azimuth (Angle with respect to the North) that defines the direction of the vector.
            </param>
            <param name="distance">
             The distance along the vector of the desired coordinate in Meters.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that lies the given distance along the vector.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgMultiCurvePolygon">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgMultiCurvePolygon" /> is a two-dimensional aggregate
             geometry whose elements are <see cref="T:OSGeo.MapGuide.MgCurvePolygon" /> geometries.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.GetCount">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.GetCurvePolygon(System.Int32)">
            <summary>
             Gets the polygon at the specified index. The indexing starts
             at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the curve polygon in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCurvePolygon" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurvePolygon.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgMultiCurveString">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgMultiCurveString" /> is a one-dimensional aggregate geometry
             whose elements are <see cref="T:OSGeo.MapGuide.MgCurveString" /> geometries.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.GetCount">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.GetCurveString(System.Int32)">
            <summary>
             Gets the curve string at the specified index. The indexing
             starts at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the curve string in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCurveString" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiCurveString.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgMultiGeometry">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgMultiGeometry" /> is a heterogeneous aggregate of one or
             more <see cref="T:OSGeo.MapGuide.MgGeometry" /> objects.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.GetCount">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.GetGeometry(System.Int32)">
            <summary>
             Gets the geometry at the specified index. The indexing starts
             at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the geometry in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgGeometry" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiGeometry.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgMultiLineString">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgMultiLineString" /> is a one-dimensional aggregate geometry
             whose elements are <see cref="T:OSGeo.MapGuide.MgLineString" /> geometries.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.GetCount">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.GetLineString(System.Int32)">
            <summary>
             Gets the line string at the specified index. The indexing
             starts at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the line string in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgLineString" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiLineString.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgMultiPoint">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgMultiPoint" /> is a 0 dimensional aggregate geometry whose
             elements are <see cref="T:OSGeo.MapGuide.MgPoint" /> geometries.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.GetCount">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.GetPoint(System.Int32)">
            <summary>
             Gets the point at the specified index. The indexing starts at
             zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the point in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgPoint" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPoint.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgMultiPolygon">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgMultiPolygon" /> is a two-dimensional aggregate geometry
             whose elements are <see cref="T:OSGeo.MapGuide.MgPolygon" /> geometries.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.GetCount">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.GetPolygon(System.Int32)">
            <summary>
             Gets the polygon at the specified index. The indexing starts
             at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the polygon in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgPolygon" /> at the specified index
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgMultiPolygon.GetCoordinates">
            <summary>
             Returns an iterator over the coordinates included in this
             geometric entity.
            </summary>
            <returns> The coordinates of this geometric entity
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgPoint">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgPoint" /> is a 0-dimensional geometry and represents a
             single location in coordinate space.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.GetCoordinate">
            <summary>
             Gets the coordinate that defines this point.
            </summary>
            <returns> The <see cref="T:OSGeo.MapGuide.MgCoordinate" /> that defines this point.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPoint.GetCoordinates">
            <summary>
             Returns an iterator over the coordinates included in this
             geometric entity.
            </summary>
            <returns> The coordinates of this geometric entity
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgPointCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgPointCollection" /> provides support for defining an ordered set of
             points.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.GetCount">
            <summary>
             Gets the number of points in the collection.
            </summary>
            <returns> Returns number of points in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.GetItem(System.Int32)">
            <summary>
             Gets the point in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the point to retrieve.
            </param>
            <returns> Returns the point in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.SetItem(System.Int32,OSGeo.MapGuide.MgPoint)">
            <summary>
             Sets the point in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPoint" />) point to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.Add(OSGeo.MapGuide.MgPoint)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPoint" />) point to add to the collection.
            </param>
            <returns> Returns nothing.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.Insert(System.Int32,OSGeo.MapGuide.MgPoint)">
            <summary>
             Inserts the specified point at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPoint" />) point to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.Clear">
            <summary>
             Removes all points from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.Remove(OSGeo.MapGuide.MgPoint)">
            <summary>
             Removes the specified point from the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPoint" />) point reference to remove.
            </param>
            <returns> Returns true if removal was successful.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the point at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the point to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.Contains(OSGeo.MapGuide.MgPoint)">
            <summary>
             Returns true if the collection contains the specified point, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPoint" />) point reference to check containment of.
            </param>
            <returns> True if the collection contains the specified point, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.IndexOf(OSGeo.MapGuide.MgPoint)">
            <summary>
             Returns the index of the specified point in the collection or -1
             if the point does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPoint" />) point reference to find the index of.
            </param>
            <returns> The index of the specified point in the collection or -1 if the
              point does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPointCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgPointCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgPolygon">
            <summary>
             An <see cref="T:OSGeo.MapGuide.MgPolygon" /> is a region, defined by 1 exterior boundary and
             0 or more interior boundaries.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.GetExteriorRing">
            <summary>
             Gets the exterior ring of the polygon.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgLinearRing" /> that defines the exterior ring of the polygon.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.GetInteriorRingCount">
            <summary>
             Gets the number of interior rings in this polygon.
            </summary>
            <returns> The number of interior rings.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.GetInteriorRing(System.Int32)">
            <summary>
             Gets the interior ring at the specified index. The indexing
             starts at zero.
            </summary>
            <param name="index">
             (int) An integer specifying the location of the interior ring in the collection.
            </param>
            <returns> The <see cref="T:OSGeo.MapGuide.MgLinearRing" /> at the specified index.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.GetGeometryType">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.GetDimension">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.IsEmpty">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.IsClosed">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.Copy">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.Transform(OSGeo.MapGuide.MgTransform)">
            <summary>
             Returns a transformed copy of this geometric entity.
            </summary>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) The <see cref="T:OSGeo.MapGuide.MgTransform" /> to use in constructing a copy of this geometric entity.
            </param>
            <returns> An <see cref="T:OSGeo.MapGuide.MgGeometricEntity" /> that is a copy of this one with each coordinate
              transformed.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygon.GetCoordinates">
            <summary>
             Returns an iterator over the coordinates included in this
             geometric entity.
            </summary>
            <returns> The coordinates of this geometric entity
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgPolygonCollection">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgPolygonCollection" /> provides support for defining an ordered set of
             polygons.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.GetCount">
            <summary>
             Gets the number of polygons in the collection.
            </summary>
            <returns> Returns number of polygons in the collection.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.GetItem(System.Int32)">
            <summary>
             Gets the polygon in the collection at the specified index. Throws
             an invalid argument exception if the index is out of range.
            </summary>
            <param name="index">
             (int) Index of the polygon to retrieve.
            </param>
            <returns> Returns the polygon in the collection at the specified index.
            </returns>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.SetItem(System.Int32,OSGeo.MapGuide.MgPolygon)">
            <summary>
             Sets the polygon in the collection at the specified index to the
             specified value. Throws an invalid argument exception if the index is
             out of range.
            </summary>
            <param name="index">
             (int) Index of the coordinate to set.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPolygon" />) polygon to place into the collection.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.Add(OSGeo.MapGuide.MgPolygon)">
            <summary>
             Adds the specified coordinate to the end of the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPolygon" />) polygon to add to the collection.
            </param>
            <returns> Returns nothing
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.Insert(System.Int32,OSGeo.MapGuide.MgPolygon)">
            <summary>
             Inserts the specified polygon at the specified index within the
             collection. Items following the insertion point are moved down to
             accommodate the new item. Throws an invalid argument exception if the
             specified index is out of range.
            </summary>
            <param name="index">
             (int) Index at which to insert the coordinate.
            </param>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPolygon" />) polygon to insert.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.Clear">
            <summary>
             Removes all polygons from the collection.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.Remove(OSGeo.MapGuide.MgPolygon)">
            <summary>
             Removes the specified polygon from the collection.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPolygon" />) polygon reference to remove.
            </param>
            <returns> Returns true if removal was successful.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.RemoveAt(System.Int32)">
            <summary>
             Removes the polygon at the specified index from the collection.
             Throws an invalid argument exception if the index does not exist within
             the collection.
            </summary>
            <param name="index">
             (int) Index of the polygon to remove.
            </param>
            <exception cref="T:OSGeo.MapGuide.MgIndexOutOfRangeException"></exception>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.Contains(OSGeo.MapGuide.MgPolygon)">
            <summary>
             Returns true if the collection contains the specified polygon, false
             otherwise.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPolygon" />) polygon reference to check containment of.
            </param>
            <returns> True if the collection contains the specified polygon, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.IndexOf(OSGeo.MapGuide.MgPolygon)">
            <summary>
             Returns the index of the specified polygon in the collection or -1
             if the polygon does not exist.
            </summary>
            <param name="value">
             (<see cref="T:OSGeo.MapGuide.MgPolygon" />) polygon reference to find the index of.
            </param>
            <returns> The index of the specified polygon in the collection or -1 if the
              polygon does not exist.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPolygonCollection.#ctor">
            <summary>
             Construct a <see cref="T:OSGeo.MapGuide.MgPolygonCollection" /> object
            </summary>
        </member>
        <member name="T:OSGeo.MapGuide.MgPreparedGeometry">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgPreparedGeometry" /> is an prepared form of <see cref="T:OSGeo.MapGuide.MgGeometry" /> optimized for the case of
             repeated evaluation of spatial predicates against it and any other geometry
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgPreparedGeometry.Contains(OSGeo.MapGuide.MgGeometry)">
            <summary>
             This is a convenience method. Given 2 geometries a and b,
             a.Contains(b) is true if and only if b.<see cref="T:OSGeo.MapGuide.MgGeometry" />::Within(a)
             is true.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if the other geometry is within this geometry, false
              otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPreparedGeometry.Crosses(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Crosses(b) is true if and only
             if the dimension of the intersection of the interior of a and
             the interior of b is less than the greater of the dimension
             of the interior of a and the dimension of the interior of b
             and the intersection of a and b is neither a nor b.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry spatially crosses the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPreparedGeometry.Disjoint(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Disjoint(b)is true if and only
             if the intersection of a and b is empty.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry is spatially disjoint from the other
              geometry, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPreparedGeometry.Intersects(OSGeo.MapGuide.MgGeometry)">
            <summary>
             This is a convenience method. Given 2 geometries a and b,
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry is not disjoint with respect to the
              other geometry, false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPreparedGeometry.Overlaps(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Overlaps(b) is true if and only
             if the dimension of the interior of a equals the dimension of
             the interior of b equals the dimension of the intersection of
             the interior of a and the interior of b and the intersection
             of a and b is neither a nor b.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry spatially overlaps the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPreparedGeometry.Touches(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Touches(b) is true if and only
             if the intersection of the interior of a and the interior of
             b is empty and the intersection of a and b is not empty.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry spatially touches the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgPreparedGeometry.Within(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Given 2 geometries a and b, a.Within(b) is true if and only
             if the intersection of a and b is a and the intersection of
             the interior of a and the interior of b is not empty.
            </summary>
            <param name="other">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) The <see cref="T:OSGeo.MapGuide.MgGeometry" /> to test against this one.
            </param>
            <returns> True if this geometry is spatially within the other geometry,
              false otherwise.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgRegion">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgRegion" /> is an abstract base class The concrete classes are
             <see cref="T:OSGeo.MapGuide.MgPolygon" /> and <see cref="T:OSGeo.MapGuide.MgCurvePolygon" />.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgRegion.GetPointInRegion">
            <summary>
             Gets a point guaranteed to be within the region.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgPoint" /> that defines a point in the region.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgRegion.GetCoordinates">
            <summary>
             Returns an iterator over the coordinates included in this
             geometric entity.
            </summary>
            <returns> The coordinates of this geometric entity
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgRing">
            <summary>
            TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe)
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgRing.GetPointInRing">
            <summary>
             Gets a point guaranteed to be within the ring.
            </summary>
            <returns> An <see cref="T:OSGeo.MapGuide.MgPoint" /> that defines a point in the ring.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgRing.GetCoordinates">
            <summary>
             Returns an iterator over the coordinates included in this
             geometric entity.
            </summary>
            <returns> The coordinates of this geometric entity
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgTransform">
            <summary>
             <see cref="T:OSGeo.MapGuide.MgTransform" /> is an abstract class that can be implemented to
             provide linear or projected coordinate transformations. There
             are currently no concrete classes.
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgTransform.Transform(System.Double,System.Double)">
            <summary>
             Transforms the X and Y ordinates and returns a new coordinate.
            </summary>
            <param name="x">
             (double) The X ordinate to transform.
            </param>
            <param name="y">
             (double) The Y ordinate to transform.
            </param>
            <returns> A new <see cref="T:OSGeo.MapGuide.MgCoordinate" /> defined by the transformed X and Y ordinates.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgTransform.Transform(System.Double,System.Double,System.Double)">
            <summary>
             Transforms the X, Y, and Z ordinates and returns a new coordinate.
            </summary>
            <param name="x">
             (double) The X ordinate to transform.
            </param>
            <param name="y">
             (double) The Y ordinate to transform.
            </param>
            <param name="z">
             (double) The Z ordinate to transform.
            </param>
            <returns> A new <see cref="T:OSGeo.MapGuide.MgCoordinate" /> defined by the transformed X, Y, and Z ordinates.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgTransform.Transform(OSGeo.MapGuide.MgCoordinate)">
            <summary>
             Transforms the coordinate and returns a new coordinate.
            </summary>
            <param name="coordinate">
             (<see cref="T:OSGeo.MapGuide.MgCoordinate" />) The input <see cref="T:OSGeo.MapGuide.MgCoordinate" /> to transform.
            </param>
            <returns> A new <see cref="T:OSGeo.MapGuide.MgCoordinate" /> transformed from the specified coordinate.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgTransform.Transform(OSGeo.MapGuide.MgEnvelope)">
            <summary>
             Transforms the envelope and returns a new envelope.
            </summary>
            <param name="envelope">
             (<see cref="T:OSGeo.MapGuide.MgEnvelope" />) The input <see cref="T:OSGeo.MapGuide.MgEnvelope" /> to transform.
            </param>
            <returns> A new <see cref="T:OSGeo.MapGuide.MgEnvelope" /> transformed from the specified envelope.
            </returns>
        </member>
        <member name="T:OSGeo.MapGuide.MgWktReaderWriter">
            <summary>
             Translates a string in AGF (Autodesk Geometry Format) Text
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgWktReaderWriter.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:OSGeo.MapGuide.MgWktReaderWriter.Read(System.String)">
            <summary>
             Reads a geometry object from an AGF Text format.
            </summary>
            <param name="wkt">
             (String/string) A string that supplies the AGF Text representation.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgGeometry" /> that corresponds to the specified
              AGF Text.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgWktReaderWriter.Read(System.String,OSGeo.MapGuide.MgTransform)">
            <summary>
             Reads a geometry object from a string in WKT format applying
             the specified transform during the read.
            </summary>
            <param name="wkt">
             (String/string) A string that supplies the WKT representation.
            </param>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) An <see cref="T:OSGeo.MapGuide.MgTransform" /> that is used to transform each coordinate read from the WKT representation.
            </param>
            <returns> An instance of <see cref="T:OSGeo.MapGuide.MgGeometry" /> that corresponds to the specified WKT with
              the specified transform applied.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgWktReaderWriter.Write(OSGeo.MapGuide.MgGeometry)">
            <summary>
             Writes a geometry object to a string in AGF Text format.
            </summary>
            <param name="geometry">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) An <see cref="T:OSGeo.MapGuide.MgGeometry" /> object to write to AGF Text.
            </param>
            <returns> A string that contains the AGF Text representation.
            </returns>
        </member>
        <member name="M:OSGeo.MapGuide.MgWktReaderWriter.Write(OSGeo.MapGuide.MgGeometry,OSGeo.MapGuide.MgTransform)">
            <summary>
             Writes a geometry object to a string in WKT format applying
             the specified transform during the write.
            </summary>
            <param name="geometry">
             (<see cref="T:OSGeo.MapGuide.MgGeometry" />) An <see cref="T:OSGeo.MapGuide.MgGeometry" /> object to write to WKT.
            </param>
            <param name="transform">
             (<see cref="T:OSGeo.MapGuide.MgTransform" />) An <see cref="T:OSGeo.MapGuide.MgTransform" /> that is used to transform each coordinate written to the WKT representation.
            </param>
            <returns> A string that contains the transformed WKT representation.
            </returns>
        </member>
    </members>
</doc>
