//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FdoToolbox.AddInManager {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FdoToolbox.AddInManager.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string AddInManager_About {
            get {
                return ResourceManager.GetString("AddInManager.About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel deinstallation.
        /// </summary>
        internal static string AddInManager_ActionCancelDeinstallation {
            get {
                return ResourceManager.GetString("AddInManager.ActionCancelDeinstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel installation.
        /// </summary>
        internal static string AddInManager_ActionCancelInstallation {
            get {
                return ResourceManager.GetString("AddInManager.ActionCancelInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel update.
        /// </summary>
        internal static string AddInManager_ActionCancelUpdate {
            get {
                return ResourceManager.GetString("AddInManager.ActionCancelUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable.
        /// </summary>
        internal static string AddInManager_ActionDisable {
            get {
                return ResourceManager.GetString("AddInManager.ActionDisable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable.
        /// </summary>
        internal static string AddInManager_ActionEnable {
            get {
                return ResourceManager.GetString("AddInManager.ActionEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string AddInManager_ActionInstall {
            get {
                return ResourceManager.GetString("AddInManager.ActionInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        internal static string AddInManager_ActionUninstall {
            get {
                return ResourceManager.GetString("AddInManager.ActionUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        internal static string AddInManager_ActionUpdate {
            get {
                return ResourceManager.GetString("AddInManager.ActionUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dependency for this AddIn was not found. Install it to enable this AddIn..
        /// </summary>
        internal static string AddInManager_AddInDependencyFailed {
            get {
                return ResourceManager.GetString("AddInManager.AddInDependencyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string AddInManager_AddInDisabled {
            get {
                return ResourceManager.GetString("AddInManager.AddInDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddIn will be enabled after restarting FDO Toolbox.
        /// </summary>
        internal static string AddInManager_AddInEnabled {
            get {
                return ResourceManager.GetString("AddInManager.AddInEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddIn will be installed after restarting FDO Toolbox.
        /// </summary>
        internal static string AddInManager_AddInInstalled {
            get {
                return ResourceManager.GetString("AddInManager.AddInInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This AddIns is installed twice. Please uninstall one  copy..
        /// </summary>
        internal static string AddInManager_AddInInstalledTwice {
            get {
                return ResourceManager.GetString("AddInManager.AddInInstalledTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddIn will be removed after restarting FDO Toolbox.
        /// </summary>
        internal static string AddInManager_AddInRemoved {
            get {
                return ResourceManager.GetString("AddInManager.AddInRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddIn will be updated after restarting FDO Toolbox.
        /// </summary>
        internal static string AddInManager_AddInUpdated {
            get {
                return ResourceManager.GetString("AddInManager.AddInUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddIn will be disabled after restarting FDO Toolbox.
        /// </summary>
        internal static string AddInManager_AddInWillBeDisabled {
            get {
                return ResourceManager.GetString("AddInManager.AddInWillBeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aborts the deinstallation of the selected AddIn(s)..
        /// </summary>
        internal static string AddInManager_DescriptionCancelDeinstallation {
            get {
                return ResourceManager.GetString("AddInManager.DescriptionCancelDeinstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aborts the installation of the selected AddIn(s)..
        /// </summary>
        internal static string AddInManager_DescriptionCancelInstall {
            get {
                return ResourceManager.GetString("AddInManager.DescriptionCancelInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aborts the update of the selected AddIn(s)..
        /// </summary>
        internal static string AddInManager_DescriptionCancelUpdate {
            get {
                return ResourceManager.GetString("AddInManager.DescriptionCancelUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables the selected AddIn(s)..
        /// </summary>
        internal static string AddInManager_DescriptionDisable {
            get {
                return ResourceManager.GetString("AddInManager.DescriptionDisable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the selected AddIn(s)..
        /// </summary>
        internal static string AddInManager_DescriptionEnable {
            get {
                return ResourceManager.GetString("AddInManager.DescriptionEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selection is inconsistent, please select only AddIns with the same status..
        /// </summary>
        internal static string AddInManager_DescriptionInconsistentSelection {
            get {
                return ResourceManager.GetString("AddInManager.DescriptionInconsistentSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddIn Installation Package.
        /// </summary>
        internal static string AddInManager_FileAssociation {
            get {
                return ResourceManager.GetString("AddInManager.FileAssociation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FDO Toolbox AddIns|*.addin;*.sdaddin|All files|*.*.
        /// </summary>
        internal static string AddInManager_FileFilter {
            get {
                return ResourceManager.GetString("AddInManager.FileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Install AddIn.
        /// </summary>
        internal static string AddInManager_InstallButton {
            get {
                return ResourceManager.GetString("AddInManager.InstallButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have any AddIns installed.
        ///
        ///Download an AddIn from the Internet, then click &apos;Install AddIn&apos; and choose the downloaded file to install it..
        /// </summary>
        internal static string AddInManager_NoAddInsInstalled {
            get {
                return ResourceManager.GetString("AddInManager.NoAddInsInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Website.
        /// </summary>
        internal static string AddInManager_OpenWebsite {
            get {
                return ResourceManager.GetString("AddInManager.OpenWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        internal static string AddInManager_Options {
            get {
                return ResourceManager.GetString("AddInManager.Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddIns are required by:.
        /// </summary>
        internal static string AddInManager_RequiredBy {
            get {
                return ResourceManager.GetString("AddInManager.RequiredBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required dependencies:.
        /// </summary>
        internal static string AddInManager_RequiredDependencies {
            get {
                return ResourceManager.GetString("AddInManager.RequiredDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show preinstalled AddIns.
        /// </summary>
        internal static string AddInManager_ShowPreinstalledAddIns {
            get {
                return ResourceManager.GetString("AddInManager.ShowPreinstalledAddIns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-In Manager.
        /// </summary>
        internal static string AddInManager_Title {
            get {
                return ResourceManager.GetString("AddInManager.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-In Manager.
        /// </summary>
        internal static string CMD_AddInManager {
            get {
                return ResourceManager.GetString("CMD_AddInManager", resourceCulture);
            }
        }
    }
}
